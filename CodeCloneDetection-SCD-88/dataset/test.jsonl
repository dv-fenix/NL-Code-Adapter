{"label": 69, "index": 8840, "code": "def ss(st):\n    flag = True\n    \n    if len(st) % 2 != 0:\n        flag = False\n    else:\n        n = len(st) // 2\n        for i in range(n):\n            if st[i] != st[i+n]:\n                flag = False\n                break\n    return flag\n\nS = input()\nfor i in range(len(S)-1, 0, -1):\n    temp = S[0:i]\n    if ss(temp):\n        print(len(temp))\n        break"}
{"label": 69, "index": 8841, "code": "\n\na=input()\nnum=len(a)\n\nnum=num-2\n\n\nfor i in range(num,0,-1):\n    a=a[:i]\n    nums=int(i/2)\n    s=a[:nums]\n    if str(s)*2==str(a):\n        print(len(a))\n        break\n\n\n"}
{"label": 69, "index": 8842, "code": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nfrom __future__ import division, print_function\nimport sys\n\n\ndef main():\n    s = sys.stdin.readline().strip()\n    while True:\n        s = s[:-2]\n        i = len(s) // 2\n        a = s[:i]\n        b = s[i:]\n        if a == b:\n            print(len(s))\n            return\n\n\nif __name__ == '__main__':\n    main()\n"}
{"label": 69, "index": 8843, "code": "def main():\n    S = input().strip()\n    for i in range(2, len(S), 2):\n        part = S[:-i]\n        p = len(part) // 2\n        if part[:p] == part[p:]:\n            print(p * 2)\n            break\n\nif __name__ == '__main__':\n    main()\n"}
{"label": 69, "index": 8844, "code": "S = input()\nwhile True:\n    S = S[:-1]\n    if len(S)%2==0:\n        if S[0:int(len(S)/2)] == S[int((len(S)/2)):]:\n            print(len(S))\n            break"}
{"label": 69, "index": 8845, "code": "# -*- coding:utf-8 -*-\ns = input()[:-1]\n\nwhile True:\n    l = len(s)\n    if s[:l//2] == s[l//2:]:\n        break\n    s = s[:-1]\n\nprint(len(s))\n"}
{"label": 69, "index": 8846, "code": "# coding: utf-8\n\ndef is_even(s):\n    return s[:int(len(s)/2)] == s[int(len(s)/2):]\n\nss = input()\ndiff = 2\nwhile True:\n    if is_even(ss[:len(ss) - diff]):\n        break\n    else:\n        diff += 2\n\nprint(len(ss) - diff)\n"}
{"label": 69, "index": 8847, "code": "S = input()\nN = len(S) - 2\nif N % 2 == 1:\n    N += 1\nM = N // 2\nwhile 1:\n    if S[:M] == S[M:N]:\n        print(N)\n        exit()\n    N -= 2\n    M -= 1\n"}
{"label": 69, "index": 8848, "code": "S = input()\nT = list(S)\nflag = 0\n\nwhile flag == 0:\n\tdel T[len(T)-1]\n\tdel T[len(T)-1]\n\tif T[0:len(T)//2] == T[len(T)//2:len(T)]:\n\t\tflag = 1\n\t\tprint(len(T))\n"}
{"label": 69, "index": 8849, "code": "# coding: utf-8\ndef get_ln_inputs():\n    return input().split()\n\n\ndef get_ln_int_inputs():\n    return list(map(int, get_ln_inputs()))\n\n\ndef is_ev_st(s):\n    l = len(s)\n    if l % 2 == 1:\n        return False\n    l2 = int(l / 2)\n    return s[:l2] == s[l2:]\n\n\ndef main():\n    S = get_ln_inputs()[0][:-1]\n    while not is_ev_st(S):\n        S = S[:-1]\n    print(len(S))\n\n\nmain()"}
{"label": 69, "index": 8850, "code": "def isEvenstring(s):\n\tl = len(s)\n\tcenter = int(l/2)\n\tif l%2 == 0:\n\t\treturn s[:center]==s[center:]\n\n\telse:\n\t\treturn False\n\n\n\n\nif __name__ == '__main__':\n\tstring = input()\n\tl = len(string)\n\tfor i in range(1, l):\n\t\tif isEvenstring(string[:-i]):\n\t\t\tprint (l - i)\n\t\t\tbreak\n"}
{"label": 69, "index": 8851, "code": "s = input()\nn = len(s)\ndef iseven(str, n):\n    for i in range(0, n//2):\n        if str[i] != str[i+n//2]:\n            return False\n    else:\n        return True\n\n\nfor i in range(2, n, 2):\n    if iseven(s, n-i):\n        print(n-i)\n        break\n"}
{"label": 69, "index": 8852, "code": "def check_gu(s):\n    n = len(s)\n    if n%2!=0:\n        return False\n    return s[:n//2] == s[n//2:]\n\nif __name__ == '__main__':\n    s=input()\n\n    for i in range(1,len(s)):\n        ss = s[:len(s)-i]\n        if(check_gu(ss)):\n            print(len(ss))\n            break\n"}
{"label": 69, "index": 8853, "code": "s = raw_input()\ni = len(s) - 2\nwhile(len(s)):\n    if i % 2 == 0 and s[0:i/2] == s[i/2:i]:\n        print i\n        break\n    i-=1"}
{"label": 69, "index": 8854, "code": "s = input()\ns= s[:-2]\n \nwhile(True):\n    s1, s2 = s[0:len(s)//2], s[len(s)//2:len(s)+1]\n    if s1 == s2:\n        print(len(s1)*2)\n        break\n \n    s = s[:-2]"}
{"label": 69, "index": 8855, "code": "import sys\n\nS = input()\nn = len(S) // 2\n\nfor i in range(1, n):\n    if S[0:n - i] == S[n - i: 2 * n - 2 * i]:\n        print((n - i) * 2)\n        sys.exit()\n"}
{"label": 69, "index": 8856, "code": "s = raw_input()\n\ndef is_rep(s0):\n    l = len(s0)/2\n    s1 = s0[:l]\n    s2 = s0[l:]\n    return s1 == s2\n\nl = len(s)\nwhile True:\n    l -= 2\n    if is_rep(s[:l]):\n        break\nprint l\n"}
{"label": 69, "index": 8857, "code": "S = raw_input()\nn = len(S)\n\nans = 0\nfor k in range((n+1)/2):\n    if S[:k] == S[k:2*k]:\n        ans = k * 2\nprint ans\n"}
{"label": 69, "index": 8858, "code": "# -*- coding: utf-8 -*-\n\ns = raw_input()\nflg = 1\nslen = len(s)\nwhile(flg):\n    s = s[:slen-2]\n    slen = len(s)\n    m = slen/2\n    if(s[:m]==s[m:]):\n        print(2*m)\n        flg = 0"}
{"label": 69, "index": 8859, "code": "s=raw_input()\nfor j in range(len(s)-1,-1,-1):\n    p=s[:j]\n    if len(p)%2==0:\n        s1=p[:len(p)/2]\n        s2=p[len(p)/2:]\n        if s1==s2:\n            print j\n            exit()"}
{"label": 69, "index": 8860, "code": "S = input()\nS = S[:int(len(S)-1)]\nwhile True:\n\t\n\tif S[:int(len(S)/2)] == S[int(len(S)/2):]:\n\t\tprint(int(len(S)))\n\t\tbreak\n\telse:\n\t\tS = S[:int(len(S)-1)]"}
{"label": 69, "index": 8861, "code": "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\nmod = 10**9 + 7\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\n\n\ndef main():\n    s = S()\n    e = set()\n    r = len(s)\n    for i in range(r-2,-1,-2):\n        if s[:i//2] == s[i//2:i]:\n            return i\n    return -1\n\n\nprint(main())\n\n\n\n"}
{"label": 69, "index": 8862, "code": "s = input()\nrm=0\nfor i in range(len(s)):\n    if len(s)%2 !=0:\n        s = s[:-1]\n        rm += 1\n        continue\n    if s[0:len(s)//2] == s[len(s)//2:len(s)] and rm > 0:\n        break\n    else:\n        s = s[:-1]\n        rm += 1\nprint(len(s))"}
{"label": 69, "index": 8863, "code": "def main():\n    S = input()\n\n    s = S\n    while True:\n        s = s[:-2]\n        l = len(s) // 2\n        if s[:l] == s[l:]:\n            ans = len(s)\n            break\n\n    print(ans)\n\nmain()\n"}
{"label": 69, "index": 8864, "code": "string = input()\n\nif len(string)%2==0 :\n    string = string[:-2]\nelse :\n    string = string[:-3]\nlength = len(string)\n\nwhile length>0 :\n    if string[:length//2]==string[length//2:] :\n        print(length)\n        break\n    length -= 2\n    string = string[:-2]"}
{"label": 69, "index": 8865, "code": "S=str(input())\ns=len(S)\nfor i in range(1,s):\n  if (s-i)%2==0 and S[0:int((s-i)/2)]==S[int((s-i)/2):s-i]:\n    print(int((s-i)))\n    break"}
{"label": 69, "index": 8866, "code": "s = input()\n\nif len(s) % 2 != 0:\n    s = s[:len(s)-1]\nelse:\n    s = s[:len(s)-2]\n\nfor i in range(len(s)//2):\n    if s[:len(s)//2-i] == s[len(s)//2-i:len(s)-2*i]:\n        print(len(s)-2*i)\n        exit()\n"}
{"label": 69, "index": 8867, "code": "s = input()\nfor i in range(1, len(s)):\n    if((len(s)-i) % 2 == 0):\n        ans = len(s) - i\n        if(s[0:ans//2] == s[ans//2:ans]):\n            print(ans)\n            break\n"}
{"label": 69, "index": 8868, "code": "S = input()\nS = S[:-1]\nwhile True:\n\tif len(S) % 2 == 0:\n\t\thalflen = int(len(S) / 2)\n\t\tif S[:halflen] == S[halflen:]:\n\t\t\tprint(len(S))\n\t\t\tbreak\n\tS = S[:-1]"}
{"label": 69, "index": 8869, "code": "S=input()\ns=S[0:-1]\n\ni=0\nL=[]\n\nfor i in range(len(s)):\n    \n    \n    if s[0:i]==s[i:(2*i)]:\n        L.append(2*i)\n    \nprint(max(L))\n"}
{"label": 69, "index": 8870, "code": "s = list(str(input()))\ns = s[:-2]\nwhile s[:(len(s)//2)]!=s[(len(s)//2):]:\n    s = s[:-2]\nprint(len(s))"}
{"label": 69, "index": 8871, "code": "char = input()\nchar = char[0:-1]\nwhile(1):\n    if char[:(len(char)//2)] == char[len(char)//2:]:\n        break\n    else :\n        char = char[0:-1]\nprint(len(char))"}
{"label": 69, "index": 8872, "code": "s = input()\n\nwhile True:\n    s = s[:-2]\n    n = len(s)\n    w1 = s[:int(n / 2)]\n    w2 = s[int(n / 2):]\n    if w1 == w2:\n        print(n)\n        break"}
{"label": 69, "index": 8873, "code": "moji = input()\ndef isEvenStr(moji):\n\tlength = len(moji)\n\tif length % 2 == 1:\n\t\treturn None\n\telse:\n\t\tfirsthalf = moji[0:int(length/2)]\n\t\tlatterhalf = moji[int(length/2):int(length)]\n\t\treturn firsthalf == latterhalf\n\nfor i in range(len(moji)-1,0,-1):\n\ttrimmed = moji[0:i]\n\tisEven = isEvenStr(trimmed)\n\tif isEven:\n\t\tprint(i)\n\t\tbreak\n"}
{"label": 69, "index": 8874, "code": "S = input()\n\nfor i in range(1, len(S)):\n    if len(S[:-i]) % 2 == 1:\n        continue\n    if S[:int(len(S[:-i])/2)] == S[int(len(S[:-i])/2):-i]:\n        ans = len(S[:int(len(S[:-i]))])\n        break\nprint(ans)"}
{"label": 69, "index": 8875, "code": "s = raw_input()\nfor i in range(len(s)-2, 0, -2):\n    t = s[0:i/2]\n    u = s[i/2:i]\n    if t == u:\n        print i\n        break\n"}
{"label": 69, "index": 8876, "code": "if(__name__ ==\"__main__\"):\n    S = input()\n    for i in range(1,len(S)):\n        tmp = S[:-i]\n        tmplen = len(tmp)\n        #print(tmplen)\n        if(tmplen % 2 == 0):\n            #print(tmp[:int(tmplen/2)])\n            if(tmp[:int(tmplen/2)] == tmp[int(tmplen/2):]):\n                print(tmplen)\n                break"}
{"label": 69, "index": 8877, "code": "S = input()\n\nans = len(S) - 2\nwhile ans:\n    if S[0:(ans // 2)] == S[(ans // 2):ans]:\n        break\n\n    ans -= 2\n\nprint(ans)\n"}
{"label": 69, "index": 8878, "code": "S = input()\n\nif len(S) % 2 == 1:\n    S = S[:-1]\n\nflag = 0\nwhile flag == 0:\n    S = S[:-2]\n    ans = int(len(S) / 2)\n    same_char = 0\n    i = 0\n    while i < ans:\n        if S[i] == S[ans + i]:\n            same_char += 1\n        else:\n            break\n        i += 1\n    if ans == same_char:\n        flag = 1\n\nprint(len(S))"}
{"label": 69, "index": 8879, "code": "S = input()\nfor i in range(len(S)-1, 0, -1):\n    str = S[0:i]\n    if str[0:int(len(str)/2)] == str[int(len(str)/2):]:\n        print(len(str))\n        break\n"}
{"label": 69, "index": 8880, "code": "S = raw_input()\n\nS=S[:-2]\nmid=len(S)/2\nSf=S[:mid]\nSl=S[mid:]\n\nwhile Sf!=Sl:\n  S=S[:-2]\n  mid=len(S)/2\n  Sf=S[:mid]\n  Sl=S[mid:]\n\nprint(len(S))\n"}
{"label": 69, "index": 8881, "code": "# -*- coding:utf-8 -*-\ns = input()\nsub = 0\nfor tmp in reversed(range(1,len(s)-2,2)):\n    factor = s[0:tmp+1]\n    sub += 2\n    if factor[0:int(len(factor)/2)] == factor[int(len(factor)/2):len(factor)]:\n        break\n    else:\n        pass\nprint(len(s)-sub)"}
{"label": 69, "index": 8882, "code": "def check(s):\n    if len(s)%2 !=0:\n        return False\n    i=int(len(s)/2)\n    s1=s[:i]\n    s2=s[i:]\n    return s1==s2\n\ns = input()\nwhile True:\n    s = s[:len(s)-1]\n    if check(s):\n        print(len(s))\n        break\n"}
{"label": 69, "index": 8883, "code": "S = raw_input()\nflag = 0\nS = S[:-1]\nwhile(len(S) > 0):\n  if len(S) % 2 == 1:\n     S = S[:-1]\n  else:\n     a = S[:len(S)/2]\n     b = S[len(S)/2:]\n     if a == b:\n        ans = S\n        break\n     S = S[:-1]\nprint len(S)"}
{"label": 69, "index": 8884, "code": "S = str(input())\nS = S[:-1]\n \nhantei = False\nwhile hantei == False:\n    if len(S) % 2 == 1:\n        S = S[:-1]\n    else:\n        half = int(len(S)/2)\n        last = int(len(S))\n        if S[0:half] == S[half:last]:\n            print(last)\n            hantei = True\n        else:\n            S = S[0:-1]\n"}
{"label": 69, "index": 8885, "code": "def check(s):\n    l = len(s)\n    return True if s[:l / 2] == s[l / 2:] else False\n\n\nS = raw_input()[:-1]\nif len(S) % 2 != 0:\n    S = S[:-1]\nL = len(S)\nfor i in range(L):\n    if check(S):\n        break\n    else:\n        S = S[:-2]\n\nprint len(S)\n"}
{"label": 69, "index": 8886, "code": "a = input().strip()\nfor i in range((len(a))//2-1,0,-1):\n   if a[:i] == a[i:2*i]:\n      print(2 * i)\n      break"}
{"label": 69, "index": 8887, "code": "# -*- coding: utf-8 -*-\ndef check_word(word):\n    return word[:int(len(word)/2)] == word[int(len(word)/2):len(word)]\n\na = input()\ncount = 0\nfor i in range(1, len(a)):\n    b = a[:-i]\n    if check_word(b):\n        count = len(b)\n        break\nprint(count)"}
{"label": 69, "index": 8888, "code": "#s = list(input())\ns = input()\nn = len(s)\ncount = 1   #\u6d88\u3057\u305f\u6570\n \nif n % 2 == 1 - count:\n    count += 1\n \nwhile s[0 : int((n-count)/2)] != s[int((n-count)/2) : n-count]:\n    count += 2\n \nprint(n-count)"}
{"label": 69, "index": 8889, "code": "from collections import deque\ndef main():\n    s=deque(input())\n    for i in range(0,len(s)):\n        s.pop()\n        if len(s)%2==1:\n            continue\n        else:\n            if \"\".join(s)[0:len(s)//2]==\"\".join(s)[len(s)//2:len(s)]:\n                print(len(s))\n                break;\nif __name__=='__main__':\n    main()\n"}
{"label": 69, "index": 8890, "code": "def f(x):\n    return len(x) % 2 == 0 and x[:len(x)//2] == x[len(x)//2:]\n \nx=input()[:-1]\nwhile not f(x):\n    x=x[:-1]\n \nprint(len(x))"}
{"label": 69, "index": 8891, "code": "S = input()\nl = len(S)\n\nfor i in range(1, l//2):\n  if S[:l//2-i] == S[l//2-i:l-2*i]:\n    print(l-2*i)\n    break"}
{"label": 69, "index": 8892, "code": "#! /usr/bin/env python3\n\ns = input()[::-1]\ns = s[1:]\ns = s[len(s) % 2:]\nfor i in range(0, len(s), 2):\n    t = s[:len(s) // 2]\n    if s == t * 2:\n        print(len(s))\n        break\n    s = s[2:]\n"}
{"label": 69, "index": 8893, "code": "S=str(input())\ns=len(S)\nfor i in range(1,s):\n if (s-i)%2==0 and S[0:int((s-i)/2)]==S[int((s-i)/2):s-i]:\n  print (int(s-i))\n  break"}
{"label": 69, "index": 8894, "code": "#ss\ns = input() \nif ( len(s)%2 ==1 ):\n    s = s[:-1]\nelse:\n    s = s[:-2]\n\nwhile 1:\n    l = int(len(s)/2)\n    if (s[:l]==s[l:] ):\n        print(l*2)\n        break\n    else:\n        s = s[:-2]\n    if ( len(s)==0 ):\n        break"}
{"label": 69, "index": 8895, "code": "s=input()\nwhile True:\n    s=s[:-1]\n    l=len(s)\n    if(l%2==1):\n        continue\n    else:\n        if(s[:int(l/2)]==s[int(l/2):]):\n            print(l)\n            break"}
{"label": 69, "index": 8896, "code": "\ndef main():\n    msg = input()\n    msg = msg[:-1]\n    if len(msg) % 2 != 0:\n        msg = msg[:-1]\n    while len(msg) >= 2:\n        before = msg[:int(len(msg) / 2)]\n        after = msg[int(len(msg) / 2):]\n        if before == after:\n            print(len(msg))\n            break\n        msg = msg[:-2]\n\n\nif __name__ == '__main__':\n    main()"}
{"label": 69, "index": 8897, "code": "str=input()\nk=len(str)\nstr=str[0:k-2]\nwhile True:\n    n=int(len(str)/2)\n    a=str[:n]\n    b=str[n:]\n    if a==b:\n        print(len(a)*2)\n        break\n    k=len(str)\n    str=str[0:k-2]\n"}
{"label": 69, "index": 8898, "code": "s=input()\nfor i in range(len(s)):\n\tif s[0:i//2]==s[i//2:i]:\n\t\tans=i\nprint(ans)"}
{"label": 69, "index": 8899, "code": "letters = input()\nwhile True:\n    not_equal = 0\n    length = len(letters)\n    letters = letters[:length-1]\n    if len(letters) % 2 != 0:\n        continue\n\n    if int(len(letters)) % 2 == 0:\n        half = int(len(letters)/2 -1)\n    else:\n        half = int((len(letters)-1)/2)\n    i = 0\n    while i <= half:\n        if letters[i] != letters[i + half + 1]:\n            not_equal = 1\n            break\n        i += 1\n\n    if not_equal == 0:\n        print(len(letters))\n        break\n"}
{"label": 69, "index": 8900, "code": "import sys\ndef judge(s):\n    if len(s)%2 == 1:\n        return False\n    half = len(s)//2\n    for i in range(half):\n        if s[i] != s[i+half]:\n            return False\n    return True\n\nS = input()\nfor i in range(1,len(S)):\n    if judge(S[:-i]):\n        print(len(S[:-i]))\n        sys.exit()\nprint(0)\n"}
{"label": 69, "index": 8901, "code": "# coding: utf-8\n\nimport numpy as np\n\nif __name__==\"__main__\":\n    s = input().replace(\"\\n\", \"\")\n    n = len(s)\n    ss = \"\"\n    if n%2 == 1:\n        s = s[0:n-1]\n        n = len(s)\n    elif n%2 == 0:\n        s = s[0:n-2]\n        n = len(s)\n\n    for i in list(range(0,n,2)):\n        ss = s[0:n-i]\n        m = len(ss)\n        if ss[0:int(m/2)] == ss[int(m/2):m]:\n            print(len(ss))\n            break\n\n"}
{"label": 69, "index": 8902, "code": "def even(s):\n    if len(s) % 2 != 0: return False\n    a = s[:len(s)//2]\n    return 2*a == s\n\ns = list(input())\ns.pop()\nwhile not even(s): s.pop()\nprint(len(s))"}
{"label": 69, "index": 8903, "code": "import sys\nS = list(input())\n\nans = len(S)\nif len(S)%2 == 1 :\n    S = S[0:-1]\n    ans -= 1\n    if S[0:ans//2] == S[ans//2:] :\n        print(ans)\n        sys.exit()\n\nwhile len(S) > 0 :\n    S = S[0:-2]\n    ans -= 2\n    if S[0:ans//2] == S[ans//2:] :\n        print(ans)\n        sys.exit()\nelse :\n    print(ans)"}
{"label": 69, "index": 8904, "code": "S = list(input())[:-1]\n\nwhile True:\n  S.pop()\n\n  if len(S) % 2 != 0:\n    continue\n\n  if S[:len(S) // 2] * 2 == S:\n    break\n\nprint(len(S))\n"}
{"label": 69, "index": 8905, "code": "import math\n\n\ndef f():\n    a  = input()\n    for i in range(1,len(a)):\n        l = len(a) - i\n        if l%2==1:\n            continue\n        d = l//2\n        \n        if a[:d] == a[d:-i]:\n            print(d*2)\n            return \n        \nf()\n"}
{"label": 69, "index": 8906, "code": "s = input()\n\nfor i in range(len(s)):\n    s = s[:-1]\n    if len(s) % 2 == 1:\n        continue\n    ss = s[len(s)//2:]\n    flag = True\n    for j in range(len(ss)):\n        if ss[j] != s[j]:\n            flag = False\n            break\n    if flag:\n        print(len(s))\n        break\n    s = s[:-1]"}
{"label": 69, "index": 8907, "code": "# -*- coding: utf-8 -*-\ns = input()\nN = len(s)\n\nfor i in range(1, N):\n    if i % 2 == 1:\n        continue\n    a = s[:((N-i)//2)]\n    b = s[((N-i)//2):(N-i)]\n    if a == b:\n        print(N-i)\n        break\n"}
{"label": 69, "index": 8908, "code": "# -*- coding: utf-8 -*-\n\n#-------\n# Initialize\nS = str(input())[:-1]\n\n#-------\n# Define\ndef check(s):\n    if len(s) % 2 == 1:\n        return False\n    if (s[:int(len(s)/2)] == s[int(len(s)/2):]):\n        return True\n    else:\n        return False\n\n#-------\n# Do\nwhile (len(S) > 0):\n    if check(S):\n        print(len(S))\n        break\n    else:\n        S = S[:-1]\n\n\n#-------\n# Output\n"}
{"label": 69, "index": 8909, "code": "def main():\n    s = input()\n\n    length = None\n    for i in range(1, len(s)-1):\n        tmp = s[:len(s)-i]\n        if len(tmp)%2 != 0:\n            continue\n        elif tmp[:len(tmp)//2] == tmp[len(tmp)//2:]:\n            length = len(tmp)\n            break\n    print(length)\n    \n\nif __name__ == \"__main__\":\n    main()"}
{"label": 69, "index": 8910, "code": "s = raw_input()\np = len(s) - 2\nwhile(p>0):\n    if s[0:p/2] == s[p/2:p]:\n        break\n    p -= 2\nprint p\n"}
{"label": 69, "index": 8911, "code": "S = input()\nret = 0\nfor i in range(1, len(S) // 2):\n    if S[:i] * 2 == S[:i * 2]:\n        ret = i * 2\nprint(ret)\n"}
{"label": 69, "index": 8912, "code": "s = input()\n\ndef r(s):\n    l = len(s)\n    if(l%2 == 1):\n        return r(s[:-1])\n    elif(s[:int(l/2)] == s[int(l/2):]):\n        return len(s)\n    else:\n        return r(s[:-1])\nprint(r(s[:-1]))"}
{"label": 69, "index": 8913, "code": "str = input()\nwhile True:\n    str = str[:-2]\n    n = len(str)\n    if str[:int(n/2)] == str[int(n/2):]:\n        print(n)\n        break"}
{"label": 69, "index": 8914, "code": "s = input()\n\ns = s[:-1]\n\nif len(s) % 2 != 0:\n    s = s[:-1]\n\nwhile True:\n    if s[:len(s) // 2] == s[len(s) // 2:]:\n        print(len(s))\n        break\n    else:\n        s = s[:-2]\n"}
{"label": 69, "index": 8915, "code": "c=0\ni=0\nlist1=[]\nlist2=[]\n\n\nS = input('')\nchar_list = list(S)\nc = len (char_list)\nc= c-1\n#print(c)\n\nwhile c>1:\n\tif c % 2 == 0:\n\t\td=int(c/2)\n\t\t#print (d)\n\t\tfor i in range(d):\n\t\t\tlist1.append(char_list[i]) \n\t\t\tlist2.append(char_list[i+d])\n\t\t#print (list1)\n\t\t#print(list2)\n\n\t\tif list1 == list2:\n\t\t\tprint (len (list1)*2)\n\t\t\tbreak\n\n\t\tlist1=[]\n\t\tlist2=[]\n\tc=c-1"}
{"label": 69, "index": 8916, "code": "s = list(input())\nfor i in range(int(len(s)/2)-1):\n    s = s[:-2]\n    sep = int(len(s)/ 2)\n    a = s[:sep]\n    b = s[sep:]\n    if a == b:\n        print(int(len(a)*2))\n        break\n"}
{"label": 69, "index": 8917, "code": "N = input()\nfor i in range(1,len(N)):\n    num = (len(N)-i)//2\n    if N[:num] == N[num:len(N)-i]:\n        print(len(N[:num])*2)\n        break\n"}
{"label": 69, "index": 8918, "code": "import sys, math, itertools, collections, heapq\nsys.setrecursionlimit(10 ** 7)\npinf = float(\"inf\")\nninf = -float(\"inf\")\n\nslist = list(input())\n\ndef f(s):\n        l = len(s)\n        l2 = l // 2\n        if l % 2 != 0:\n                return 0\n        s1 = s[0:l2]\n        s2 = s[l2:]\n        if s1 == s2:\n                return l\n        else:\n                return 0\n\nif len(slist) == 2:\n        ans = f(slist)\n        if ans != 0:\n                print(1)\nelse:\n        while len(slist) >= 3:\n                slist.pop()\n                slist.pop()\n                ans = f(slist)\n                if ans != 0:\n                        print(ans)\n                        break"}
{"label": 69, "index": 8919, "code": "print(len(__import__(\"re\").search(r\"(.+)\\1\", input()[:-1]).group(0)))"}
{"label": 69, "index": 8920, "code": "data=list(map(str,input()))\ndel data[-1]\nwhile len(data):\n    m = len(data)//2\n    if data[:m]==data[m:]:\n        print(len(data))\n        break\n    del data[-1]\nelse:\n    print(0)"}
{"label": 69, "index": 8921, "code": "s = input()\nfor i in range(len(s)):\n    s = s[:-1]\n    h = int(len(s)/2)\n    if len(s) % 2 == 0:\n        if s[:h] == s[h:]:\n            print(len(s))\n            break\n"}
{"label": 69, "index": 8922, "code": "s=list(raw_input())\nwhile len(s) > 1:\n    s.pop()\n    left=\"\".join(s[:len(s)/2])\n    right=\"\".join(s[len(s)/2:])\n    if left == right:\n        print len(left+right)\n        exit()\nprint 0"}
{"label": 69, "index": 8923, "code": "doc = input()\nfor i in range(1,len(doc)):\n    tmp_doc = doc[:-i]\n    length = len(tmp_doc)\n    if length%2==0 and tmp_doc[:length//2] == tmp_doc[length//2:]:\n        print(length)\n        break"}
{"label": 69, "index": 8924, "code": "s = input()[:-2]\nl = len(s) // 2\ns1 = s[:l]\ns2 = s[l:]\nwhile s1 != s2:\n   s = s[:-2]\n   l = len(s) // 2\n   s1 = s[:l]\n   s2 = s[l:]  \nprint(len(s1 + s2))"}
{"label": 69, "index": 8925, "code": "s = input()\n\nwhile True:\n    s = s[:-1]\n    L = len(s)\n    if L%2 != 0:\n        continue\n\n    ok = True\n    for i in range(L//2):\n        if s[i] != s[L//2+i]:\n            ok = False\n    if ok:\n        break\n\nprint(len(s))\n"}
{"label": 69, "index": 8926, "code": "s = input()\ns= s[:-2]\n \nwhile(True):\n    s1, s2 = s[0:len(s)//2], s[len(s)//2:len(s)]\n    if s1 == s2:\n        print(len(s1)*2)\n        break\n \n    s = s[:-2]"}
{"label": 69, "index": 8927, "code": "s = input()\ns = s[:len(s) - 1]\nif len(s) % 2 != 0:\n\ts = s[:len(s) - 1]\n\nwhile True:\n\tmid = int(len(s) / 2)\n\tif s[:mid] == s[mid:]:\n\t\tprint(len(s))\n\t\tbreak\n\telse:\n\t\ts = s[:len(s) - 1]"}
{"label": 69, "index": 8928, "code": "s = input()[:-2]\nhalf = len(s)//2\n\nfor i in range(half):\n    t_h = len(s)//2\n    if s[:t_h] == s[t_h:]:\n        print(len(s))\n        break\n    else:\n        s = s[:-2]"}
{"label": 69, "index": 8929, "code": "s = input()\n\nlength = len(s) - 2\n\ndef guumoji(s):\n    length = len(s)\n\n    if s[:length//2] == s[length//2:]:\n        return True\n\n    return False\n\nwhile length > 0:\n    if guumoji(s[:length]):\n        break\n\n    length -= 2\n\nprint(length)"}
{"label": 69, "index": 8930, "code": "# -*- coding: utf-8 -*-\n\nS = raw_input()\n\nfor i in range(len(S)-2,0,-2):\n    if S[0:i/2] == S[i/2:i]:\n        print i\n        exit()\n"}
{"label": 69, "index": 8931, "code": "#Python\nimport sys\n\nS = raw_input()\n\nif len(S)%2==1:\n\tS=S[0:len(S)-1]\n\nif S[0:len(S)/2]==S[len(S)/2:]:\n\tS=S[0:len(S)-2]\n\n#print S\ncnt=len(S)\nwhile cnt>1:\n\t#print \"cnt:::\"+str(cnt)\n\tS1=S[0:len(S)/2]\n\tS2=S[len(S)/2:]\n\t#print S1\n\t#print S2\n\tif S1==S2:\n\t\tprint len(S)\n\t\tsys.exit()\n\n\tS=S[0:len(S)-2]\n\tcnt-=2\n"}
{"label": 69, "index": 8932, "code": "def solve(s):\n    L = len(s)\n    L -= 1\n    if L % 2 == 1:\n        L -= 1\n    while L >= 2:\n        if s[:L/2] == s[L/2:L]:\n            return L\n        L -= 2\n    return 0\n\n\ndef main():\n    s = raw_input().rstrip()\n    print solve(s)\n\n\nif __name__ == '__main__':\n    main()\n"}
{"label": 69, "index": 8933, "code": "S=raw_input()\n\ni=2\nwhile(i<=len(S)-2):\n    s=S[0:-1*i]\n    if s[0:len(s)/2]==s[len(s)/2:]:\n        print len(s)\n        break\n    i+=2\n\nif len(S)==2:\n    print 1"}
{"label": 69, "index": 8934, "code": "def ri(): return int(input())\ndef rli(): return list(map(int, input().split()))\ndef rls(): return list(input())\ndef pli(a): return \"\".join(list(map(str, a)))\n\ns = rls()\nif(len(s) % 2 == 1):\n    s.remove(s[-1])\nelse:\n    s = s[:-2]\nfor i in range(len(s) // 2):\n    if(s[:len(s)//2] == s[len(s)//2:]):\n        print(len(s))\n        break\n    s = s[:-2]"}
{"label": 69, "index": 8935, "code": "#!/usr/bin/python\n\nss = raw_input()\n\nwhile(True):\n  ss = ss[:-1]\n  leng = len(ss)\n  former = ss[:leng/2]\n  later  = ss[leng/2:]\n\n  if former == later:\n    leng = len(former) + len(later)\n    break\n\nprint(leng)"}
{"label": 69, "index": 8936, "code": "string = list(input())\nstring.pop()\nstring.pop()\nwhile \"\".join(string[:len(string) // 2]) != \"\".join(string[len(string) // 2:]):\n\t#print(\"\".join(string[:len(string) // 2]), \"\".join(string[len(string) // 2:]))\n\tstring.pop()\n\tstring.pop()\n# print(\"\".join(string[:len(string) // 2]), \"\".join(string[len(string) // 2:]))\nprint(len(string))"}
{"label": 69, "index": 8937, "code": "s = input()\ns_length = len(s)\n\nfor i in range(1, s_length):\n    if (s_length - i) % 2 != 0:\n        continue\n    mid = (s_length - i) // 2\n    if s[:mid] == s[mid:s_length-i]:\n        print(s_length - i)\n        break\nif s_length == 2:\n    print(2)"}
{"label": 69, "index": 8938, "code": "s = input()\nfor n in reversed(range(len(s)-1)):\n    if s[0:n//2] == s[n//2+1:n]:\n        print(n+1)\n        break"}
{"label": 69, "index": 8939, "code": "S = input()\nfor i in range(len(S) - 1, 0, -1):\n    if(S[0:i//2] == S[i//2:i]):\n        print(i)\n        break\n"}
{"label": 69, "index": 8940, "code": "S = input()\nL = len(S)\nif(L%2!=0):\n    L-=1\nelse:\n    L-=2\nfor i in range(L,0,-2):\n    if(S[0:(i//2)]==S[(i//2):i]):\n        print(i)\n        break\nelse:\n    print(\"0\")"}
{"label": 69, "index": 8941, "code": "S = input()\nwhile len(S) != 0:\n    S = S[:len(S)-1]\n    if len(S)%2 != 0:\n        continue\n    th = len(S)//2\n    if S[:th] == S[th:]:\n        print(2*len(S[:th]))\n        break"}
{"label": 69, "index": 8942, "code": "S=input()\ns=S[0:-1]\n\nfor i in range(len(s)-1,-1,-1):\n    if s[0:i]==s[i:(2*i)]:\n        print(2*i)\n        break\n        \n"}
{"label": 69, "index": 8943, "code": "#! -*- coding:utf-8 -*-\ns = str(input())\ns = list(s)\n#print(s)\na = 'x'\nb = 'x'\n\nfor i in range(len(s)):\n    s.pop()\n    if len(s) % 2 == 0:\n        a = s[:len(s)//2]\n        b = s[len(s)//2:]\n        if a == b:\n            print(len(s))\n            break\n"}
{"label": 69, "index": 8944, "code": "s=input()\n\nn=len(s)\n\ndef isok(s):\n    n=len(s)\n    if n%2==0:\n        m=int(n/2)\n        if s[0:m]==s[m:n]: return True\n    return False\n\nfor i in range(n-1,0,-1):\n    s=s[0:i]\n    if isok(s): print(i) ; break"}
{"label": 69, "index": 8945, "code": "S = input()\nn = len(S)\nfor i in range(n):\n\tX = S[0:-2 * (i + 1)]\n\tx = S[0:int(n / 2) - i - 1]\n\tif X == x + x:\n\t\tcount = i + 1\n\t\tbreak\n\nprint(n - count * 2)"}
{"label": 69, "index": 8946, "code": "S = list(input())\nn = len(S)\n\nfor i in range(n, 0, -1):\n    del S[len(S)-1]\n    if len(S)%2 == 0:\n        str1=\"\"\n        str2=\"\"\n        for j in range(int(len(S)/2)):\n            str1 = str1 + S[j]\n        for j in range(int(len(S)/2), len(S)):\n            str2 = str2 + S[j]\n        if str1 == str2:\n            print(len(S))\n            break\n"}
{"label": 69, "index": 8947, "code": "s = list(str(input()))\ns.pop(-1)\nif len(s) % 2 != 0:\n    s.pop(-1)\nwhile True:\n    if s[:len(s)//2] == s[len(s)//2:]:\n        print(len(s))\n        break\n    s.pop(-1)"}
{"label": 69, "index": 8948, "code": "ss = input()\nm = 0\nfor start in range(len(ss)//2):\n    for end in range(start, len(ss) - 1):\n        if len(ss[start:end]) > 0:\n            if ss[start:end] == ss[end:2*end - start]:\n                if (2*end - start) < len(ss):\n                    m = max(m, 2*len(ss[start:end]))\nprint(m)"}
{"label": 69, "index": 8949, "code": "S=str(input())\nL=len(S)\nfor i in range(1,L//2):\n    Strimed=S[:L-2*i]\n    Ltrimed=L-2*i\n    if Strimed[:Ltrimed//2]==Strimed[Ltrimed//2:]:\n        print(Ltrimed)\n        exit()\n"}
{"label": 69, "index": 8950, "code": "S = raw_input()\n\nfor i in range(len(S) - 1):\n    S = S[:-1]\n    if len(S) % 2 == 0:\n        if S[:len(S)/2] == S[len(S)/2:]:\n            break\n\nprint(len(S))"}
{"label": 69, "index": 8951, "code": "st=input()\nnum=len(st)\nfor x in range(1,num+1):\n    st = list(st)\n    del st[-1:]\n    st = \"\".join(st)\n    n=len(st)\n    if n%2==0:\n        p=int(n/2)\n        st1=st[:p]\n        st2=st[-p:]\n        if st1==st2:\n            print(len(st))\n            break\n        else:\n            continue\n    else:\n        continue\n"}
{"label": 69, "index": 8952, "code": "#!/usr/bin\n# -*- coding=\"utf-8\" -*-\n \ns = input()[:-1]\nsn = len(s)\n\nif sn % 2 == 1:\n  sn = sn -1\nfor i in range(sn, 0, -2):\n  if s[:i//2] == s[i//2:i]:\n    break\nprint(len(s[:i]))"}
{"label": 69, "index": 8953, "code": "s = input()\nfor i in range(len(s)-1, 0, -1):\n\tif i % 2 != 0:\n\t\tcontinue\n\t_i = int(i/2)\n\t_s1 = s[:_i]\n\t_s2 = s[_i:i]\n\tif _s1 == _s2:\n\t\tprint(i)\n\t\tbreak\n"}
{"label": 69, "index": 8954, "code": "import math\ninf=float('inf')\ns = input()\ns=s[:-1]\n\nif (len(s)%2==1):\n    s=s[:-1]\n\nN=len(s)\n\nfor i in range(N):\n    h=int(len(s)/2)\n    if (s[0:h-1]==s[h:-1]):\n\n        print(len(s))\n        quit()\n    s=s[:-2]\n\n\nquit()"}
{"label": 69, "index": 8955, "code": "from collections import defaultdict\nfrom itertools import product, groupby\nfrom math import pi\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right\nINF = 10 ** 10\n\n\ndef main():\n    S = input()\n    for i in range(len(S)):\n        T = S[:-i - 1]\n        if len(T) % 2 == 0 and T[len(T) // 2:] == T[:len(T) // 2]:\n            print(len(T))\n            break\n\n\nif __name__ == '__main__':\n    main()\n"}
{"label": 69, "index": 8956, "code": "# -*- coding: utf-8 -*-\n\"\"\"\nhttp://abc066.contest.atcoder.jp/tasks/abc066_b\n\n\"\"\"\nimport sys\nfrom sys import stdin\ninput = stdin.readline\n\n\ndef main(args):\n    txt = input().strip()\n    txt = txt[:-1]\n    # print(txt)\n    result = 0\n    if len(txt) % 2 == 1:\n        txt = txt[:-1]\n    while txt:\n        l = len(txt)\n        a_part = txt[:l//2]\n        b_part = txt[l//2:]\n        if a_part == b_part:\n            result = l\n            break\n        txt = txt[:-2]\n    print(result)\n\n\nif __name__ == '__main__':\n    main(sys.argv[1:])"}
{"label": 69, "index": 8957, "code": "S = list(input())\n\n\ndef check(i):\n    if i % 2 == 0:\n        return False\n\n    first = S[:i // 2 + 1]\n    tail = S[i // 2 + 1:i + 1]\n    return \"\".join(first) == \"\".join(tail)\n\n\nN = len(S) - 2\nans = -1\nfor i in range(N):\n    if check(i):\n        ans = i + 1\nprint(ans)\n"}
{"label": 69, "index": 8958, "code": "#coding=UTF-8\n\nS=input()\nSlen=len(S)\n\nfor idx in range(Slen-2,0-1,-2):\n    T=S[0:idx]\n\n    Tlen=len(T)\n    #hantei\n    for idy in range(0,Tlen//2,1):\n        if T[idy] !=T[Tlen//2+idy]:\n            break\n    else:\n        ans=idx\n        break\n\nprint(ans)\n"}
{"label": 69, "index": 8959, "code": "def find_even(text):\n    chars = list(text)\n    tail_index = (len(chars) + 1) // 2\n    pre = 0\n    while tail_index > 0:\n        tail_index -= 1\n        pre = 0\n        post = tail_index\n        while chars[pre] == chars[post]:\n            pre += 1\n            post += 1\n            if pre == tail_index:\n                return 2 * tail_index\n    raise(\"Error\")\n\nif __name__ == \"__main__\":\n    # run_test(find_even, test_pair)\n    print(find_even(raw_input()))"}
{"label": 69, "index": 8960, "code": "S = raw_input()\nfor i in range(1, len(S)):\n    s = S[:-i]\n    n = len(s)\n    if (n % 2 == 0) and (s[:n/2] == s[n/2:]):\n        print n\n        break"}
{"label": 69, "index": 8961, "code": "s = input()\n\nl = len(s)\n\nfor _ in range(200):\n\ts = s[:l-2]\n\tl = l - 2\n\tif s[:l//2] == s[l//2:]:\n\t\tprint(l)\n\t\tbreak\n\telse:\n\t\tpass\nelse:\n\tprint('no match')"}
{"label": 69, "index": 8962, "code": "if __name__ == \"__main__\":\n    s = input()\n    data = list(s)\n    while len(data):\n        data.pop()\n        if len(data) % 2 == 0:\n            half = int(len(data) / 2)\n            if data[:half] == data[half:]:\n                print(len(data))\n                break"}
{"label": 69, "index": 8963, "code": "S = raw_input()\nn = len(S)\nfor i in xrange(1, n):\n    if (n - i)%2 > 0: continue\n    T = S[:-i]\n    if T[:len(T)/2] == T[len(T)/2:]:\n        print n - i\n        break\n\n"}
{"label": 69, "index": 8964, "code": "S = input()[:-2]\n\n\nlength = len(S)\n\n\nwhile S[:int(length / 2)] != S[int(length / 2):]:\n      S = S[:-2]\n      length = len(S)\n\n      if length == 0:\n          breaek\n\nprint(length)"}
{"label": 69, "index": 8965, "code": "s = input()\nl = len(s)\ns = s[:l-1]\nh = int(l / 2)\n\nfor i in range(len(s)):\n    if l % 2 == 0:\n        h = int(l / 2)\n        a = s[:h]\n        b = s[h:l]\n        if a == b:\n            print(l)\n            break\n    l -= 1\n"}
{"label": 69, "index": 8966, "code": "S = input()\n\n\ndef is_mirror_string(str):\n    if len(str) % 2 != 0:\n        return False\n    else:\n        i = int(len(str)/2)\n        if str[0:i] == str[i:]:\n            return True\n        else:\n            return False\n\n\ndef mirror_string_length(str):\n    s = str[0:-1]\n    while len(s):\n        if is_mirror_string(s):\n            return len(s)\n        else:\n            s = s[0:-1]\n    return 0\n\n\nprint(mirror_string_length(S))\n"}
{"label": 69, "index": 8967, "code": "s = input()\nss = s[0:len(s)-1]\n\n#print (ss)\nfor i in range(len(ss)):\n    chrnum = int(len(ss))- i\n    #print (chrnum)\n    if chrnum % 2 == 0:\n        #print (ss[0:int(chrnum/2)], end=' ')\n        #print (ss[int(chrnum/2) : chrnum])\n        if ss[0:int(chrnum/2)] == ss[int(chrnum/2) : chrnum]:\n            print (chrnum)\n            exit()"}
{"label": 69, "index": 8968, "code": "s = raw_input()\n\nlength = len(s)\n\nfor i in reversed(range(length)):\n    s = s[:-1]\n    l = len(s)\n    tempa = l / 2\n    temp = s\n    s1 = temp[:tempa]\n    s2 = temp[tempa:]\n    \n    if s1 == s2:\n        print l\n        break"}
{"label": 69, "index": 8969, "code": "a = raw_input()\n\nwhile 1:\n\ta = a[:-1]\n\tif len(a) % 2 == 0:\n\t\tif a[:len(a) / 2] == a[len(a) / 2:]:\n\t\t\tprint len(a)\n\t\t\tbreak"}
{"label": 70, "index": 8970, "code": "#!/usr/bin/env python\n\nA,B=map(int,raw_input().split())\nans='Impossible'\nif A%3==0:\n    ans='Possible'\nif B%3==0:\n    ans='Possible'\nif (A+B)%3==0:\n    ans='Possible'\n\nprint ans"}
{"label": 70, "index": 8971, "code": "A, B = list(map(int, input().split(\" \")))\n\nif A % 3 == 0 or B % 3 == 0 or (A+B) % 3 == 0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")"}
{"label": 70, "index": 8972, "code": "A,B=map(int,input().split())\nprint(\"Possible\" if A%3==0 or B%3==0 or (A+B)%3==0 else \"Impossible\")"}
{"label": 70, "index": 8973, "code": "a, b = map(int, input().split())\nc = a + b\nif a % 3 == 0 or b % 3 == 0 or c % 3 == 0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")\n"}
{"label": 70, "index": 8974, "code": "# coding: utf-8\n\nA, B = tuple(map(int, input().split()))\n\nprint(\"Possible\" if A % 3 == 0 or B % 3 == 0 or (A + B) % 3 == 0 else \"Impossible\")\n"}
{"label": 70, "index": 8975, "code": "A, B = map(int, input().split())\n\nif (A+B) % 3 == 0 or A % 3 == 0 or B % 3 == 0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")\n"}
{"label": 70, "index": 8976, "code": "A, B = map(int, input().split())\n \nif (A % 3 == 0) or (B % 3 == 0) or ((A+B) % 3 == 0):\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")"}
{"label": 70, "index": 8977, "code": "cookies = input().split(' ')\na, b = (int(cookies[0]), int(cookies[1]))\n\nif a % 3 == 0 or b % 3 == 0 or (a + b) % 3 == 0: print('Possible')\nelse: print('Impossible')\n"}
{"label": 70, "index": 8978, "code": "list = input().rstrip().split()\nA = int(list[0])\nB = int(list[1])\nif A%3 != 0:\n    if B%3 != 0:\n        if (A+B)%3 != 0:\n            print(\"Impossible\")\n        else: print(\"Possible\")\n    else: print(\"Possible\")\nelse: print(\"Possible\")"}
{"label": 70, "index": 8979, "code": "sh = 3\na, b = map(int, input().split())\nab = a+b\nif a % sh == 0 or b % sh == 0 or ab % sh == 0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")\n"}
{"label": 70, "index": 8980, "code": "# Sharing Cokkies\n\nA,B = list(map(int, input().split()))\n\nif ( A%3==0 or B%3==0 or (A+B)%3==0 ):\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")"}
{"label": 70, "index": 8981, "code": "A, B = map(int, input().split())\nprint (\"Possible\" if A %3 == 0 or B % 3 == 0 or (A+B) %3 == 0 else \"Impossible\")\n"}
{"label": 70, "index": 8982, "code": "m, n = map(int, input().split())\nans = (m + n) % 3\nans2 = m % 3\nans3 = n % 3\nif ans == 0 or ans2 == 0 or ans3 == 0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")\n"}
{"label": 70, "index": 8983, "code": "a,b = map(int, raw_input().split())\nif a % 3 == 0 or b % 3 == 0 or (a+b) % 3 == 0:\n    print 'Possible'\nelse:\n    print 'Impossible'\n"}
{"label": 70, "index": 8984, "code": "A,B = map(int, input().split())\nif A%3 == 0 or B%3==0 or (A+B)%3 ==0:\n    print('Possible')\nelse:\n    print('Impossible')\n"}
{"label": 70, "index": 8985, "code": "b, c = map(int, raw_input().split())\n\nif b%3==0 or c%3==0 or (b+c)%3==0:\n  print 'Possible'\nelse:\n  print 'Impossible'"}
{"label": 70, "index": 8986, "code": "a, b = map(int, input().split())\nprint(\"Possible\" if (a+b)%3==0 or a%3==0 or b%3==0 else \"Impossible\")\n"}
{"label": 70, "index": 8987, "code": "from sys import stdin\na,b = map(int,stdin.readline().split())\nans = 'Impossible'\nc = a+b\nx = [a,b,c]\ndef ch(n):\n if n==0:\n  return 0\n if n%3:\n  return 0\n return 1\nfor i in x:\n if ch(i):\n  ans = 'Possible'\nprint ans"}
{"label": 70, "index": 8988, "code": "a, b = list(map(int, input().split()))\nif a % 3 == 0 or b % 3 == 0 or (a + b) % 3 == 0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")\n"}
{"label": 70, "index": 8989, "code": "a,b =(int (i) for i in input().split())\nif a%3==0:\n    print('Possible')\nelif b%3==0:\n    print('Possible')\nelif (a+b)%3==0:\n    print('Possible')\nelse:\n    print('Impossible')\n"}
{"label": 70, "index": 8990, "code": "a, b = [int(x) for x in input().split()]\nprint('Possible' if a % 3 == 0 or b % 3 == 0 or (a + b) % 3 == 0 else 'Impossible')\n"}
{"label": 70, "index": 8991, "code": "A, B = map(int, input().split())\nif A % 3 ==0 or B % 3 == 0 or (A+B) % 3 == 0:\n    print('Possible')\nelse:\n    print('Impossible')"}
{"label": 70, "index": 8992, "code": "A, B = [int(x) for x in input().split(\" \")]\nif A % 3 == 0 or B % 3 == 0 or (A + B) % 3 == 0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")\n"}
{"label": 70, "index": 8993, "code": "A, B = list(map(int, input().split(\" \")))\n\nif (A % 3 != 0) and (B % 3 != 0) and ((A+B) % 3 != 0):\n    print(\"Impossible\")\nelse:\n    print(\"Possible\")"}
{"label": 70, "index": 8994, "code": "x = input().split(\" \")\na = int(x[0])\nb = int(x[1])\n\nif ((a % 3 == 0) or (b % 3 == 0) or ((a+b) % 3 == 0) ):\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")\n"}
{"label": 70, "index": 8995, "code": "x,y = map(int,input().split())\nz = x+y\nprint('Possible' if x%3==0 or y%3==0 or z%3==0 else 'Impossible')"}
{"label": 70, "index": 8996, "code": "A, B = list(map(int, input().split()))\n\nif A % 3 == 0 or B % 3 == 0 or (A + B) % 3 == 0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")\n"}
{"label": 70, "index": 8997, "code": "input_line1 = map(int,raw_input().split(\" \"))\n#input_line2 = map(int,raw_input().split(\" \"))\na = input_line1[0]\nb = input_line1[1]\nif a % 3 == 0 or b % 3 == 0 or (a + b) % 3 == 0:\n\tprint \"Possible\"\nelse:\n\tprint \"Impossible\""}
{"label": 70, "index": 8998, "code": "a,b = list(map(int,input().split()))\n\nif a%3==0 or b%3==0 or (a+b)%3==0:\n    print(\"Possible\")\nelse :\n    print(\"Impossible\")"}
{"label": 70, "index": 8999, "code": "cookie = [int(x) for x in input().split()]\nif cookie[0] % 3 == 0 or cookie[1] % 3 == 0 or (cookie[0] + cookie[1]) % 3 == 0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")"}
{"label": 70, "index": 9000, "code": "a,b=map(int,input().split())\nprint(\"Possible\"if (a%3)*(b%3)*((a+b)%3)==0 else \"Impossible\")\n"}
{"label": 70, "index": 9001, "code": "ans = ['Possible', 'Impossible']\n\ndef judge(a, b):\n\tif a % 3 == 0:\n\t\treturn 0\n\telif b % 3 == 0:\n\t\treturn 0\n\telif (a + b) % 3 == 0:\n\t\treturn 0\n\treturn 1\n\ninpt = map(int, raw_input().split())\nprint ans[judge(inpt[0], inpt[1])]\n"}
{"label": 70, "index": 9002, "code": "a,b=map(int,input().split())\nif a%3==0 or b%3==0 or (a+b)%3==0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")"}
{"label": 70, "index": 9003, "code": "#!/usr/bin/env python\n#-*- coding: utf-8 -*-\n\nfrom collections import defaultdict\nfrom math import factorial as f\nfrom fractions import gcd as g\n\na, b = [int (i) % 3 for i in raw_input ().split ()]\nif a: a = (a + b) % 3\nif a: a = b\nprint [\"Possible\", \"Impossible\"][a != 0]\n"}
{"label": 70, "index": 9004, "code": "# coding: utf-8\n# Here your code !\n \nx=input()\na=int(x.split(\" \")[0])\nb=int(x.split(\" \")[1])\nif (a%3==0 or b%3==0 or (a+b)%3==0):\n    print (\"Possible\")\nelse:\n    print (\"Impossible\")"}
{"label": 70, "index": 9005, "code": "a, b = map(int, input().split(\" \"))\n\nif a % 3 == 0 or b % 3 == 0 or (a + b) % 3 == 0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")\n"}
{"label": 70, "index": 9006, "code": "a,b=map(int,input().split())\nif a%3==0 or b%3==0 or (a+b)%3==0:\n  print(\"Possible\")\nelse:\n  print(\"Impossible\")"}
{"label": 70, "index": 9007, "code": "A, B = map(int, input().split())\n\nif A % 3 == 0:\n    print('Possible')\nelif B % 3 == 0:\n    print('Possible')\nelif (A + B) % 3 == 0:\n    print('Possible')\nelse:\n    print('Impossible')\n"}
{"label": 70, "index": 9008, "code": "a, b = map(int, raw_input().split())\nif a%3 == 0 or b%3 == 0 or (a+b)%3 == 0:\n    print \"Possible\"\nelse:\n    print \"Impossible\""}
{"label": 70, "index": 9009, "code": "A, B = map(int, input().split())\n\nif A%3==0 or B%3==0 or (A+B)%3==0:\n    print(\"Possible\")\nelse: print(\"Impossible\")"}
{"label": 70, "index": 9010, "code": "a, b = map(int,input().split())\nprint(\"Possible\" if(a+b)%3==0 or a%3==0 or b%3==0 else \"Impossible\")"}
{"label": 70, "index": 9011, "code": "def read(): return list(map(int, input().split()))\n\n\na, b = read()\nprint(\"Impossible\" if a % 3 and b % 3 and (a + b) % 3 else \"Possible\")"}
{"label": 70, "index": 9012, "code": "# -*- coding: utf-8 -*-\n\na, b = map(int, input().split())\n\nif (a % 3 == 0 or b % 3 == 0 or (a + b) % 3 == 0) and (a+b) > 0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")\n"}
{"label": 70, "index": 9013, "code": "a,b=map(int,input().split())\nif a%3==0 or b%3==0 or (a+b)%3==0:\n    print('Possible')\nelse:\n    print('Impossible')"}
{"label": 70, "index": 9014, "code": "def solution(a, b):\n    total = a + b\n    if total % 3 == 0:\n        print('Possible')\n    elif a % 3 == 0:\n        print('Possible')\n    elif b % 3 == 0:\n        print('Possible')\n    else:\n        print('Impossible')\n\nA, B = input().split(' ')\nA, B = int(A), int(B)\n\nsolution(A, B)"}
{"label": 70, "index": 9015, "code": "x, y = map(int, input().strip().split())\ne = x%3==0 or y%3==0 or (x+y)%3==0\nprint(\"Possible\" if e else \"Impossible\")"}
{"label": 70, "index": 9016, "code": "l = list(map(int, input().split()))\na = l[0]+l[1]\n\nif l[0] % 3 == 0:\n    print(\"Possible\")\nelif l[1] % 3 == 0:\n    print(\"Possible\")\nelif a % 3 == 0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")\n"}
{"label": 70, "index": 9017, "code": "a, b = map(int, input().split())\nif a % 3 == 0 or b % 3 == 0 or (a + b) % 3 == 0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")"}
{"label": 70, "index": 9018, "code": "A, B = map(int, input().split())\nif(A%3==0):\n    print(\"Possible\")\nelif(B%3==0):\n    print(\"Possible\")\nelif((A+B)%3==0):\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")"}
{"label": 70, "index": 9019, "code": "def ri(): return int(input())\ndef rli(): return list(map(int, input().split()))\ndef ris(): return list(input())\ndef pli(a): return \"\".join(list(map(str, a)))\n \na,b = rli()\nif(a % 3 == 0 or b % 3 == 0 or (a+b)%3 == 0):\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")"}
{"label": 70, "index": 9020, "code": "# -*- coding: utf-8 -*-\n\n\nl = map(int, raw_input().split())\nA = l[0]\nB = l[1]\n\nif A%3 == 0 or B%3 == 0 or (A+B)%3 == 0:\n    print('Possible')\nelse:\n  print('Impossible')"}
{"label": 70, "index": 9021, "code": "# -*- coding: utf-8 -*-\n\nA, B = [int(x) for x in input().split()]\n\nif A % 3 == 0:\n    print (\"Possible\")\nelif B % 3 == 0:\n    print(\"Possible\")\nelif (A + B) % 3 == 0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")\n"}
{"label": 70, "index": 9022, "code": "def sharing_cookies():\n\tA, B = map(int, raw_input().split(\" \"))\n\tif A%3==0 or B%3==0 or (A+B)%3==0:\n\t\tprint \"Possible\"\n\telse:\n\t\tprint \"Impossible\"\n\n\nif __name__ == \"__main__\":\n\tsharing_cookies()"}
{"label": 70, "index": 9023, "code": "str_cookies_num = input()\ncookies_num = str_cookies_num.split()\ncookies_A = int(cookies_num[0])\ncookies_B = int(cookies_num[1])\n\nif (cookies_A + cookies_B) % 3 == 0:\n    print(\"Possible\")\nelif cookies_A % 3 == 0:\n    print(\"Possible\")\nelif cookies_B % 3 == 0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")"}
{"label": 70, "index": 9024, "code": "A, B = [int(i) for i in input().split()]\n\nif A % 3 == 0 or B % 3 == 0 or (A + B) % 3 == 0:\n    print('Possible')\nelse:\n    print('Impossible')\n    "}
{"label": 70, "index": 9025, "code": "a, b = map(int, input().split(\" \"))\n\nif (a+b)%3 == 0:\n    print(\"Possible\")\nelif a%3 == 0:\n    print(\"Possible\")\nelif b%3 == 0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")\n"}
{"label": 70, "index": 9026, "code": "# -*- coding: utf-8 -*-\na, b = map(int, raw_input().split())\nif a % 3 == 0:\n    print 'Possible'\nelif b % 3 == 0:\n    print 'Possible'\nelif (a + b) % 3 == 0:\n    print 'Possible'\nelse:\n    print 'Impossible'"}
{"label": 70, "index": 9027, "code": "def mainA():\n    A, B = map(int, input().split())\n    print('Possible' if A%3==0 or B%3==0 or (A+B)%3==0 else 'Impossible')\n\nmainA()"}
{"label": 70, "index": 9028, "code": "A,B = map(int,input().split())\n\nif (A+B)%3==0 or A%3==0 or B%3==0:\n    print(\"Possible\")\n\nelse:\n    print(\"Impossible\")"}
{"label": 70, "index": 9029, "code": "a,b=map(int,input().split())\nif a%3==0:\n  print(\"Possible\")\nelif b%3==0:\n  print(\"Possible\")\nelif (a+b)%3==0:\n  print(\"Possible\")\nelse:\n  print(\"Impossible\")"}
{"label": 70, "index": 9030, "code": "a, b = map(int, input().split())\nif (a%3 == 0) or (b%3 == 0) or ((a+b)%3 == 0):\n    print('Possible')\nelse:\n    print('Impossible')\n"}
{"label": 70, "index": 9031, "code": "A= (input().split())\nif int(A[0]) % 3 == 0 or int(A[1]) % 3 == 0 or (int(A[0]) + int(A[1])) % 3 == 0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")"}
{"label": 70, "index": 9032, "code": "# -*- coding: utf-8 -*-\n\nimport re\n\na, b = map(int, re.split('\\s', raw_input()))\n\nif (a % 3 == 0) or (b % 3 == 0) or ((a+b) % 3 == 0):\n        print \"Possible\"\nelse:\n        print \"Impossible\"\n"}
{"label": 70, "index": 9033, "code": "A, B = map(int, raw_input().split())\n\nif A % 3 == 0 or B % 3 == 0 or (A + B) % 3 == 0:\n    print \"Possible\"\nelse:\n    print \"Impossible\"\n"}
{"label": 70, "index": 9034, "code": "def main():\n    A, B = list(map(int, input().strip().split()))\n    if A % 3 == 0 or B % 3 == 0 or (A + B) % 3 == 0:\n        print(\"Possible\")\n    else:\n        print(\"Impossible\")\n\nif __name__ == '__main__':\n    main()\n"}
{"label": 70, "index": 9035, "code": "A,B = map(int, input().split())\nif A%3==0 or B%3==0 or (A+B)%3==0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")"}
{"label": 70, "index": 9036, "code": "A, B = map(int, input().split())\nC = A + B\n\nif A % 3 == 0 or B % 3 == 0 or C % 3 == 0:\n\tprint('Possible')\nelse:\n\tprint('Impossible')"}
{"label": 70, "index": 9037, "code": "a,b = list(map(int,input().split()))\nc = a + b\nif (a % 3 == 0):\n    print(\"Possible\")\nelif (b % 3 == 0):\n    print(\"Possible\")\nelif (c % 3 == 0):\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")\n"}
{"label": 70, "index": 9038, "code": "def ri(): return int(input())\ndef rli(): return list(map(int, input().split()))\ndef ris(): return list(input())\ndef pli(a): return \"\".join(list(map(str, a)))\n\na,b = rli()\nif(a % 3 == 0 or b % 3 == 0 or (a+b)%3 == 0):\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")"}
{"label": 70, "index": 9039, "code": "a, b = map(int, input().split())\nif a % 3 == 0 or b % 3 ==0 or (a + b) % 3 == 0:\n    print('Possible')\nelse:\n    print('Impossible')"}
{"label": 70, "index": 9040, "code": "#Python\n\nl = map(int, raw_input().split())\n\nA=l[0]\nB=l[1]\n#print A\n#print B\n\nif A%3==0 or B%3==0 or (A+B)%3==0:\n\tprint 'Possible'\nelse:\n\tprint 'Impossible'\n"}
{"label": 70, "index": 9041, "code": "print((lambda a, b: (not a%3 or not b%3 or not (a + b) % 3) and \"Possible\" or \"Impossible\")(*map(int, input().split())))"}
{"label": 70, "index": 9042, "code": "a,b=[int(i) for i in input().split()]\nif (a%3==0 or b%3==0 or (a+b)%3==0):\n    print (\"Possible\")\nelse : print (\"Impossible\")\n"}
{"label": 70, "index": 9043, "code": "a,b = map(int,(input().split()))\n\nif a%3==0 or b%3==0 or (a+b)%3==0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")\n"}
{"label": 70, "index": 9044, "code": "# -*- coding:utf-8 -*-\nA, B = map(int, input().split())\nif A%3 == 0 or B%3 == 0 or (A+B)%3 == 0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")"}
{"label": 70, "index": 9045, "code": "a,b = map(int, input().split())\nprint('Possible' if a%3==0 or b%3==0 or (a+b)%3==0 else 'Impossible')"}
{"label": 70, "index": 9046, "code": "a, b = map(int, input().split())\nif (a + b) % 3 == 0:\n    print(\"Possible\")\n    exit()\nelif a % 3 == 0 or b % 3 == 0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")"}
{"label": 70, "index": 9047, "code": "A, B = list(map(int ,input().split()))\nif(A%3 !=0 and B%3 != 0 and (A+B) %3 != 0):\n    print(\"Impossible\")\nelse:\n    print(\"Possible\")"}
{"label": 70, "index": 9048, "code": "N = input().split()\n\nA = int(N[0])\nB = int(N[1])\n\nif A%3 == 0:\n    print(\"Possible\")\nelif B%3 == 0:\n    print(\"Possible\")\nelif (A+B)%3 == 0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")\n"}
{"label": 70, "index": 9049, "code": "if __name__ == \"__main__\":\n    a,b = map(int, input().split())\n    if a >= 3 and a % 3 == 0:\n        print (\"Possible\")\n        exit()\n    if b >= 3 and b % 3 == 0:\n        print (\"Possible\")\n        exit()\n    if (a + b) >= 3 and (a + b) % 3 == 0:\n        print (\"Possible\")\n        exit()\n    print (\"Impossible\")\n"}
{"label": 70, "index": 9050, "code": "a,b = map(int,input().split())\nif (a + b) % 3 == 0 or a % 3 == 0 or b % 3 == 0:\n   print(\"Possible\")\nelse:\n   print(\"Impossible\")"}
{"label": 70, "index": 9051, "code": "# -*- coding: utf-8 -*-\n\n#\u3059\u306c\u3051\u304f\u3093\u306f 3 \u5339\u306e\u30e4\u30ae\u306b\u30af\u30c3\u30ad\u30fc\u3092\u6e21\u3057\u305f\u3044\u3067\u3059\u3002\n#\u3059\u306c\u3051\u304f\u3093\u306f A \u679a\u306e\u30af\u30c3\u30ad\u30fc\u304c\u5165\u3063\u305f\u7f36\u3068\u3001B \u679a\u306e\u30af\u30c3\u30ad\u30fc\u304c\u5165\u3063\u305f\u7f36\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\n#\u3059\u306c\u3051\u304f\u3093\u306f A,B,A+B \u306e\u3044\u305a\u308c\u304b\u306e\u679a\u6570\u306e\u30af\u30c3\u30ad\u30fc\u3092\u30e4\u30ae\u305f\u3061\u306b\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n#3 \u5339\u306e\u30e4\u30ae\u304c\u540c\u3058\u679a\u6570\u305a\u3064\u98df\u3079\u3089\u308c\u308b\u3088\u3046\u306b\u30af\u30c3\u30ad\u30fc\u3092\u6e21\u3059\u3053\u3068\u304c\u53ef\u80fd\u304b\u3069\u3046\u304b\u5224\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n#3 \u5339\u306e\u30e4\u30ae\u304c\u540c\u3058\u679a\u6570\u305a\u3064\u98df\u3079\u3089\u308c\u308b\u3088\u3046\u306b\u30af\u30c3\u30ad\u30fc\u3092\u6e21\u3059\u3053\u3068\u304c\u53ef\u80fd\u306a\u3089\u3070 Possible \u3068\u3001\n#\u305d\u3046\u3067\u306a\u3051\u308c\u3070 Impossible \u3068\u51fa\u529b\u305b\u3088\u3002\n\nA = input().split()\n#A = [3, 3]\nx = int(A[0])\ny = int(A[1])\n\nif x % 3 ==0:\n    print(\"Possible\")\n\nelif y % 3 ==0:\n    print(\"Possible\")\n    \nelif (x + y) % 3 ==0:\n    print(\"Possible\")\n\n    \nelse:\n    print(\"Impossible\")\n    \n\n"}
{"label": 70, "index": 9052, "code": "a,b = map(int,input().split())\nmsg = \"\"\nif a%3 == 0 or b%3 == 0 or (a+b)%3 == 0:\n msg = 'Possible'\nelse :\n msg  = 'Impossible'\nprint(msg)"}
{"label": 70, "index": 9053, "code": "A, B = list(map(int, input().split()))\n\nif A == 0 and B == 0:\n    print(\"Impossible\")\nelif A % 3 == 0 or B % 3 == 0 or (A+B) % 3 == 0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")\n"}
{"label": 70, "index": 9054, "code": "a, b = map(int, input().split())\n\nif a % 3 == 0 or b % 3 == 0 or (a + b) % 3 == 0:\n    print('Possible')\nelse:\n    print('Impossible')"}
{"label": 70, "index": 9055, "code": "a,b=map(int,input().split())\n\njud=False\n\nif a%3==0:\n    jud=True\nelif b%3==0:\n    jud=True\nelif (a+b)%3==0:\n    jud=True\nelse:\n    jud=False\n\nif jud==True:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")"}
{"label": 70, "index": 9056, "code": "# coding: utf-8\n# Here your code !\na=input()\nb=a.split(\" \")\nA=int(b[0])\nB=int(b[1])\n\nC=A+B\nif C%3==0 or A%3==0 or B%3==0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")"}
{"label": 70, "index": 9057, "code": "a, b = map(int, raw_input().split())\nprint \"Possible\" if (a % 3 == 0 or b % 3 == 0 or (a + b) % 3 == 0) else \"Impossible\"\n    \n"}
{"label": 70, "index": 9058, "code": "import sys\na, b = map(int, sys.stdin.readline().split())\nprint [\"Impossible\", \"Possible\"][a % 3 == 0 or b % 3 == 0 or (a + b) % 3 == 0]\n"}
{"label": 70, "index": 9059, "code": "a, b = map(int,input().split())\n\nif a % 3 == 0 or b % 3 == 0 or (a + b) % 3 == 0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")\n"}
{"label": 70, "index": 9060, "code": "ab = input().split(' ')\n#print(ab)\nif int(ab[0])  % 3 == 0 or int(ab[1]) % 3 ==0   or (int(ab[1])+ int(ab[0])) % 3 == 0:\n    ans  = 'Possible'\n\nelse:\n    ans ='Impossible'\n    \nif (int(ab[0]) + int(ab[1])) <= 3:\n    ans= 'Impossible'\nprint (ans) "}
{"label": 70, "index": 9061, "code": "n,m=map(int,raw_input().split())\nprint \"Possible\" if n%3==0 or m %3==0 or (n+m)%3==0 else \"Impossible\""}
{"label": 70, "index": 9062, "code": "a,b=map(int,input().split())\nc=a+b\n\nif a%3==0 or b%3==0 or c%3==0: print(\"Possible\")\nelse: print(\"Impossible\")"}
{"label": 70, "index": 9063, "code": "a, b = map(int, input().split())\nprint('Impossible' if a % 3 and b % 3 and (a + b) % 3 else 'Possible')\n"}
{"label": 70, "index": 9064, "code": "#!/usr/bin/env python\n# -*- conding: utf-8 -*-\n\nraw = raw_input()\nA = int(raw.split()[0])\nB = int(raw.split()[1])\n\nif(A%3==0 or B%3==0 or (A+B)%3==0):\n    print \"Possible\"\nelse:\n    print \"Impossible\"\n"}
{"label": 70, "index": 9065, "code": "A , B = map(int, input().split())\nif A + B <  3:\n    print(\"Impossible\")\n    \nelif A%3 == 0 or B%3 == 0 or (A+B)%3 ==0 :\n    print(\"Possible\")\n\nelse:\n    print(\"Impossible\")"}
{"label": 70, "index": 9066, "code": "m, n = map(int, input().split())\nans = (m + n) % 3\nans2 = m % 3\nans3 = n % 3\nif ans == 0 or ans2 == 0 or ans3 == 0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")"}
{"label": 70, "index": 9067, "code": "Imp = list(map(int, input().split()))\nA = Imp[0]\nB = Imp[1]\nre = 0\nif A % 3 == 0:    \n    re = 1\nif B % 3 == 0:\n    re = 1\nif (A+B) % 3 == 0:\n        re = 1\n        \nif re ==1:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")"}
{"label": 70, "index": 9068, "code": "A, B = list(map(int, input().split()))\nif A % 3 == 0 or B % 3 == 0 or (A+B) % 3 == 0:\n\tprint(\"Possible\")\nelse:\n\tprint(\"Impossible\")"}
{"label": 70, "index": 9069, "code": "a,b=map(int,input().split())\nc=a + b\n \nif  a%3==0 or b%3==0 or c%3==0: print(\"Possible\")\nelse: print(\"Impossible\")"}
{"label": 70, "index": 9070, "code": "a, b = map(int, input().split())\n\ndef check(a, b):\n    if a % 3 == 0:\n        return 1\n    elif b % 3 == 0:\n        return 1\n    elif (a + b) % 3 == 0:\n        return 1\n    else:\n        return 0\n\ndef main():\n    if check(a, b) == 1:\n        print(\"Possible\")\n    else:\n        print(\"Impossible\")\n\nmain()"}
{"label": 70, "index": 9071, "code": "A , B = map(int, input().split())\n#print(A, B)\nif (A%3==0 or B%3 == 0 or (A+B) % 3 == 0):\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")\n"}
{"label": 70, "index": 9072, "code": "a=list(map(int,input().split()))\nif a[0]%3==0 or a[1]%3==0 or (a[0]+a[1])%3==0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")\n"}
{"label": 70, "index": 9073, "code": "a,b=map(int,input().split())\nc = a+b\nif a%3==0 or b%3==0 or c%3==0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")"}
{"label": 70, "index": 9074, "code": "a, b = map(int, input().split())\n\nif a % 3 == 0 or b % 3 == 0 or (a + b) % 3 == 0:\n    print('Possible')\nelse:\n    print('Impossible')"}
{"label": 70, "index": 9075, "code": "a, b = [int(i) for i in input().split()]\nif a % 3 == 0 or b % 3 == 0 or (a+b) % 3 == 0:\n    print('Possible')\nelse:\n    print('Impossible')\n"}
{"label": 70, "index": 9076, "code": "if __name__ == '__main__':\n    lis = list(map(int, input().split()))\n    A = lis[0]\n    B = lis[1]\n    \n    if (A % 3 == 0 or B % 3 == 0 or (A + B) % 3 == 0):\n        print(\"Possible\")\n    else:\n        print(\"Impossible\")"}
{"label": 70, "index": 9077, "code": "# -*- coding: utf-8 -*-\n\"\"\"\nhttp://abc067.contest.atcoder.jp/tasks/abc067_a\n\n\"\"\"\nimport sys\nfrom sys import stdin\ninput = stdin.readline\n\n\ndef main(args):\n    A, B = map(int, input().split())\n    if (A+B) % 3 == 0 or A % 3 == 0 or B % 3 == 0:\n        print('Possible')\n    else:\n        print('Impossible')\n\n\nif __name__ == '__main__':\n    main(sys.argv[1:])\n    \n"}
{"label": 70, "index": 9078, "code": "t = raw_input().split()\na = int(t[0])\nb = int(t[1])\nif a%3 == 0 or b%3 == 0 or (a+b)%3 == 0:\n\tprint('Possible')\nelse:\n\tprint(\"Impossible\")"}
{"label": 70, "index": 9079, "code": "# coding=utf-8\na,b = map(int, raw_input().split())\n\nif (a + b) %3 == 0:\n    print(\"Possible\")\nelif a % 3 == 0:\n    print(\"Possible\")\nelif b % 3 == 0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")"}
{"label": 70, "index": 9080, "code": "A, B = map(int, input().split())\n\nif A % 3 == 0 or B % 3 == 0 or (A + B) % 3 == 0:\n    print('Possible')\nelse:\n    print('Impossible')"}
{"label": 70, "index": 9081, "code": "A, B = [int(n) for n in input().split()]\nif A%3==0 or B%3==0 or (A+B)%3==0:\n  print(\"Possible\")\nelse:\n  print(\"Impossible\")"}
{"label": 70, "index": 9082, "code": "a,b = map(int,input().split())\nif a % 3 == 0:\n\tprint('Possible')\nelif b % 3 == 0:\n\tprint('Possible')\nelif (a + b) % 3 == 0:\n\tprint('Possible')\nelse:\n\tprint('Impossible')"}
{"label": 70, "index": 9083, "code": "A, B = map((int), input().split())\n\nif(A % 3 == 0 or B % 3 == 0 or (A + B) % 3 == 0 ):\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")"}
{"label": 70, "index": 9084, "code": "A, B = map(int, raw_input().split())\n\nC = A + B\n\nif A % 3 == 0:\n    print \"Possible\"\nelif B % 3 == 0:\n    print \"Possible\"\nelif C % 3 == 0:\n    print \"Possible\"\nelse:\n    print \"Impossible\"\n"}
{"label": 70, "index": 9085, "code": "a, b = map(int, input().split(\" \"))\nif a % 3 == 0 or b % 3 == 0 or (a + b) % 3 == 0:\n  print(\"Possible\")\nelse:\n  print(\"Impossible\")"}
{"label": 70, "index": 9086, "code": "a,b=map(int,input().split())\nif a%3==0 or b%3==0 or (a+b)%3==0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")"}
{"label": 70, "index": 9087, "code": "c= [int (i) for i in input().split()]\nif sum(c)%3==0 or c[0]%3==0 or c[1]%3 ==0:\n\tprint('Possible')\nelse: print('Impossible')"}
{"label": 70, "index": 9088, "code": "A,B=map(int,input().split())\nif (A%3==0 or B%3==0 or (A+B)%3==0):\n print ('Possible')\nelse:\n print('Impossible')"}
{"label": 70, "index": 9089, "code": "c, d = map(int, input().split())\nans = 0\n\nif(c % 3 == 0) :\n    ans = 1\nelif(d % 3 == 0) :\n    ans = 1\nelif((c + d) % 3 == 0) :\n    ans = 1\n\nif (ans == 1) :\n    print ('Possible')\nelse :\n    print ('Impossible')"}
{"label": 70, "index": 9090, "code": "import sys\n\ndef main():\n    line = sys.stdin.readline()\n    lst = line.split()\n    a = int(lst[0])\n    b = int(lst[1])\n\n    if (a % 3 == 0) or (b % 3 == 0) or ((a+ b) % 3 == 0 ):\n        print(\"Possible\")\n    else:\n        print(\"Impossible\")\n\n    return 0\n\nif __name__ == '__main__':\n    sys.exit(main())\n"}
{"label": 70, "index": 9091, "code": "s = input().split()\ns = [int(i) for i in s]\na = s[0]\nb = s[1]\n\nif a % 3 == 0 : print(\"Possible\")\nelif b % 3 == 0 : print(\"Possible\")\nelif (a + b) % 3 == 0 : print(\"Possible\")\nelse : print(\"Impossible\")"}
{"label": 70, "index": 9092, "code": "A, B = list(map(int, input().split()))\n\nif A % 3 == 0 or B % 3 == 0 or (A + B) % 3 == 0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")\n\n"}
{"label": 70, "index": 9093, "code": "a, b = map(int, raw_input().split())\n\n\nif a % 3 == 0 or b % 3 == 0 or (a+b)%3==0:\n    print(\"Possible\")\nelse:\n    print(\"Impossible\")\n\n"}
{"label": 70, "index": 9094, "code": "# -*- coding: utf-8 -*-\nimport sys\n\nA, B = map(int, input().split())\n\nC = A + B\n\nif A%3 == 0:\n    print('Possible')\nelif B%3 == 0:\n    print('Possible')\nelif C%3 == 0:\n    print('Possible')\nelse:\n    print('Impossible')"}
{"label": 70, "index": 9095, "code": "a,b=map(int,input().split());print([\"P\",\"Imp\"][a%3==b%3>0]+\"ossible\")"}
{"label": 70, "index": 9096, "code": "#!/usr/bin/python\n\nimport sys\n\ndef main(argv):\n    for line in sys.stdin:\n        A, B = map(lambda x: int(x), line.split(\" \", 2))\n        if (A % 3) == 0 or (B % 3) == 0 or ((A+B) % 3) == 0:\n            print(\"Possible\")\n        else:\n            print(\"Impossible\")\n\nif __name__ == \"__main__\":\n    main(sys.argv)"}
{"label": 70, "index": 9097, "code": "#!usr/bim/python\n#! -*- coding: utf-8 -*-\n\n\na_b = raw_input()\na_b = a_b.split()\na = a_b[0]\nb = a_b[1]\na = int(a)\nb = int(b)\n\nstatus = 0\n\nif a % 3 == 0:\n    status = 1\nelif b % 3 == 0:\n    status = 1\nelif (a + b) % 3 == 0:\n    status = 1\n\nif status == 0:\n    print \"Impossible\"\nelse:\n    print \"Possible\"\n"}
{"label": 70, "index": 9098, "code": "a,b = map(int,input().split())\n#print(a,b)\n#c = 0\nif a%3 == 0 or b%3 == 0 or (a+b)%3 ==0:\n    print('Possible')\nelse:\n    print('Impossible')\n"}
{"label": 70, "index": 9099, "code": "a, b = map(int, input().split())\nif a % 3 == 0 or b % 3 == 0 or (a + b )%3 == 0:\n    print('Possible')\nelse:\n    print('Impossible')\n"}
{"label": 71, "index": 9100, "code": "n,k = [int(i) for i in input().split()]\nprint(-sum(sorted([-int(i) for i in input().split()])[:k]))\n"}
{"label": 71, "index": 9101, "code": "N,K = map(int,input().split())\nH=list(map(int,input().split()))\n\nH.sort(reverse=True)\n\nA=H[0:K]\nB=sum(A)\n\nprint(B)\n"}
{"label": 71, "index": 9102, "code": "N , K = map(int, input().split())\nlenghths = list(map(int , input().split()))\n\nlenghths.sort(reverse=True)\nanswer = sum(lenghths[0:K])\nprint(answer)"}
{"label": 71, "index": 9103, "code": "N,K = list(map(int,input().split()))\nL =list(map(int,input().split()))\n\nL.sort()\n\nprint(sum(L[-K:]))"}
{"label": 71, "index": 9104, "code": "N, K = map(int, input().split())\nl = list(map(int, input().split()))\nL = sorted(l, reverse = True)\nans = 0\nfor i in range(K):\n\tans += L[i]\n\t\nprint(ans)"}
{"label": 71, "index": 9105, "code": "n,k = list(map(int,input().split()))\na = list(map(int,input().split()))\na.sort()\na.reverse()\nprint(sum(a[:k]))\n"}
{"label": 71, "index": 9106, "code": "n,k=map(int,input().split())\nl=[int(x) for x in input().split()]\nprint(sum(sorted(l)[n-k:]))"}
{"label": 71, "index": 9107, "code": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ninput_line = sys.stdin.readline().split(' ')\nn = int(input_line[0])\nk = int(input_line[1])\n\ninput_line = sys.stdin.readline().split(' ')\nl_list = list(map(int, input_line))\n\nl_list.sort(reverse=True)\n\nl = 0\nfor i in range(0, k):\n\tl += l_list[i]\n\nprint(l)\n"}
{"label": 71, "index": 9108, "code": "import sys\nn, k = map(int, sys.stdin.readline().split())\na = sorted(map(int, sys.stdin.readline().split()))\n\n\nprint sum (a[n - k:])\n"}
{"label": 71, "index": 9109, "code": "def main():\n    N, K = list(map(int, input().strip().split()))\n    ls = list(map(int, input().strip().split()))\n    k_total = sum(sorted(ls, reverse=True)[:K])\n    print(k_total)\n\nif __name__ == '__main__':\n    main()\n"}
{"label": 71, "index": 9110, "code": "N, K = map(int, input().split())\nL = list(map(int, input().split()))\nL.sort(reverse=True)\n\nans = sum(L[:K])\nprint(ans)\n"}
{"label": 71, "index": 9111, "code": "# -*- coding:utf-8 -*-\nimport itertools\nimport numpy as np\n\nN,K = map(int,input().split())\nl = np.array(list(map(int,input().split())))\n\nans = 0\nfor i in range(K):\n    max_i = np.argmax(l)\n    ans += l[max_i]\n    l = np.delete(l,max_i)\n\nprint(ans)\n"}
{"label": 71, "index": 9112, "code": "def solution(n, k, l_list):\n    l_list.sort(reverse=True)\n    result = sum(l_list[:k])\n    return result\n\n\nN, K = [int(value) for value in input().split(' ')]\nl_list = [int(value) for value in input().split(' ')]\nprint(solution(N, K, l_list))"}
{"label": 71, "index": 9113, "code": "def solve():  # 068B - Snake Toy\n    N, K = [int(x) for x in input().split(\" \")]\n    l = [int(x) for x in input().split(\" \")]\n    l.sort(reverse=True)\n    print(sum(l[:K]))\n\n\nsolve()"}
{"label": 71, "index": 9114, "code": "# -*- coding: utf-8 -*-\n\"\"\"\nhttp://abc067.contest.atcoder.jp/tasks/abc067_b\n\n\"\"\"\nimport sys\nfrom sys import stdin\n\ninput = stdin.readline\n\n\ndef main(args):\n    N, K = map(int, input().split())\n    rods = [int(x) for x in input().split()]\n    rods.sort()\n    snake = rods[-K:]\n    print(sum(snake))\n\n\nif __name__ == '__main__':\n    main(sys.argv[1:])\n    \n"}
{"label": 71, "index": 9115, "code": "from sys import stdin\nn,k = map(int,stdin.readline().split())\na = map(int,stdin.readline().split())\na.sort()\na.reverse()\nprint sum(a[:k])"}
{"label": 71, "index": 9116, "code": "n,k=[int(i) for i in input().split()]\nl=[int(i) for i in input().split()]\nl.sort()\na=0\nfor i in range(k):\n  a+=l[n-1-i]\nprint(a)"}
{"label": 71, "index": 9117, "code": "N, K = list(map(int, input().split()))\nl = list(map(int, input().split()))\nl.sort(reverse=True)\nans = 0\nfor i in range(K):\n    ans += l[i]\nprint(ans)\n"}
{"label": 71, "index": 9118, "code": "n, k = map(int, input().split())\n\nl = list(map(int, input().split()))\n\nl.sort()\nl.reverse()\n\nprint(sum(l[0:k]))"}
{"label": 71, "index": 9119, "code": "N_K = map(int, raw_input().split())\n\nl = map(int, raw_input().split())\nl.sort()\nl.reverse()\n\nans = 0\n\nfor i in range(N_K[1]):\n    ans += int(l[i])\n\nprint ans\n"}
{"label": 71, "index": 9120, "code": "N, K = list(map(int, input().split()))\nl_list = list(map(int, input().split()))\n\nl_list.sort(reverse=True)\nprint(sum(l_list[:K]))\n\n"}
{"label": 71, "index": 9121, "code": "N, K = input().split()\nl = input().split()\nl = list(map(int, l))\nl.sort(reverse=True)\n\nsum = 0\nfor i in range(int(K)):\n  sum += l[i]\n\nprint(sum)"}
{"label": 71, "index": 9122, "code": "N ,K=list(map(int,input().split()))\nl=list(map(int,input().split()))\n\nl.sort(reverse=True)\n\nA=0\n\nfor i in range(K):\n    A+=l[i]\n\nprint(A)"}
{"label": 71, "index": 9123, "code": "def read(): return list(map(int, input().split()))\n\nn, k = read()\nl = read()\nprint(sum(sorted(l)[::-1][:k]))"}
{"label": 71, "index": 9124, "code": "# coding: utf-8\n\nn, k = map(int, raw_input().split())\nl = map(int, raw_input().split())\n\nl.sort()\nprint sum(l[-k:])\n"}
{"label": 71, "index": 9125, "code": "# -*- coding: utf-8 -*-\n\nimport re\n\nn, k = map(int, re.split('\\s', raw_input()))\nl = map(int, re.split('\\s', raw_input()))\nans = 0\n\nl.sort()\nl.reverse()\nfor i in range(0,k):\n        ans += l[i]\n\nprint ans\n"}
{"label": 71, "index": 9126, "code": "N,K=map(int,input().split())\nl=sorted(map(int,input().split()),reverse=True)\nprint (sum(l[:K]))"}
{"label": 71, "index": 9127, "code": "N, K = list(map(int, input().split(\" \")))\n\nl = list(map(int, input().split(\" \")))\n\nsorted_l = sorted(l)[::-1]\n\nprint(sum(sorted_l[:K]))"}
{"label": 71, "index": 9128, "code": "n,k = map(int, input().split())\nlong = [int(i) for i in input().split()]\nlong = sorted(long, reverse = True)\nprint(sum(long[0:k]))"}
{"label": 71, "index": 9129, "code": "\na = list(map((int),input().split(' ')))\n\nN = a[0]\nK = a[1]\nsub = N - K\n\nb = list(map((int),input().split(' ')))\n\n\nfor i in range(sub):\n    b.pop(b.index(min(b)))\n    \nprint(sum(b))"}
{"label": 71, "index": 9130, "code": "n,k,*L=map(int,open(0).read().split());print(sum(sorted(L)[-k:]))"}
{"label": 71, "index": 9131, "code": "N, K = (int(i) for i in input().split())  \nl = [int(i) for i in input().split()]\nans = 0\n\nfor i in range(K):\n\tans += max(l)\n\tl.pop(l.index(max(l)))\n\nprint(ans)\n"}
{"label": 71, "index": 9132, "code": "n, k = map(int, input().split())\nprint(sum((sorted(map(int, input().split())))[n-k:n]))\n"}
{"label": 71, "index": 9133, "code": "N, K = [int(i) for i in input().split()]\n\nl = [int(j) for j in input().split()]\n\nl = sorted(l)\n\nans = 0\nfor k in range(N-K, N, 1):\n    ans += l[k]\n\nprint(ans)\n"}
{"label": 71, "index": 9134, "code": "n, k = map(int,input().split())\nl = list(map(int,input().split()))\n\nl.sort()\nans = 0\nfor i in range(k):\n    ans += l[-i - 1]\n\nprint(ans)"}
{"label": 71, "index": 9135, "code": "N,K = map(int, input().split())\n\nL = list(map(int, input().split()))\n\nL.sort(reverse=True)\nans = 0\nfor i in range(K):\n    ans += L[i]\nprint(ans)\n"}
{"label": 71, "index": 9136, "code": "#!/usr/bin/env python\n\nN,K=map(int,raw_input().split())\nl=map(int,raw_input().split())\nl.sort()\nprint sum(l[len(l)-K:len(l)])"}
{"label": 71, "index": 9137, "code": "n, k =(int (i) for i in input().split())\nl=[int(i) for i in input().split()]\nl.sort()\nsum=0\nfor i in range(0,k):\n    sum += l.pop()\n \nprint(sum)"}
{"label": 71, "index": 9138, "code": "N, K = list(map(int, input().split()))\nL = list(map(int, input().split()))\nL.sort()\nprint(sum(L[-1:-K-1:-1]))"}
{"label": 71, "index": 9139, "code": "N, K = map(int,input().split())\nL = list(map(int, input().split()))\nL.sort()\nprint(sum(L[N-K:]))"}
{"label": 71, "index": 9140, "code": "N, K = map(int, raw_input().split())\nl = list(map(int, raw_input().split()))\n\nl.sort(reverse=True)\n\nprint sum(l[:K])\n\n"}
{"label": 71, "index": 9141, "code": "N, K = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\na.sort()\na.reverse()\nsum = 0\nfor i in range(K):\n    sum += a[i]\nprint(sum)"}
{"label": 71, "index": 9142, "code": "#!usr/bim/python\n#! -*- coding: utf-8 -*-\n\nn_k = raw_input()\nn_k = n_k.split()\nn_k = map(int,n_k)\nn = n_k[0]\nk = n_k[1]\n\nl = raw_input()\nl = l.split()\nl = map(int,l)\n\nans = 0\ni = 0\nwhile i < k:\n    max_len = max(l)\n    ans += max_len\n    l[l.index(max_len)] = 0\n    i += 1\n\nprint ans\n"}
{"label": 71, "index": 9143, "code": "n, k = map(int, raw_input().split())\na = map(int, raw_input().split())\na.sort(reverse = True)\nans = 0\nfor i in xrange(k):\n    ans += a[i]\nprint ans\n"}
{"label": 71, "index": 9144, "code": "N, K = [int(x) for x in input().split()]\nl = [int(x) for x in input().split()]\nans = 0\n\nl.sort(reverse=True)\nfor i in range(K):\n\tans += l[i]\n\nprint(ans)\n"}
{"label": 71, "index": 9145, "code": "import sys\n\n# sys.stdin = open('b1.in')\n\n\ndef read_int_list():\n    return list(map(int, input().split()))\n\n\ndef read_str_list():\n    return input().split()\n\n\ndef read_int():\n    return int(input())\n\n\ndef read_str():\n    return input()\n\n\ndef main():\n    n, k = read_int_list()\n    l = read_int_list()\n    l.sort()\n    res = sum([i for i in l[-k:]])\n    print(res)\n\n\nmain()\n"}
{"label": 71, "index": 9146, "code": "\nN, K = map(int, input().split())\nlens = [int(e) for e in input().split()]\nlens.sort()\nlens.reverse()\n\nprint(sum(lens[:K]))\n\n"}
{"label": 71, "index": 9147, "code": "n,m=map(int,raw_input().split())\ns=raw_input().split()\na=[]\nt=[0 for i in range(n)]\nfor i in range(n):\n    a.append(int(s[i]))\nsum=0\na=sorted(a)\nfor j in range(n-1,n-m-1,-1):\n    sum=sum+a[j]\nprint sum"}
{"label": 71, "index": 9148, "code": "N, K = map(int, input().split())\nl = list(map(int, input().split()))\n\nl.sort()\nl.reverse()\n\nsum = 0\nfor i in range(K):\n\tsum += l[i]\nprint(sum)\n"}
{"label": 71, "index": 9149, "code": "N, K = map(int, raw_input().split())    \nl = sorted(map(int, raw_input().split()))\nprint sum(l[-K:])\n\n"}
{"label": 71, "index": 9150, "code": "inpt = map(int, raw_input().split())\nn = inpt[0]\nk = inpt[1]\nlst = map(int, raw_input().split())\nlst.sort()\nans = 0\nfor i in range(0, k):\n\tans += lst[-1-i]\nprint ans"}
{"label": 71, "index": 9151, "code": "n, k = map(int, input().split())\nl = list(map(int, input().split()))\n\nlsort = sorted(l, reverse=True)\n\nlsum = 0\nfor i in range(k):\n    lsum = lsum + lsort[i]\nprint(lsum)"}
{"label": 71, "index": 9152, "code": "sum = 0\nN, K = map(int, input().split())\nl = map(int, input().split())\n#print(l)\nsort_l = sorted(l, reverse = True)\n#print(sort_l)\nfor i in range(0,K):\n    sum += sort_l[i]\n\nprint(sum)\n"}
{"label": 71, "index": 9153, "code": "N, K = map(int, input().split())\n\nL = list(map(int, input().split()))\n\ndef main(K):\n    ans = 0\n    L.sort()\n    L.reverse()\n    i = 0\n    while i < K:\n        ans += L[i]\n        i += 1\n    return ans\n\nprint(main(K))"}
{"label": 71, "index": 9154, "code": "N, K = map(int, input().split())\nl = map(int, input().split())\nprint(sum(sorted(l, reverse=True)[:K]))\n"}
{"label": 71, "index": 9155, "code": "import numpy as np\n\nnk = input().split(' ')\nn, k = (int(nk[0]), int(nk[1]))\nl = [int(num) for num in input().split(' ')]\nmax = 0\nfor _ in range(k):\n    m = np.array(l).max()\n    max += m\n    l.remove(m)\nprint(max)\n"}
{"label": 71, "index": 9156, "code": "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\nmod = 10**9 + 7\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\n\n\ndef main():\n    n,k = LI()\n    a = sorted(LI(),reverse=True)\n\n    return sum(a[:k])\n\n\nprint(main())\n\n\n\n"}
{"label": 71, "index": 9157, "code": "N, K = map(int, input().split())\nl = list(map(int, input().split()))\nl.sort(key=lambda x: -x)\nans = 0\nfor i in range(K):\n    ans += l[i]\nprint(ans)\n"}
{"label": 71, "index": 9158, "code": "N , K = map(int, input().split())\nlenghths = list(map(int , input().split()))\n\nlenghths.sort(reverse=True)\nanswer = sum(lenghths[0:K])\nprint(answer)"}
{"label": 71, "index": 9159, "code": "# encoding:utf-8\n\ndef main():\n\tN, K = list(map(int, input().split()))\n\tlen_bar = list(map(int, input().split()))\n\tlen_bar.sort()\n\tadapt_bar = len_bar[N-K:]\n\tprint(sum(adapt_bar))\n\nif __name__ == '__main__':\n\tmain()"}
{"label": 71, "index": 9160, "code": "N, K = map(int, input().split())\nL = [int(n) for n in input().split()]\nsort = sorted(L, reverse=True)\nlength = 0\nfor i in range(K):\n    length += sort[i]\nprint(length)\n"}
{"label": 71, "index": 9161, "code": "a,b = map(int,input().split())\nc = list(map(int,input().split()))\nd = 0\nfor x in range(b):\n    cc = max(c)\n    d += cc\n    c.remove(cc)\nprint(d)\n"}
{"label": 71, "index": 9162, "code": "def mainB():\n    N, K = map(int, input().split())\n    l =  list(map(int, input().split()))\n    l = sorted(l)[::-1]\n    ans = 0\n    for i in range(K):\n        ans += l[i]\n    print(ans)\n\nmainB()"}
{"label": 71, "index": 9163, "code": "N, K = list(map(int, input().split()))\nl = list(map(int, input().split()))\nres = 0\n\nl.sort(reverse=True)\nfor num in range(K):\n    res = res + l[num]\nprint(str(res))\n"}
{"label": 71, "index": 9164, "code": "sticks_canJoinNum = input()\nstr_stickLength = input()\n\nsticks_num = int(sticks_canJoinNum.split()[0])\nnum_canJoin = int(sticks_canJoinNum.split()[1])\nstick_list = [int(i) for i in str_stickLength.split()]\n\nstick_list.sort(reverse=True)\nmax_length = sum(stick_list[:num_canJoin])\nprint(max_length)"}
{"label": 71, "index": 9165, "code": "Imp = list(map(int, input().split()))\nBlist = list(map(int, input().split()))\nBlist.sort()\n\nout = 0\nfor i in range(Imp[1]):\n    out += Blist[-(i+1)]\n    \nprint(out)"}
{"label": 71, "index": 9166, "code": "n,k = map(int,input().split())\nl = list(map(int,input().split()))\nl.sort()\nlength = 0\nfor i in range(k):\n\tlength += l[n-1-i]\nprint(length)"}
{"label": 71, "index": 9167, "code": "m, n = map(int, input().split())\nM = list(map(int, input().split()))\nM.sort()\nM.reverse()\nA = []\nfor i in range(n):\n    A.append(M[i])\nprint(sum(A))\n"}
{"label": 71, "index": 9168, "code": "n, k = map(int, input().split())\nlen_list = list(map(int, input().split()))\n\nlen_list.sort(reverse=True)\n\nprint(sum(len_list[:k]))\n"}
{"label": 71, "index": 9169, "code": "N,K  = map(int, raw_input().split())\nl =  map(int, raw_input().split())\nl.sort(reverse=True)\nsum = 0\nfor i in range(K):\n    sum += l[i]\nprint(sum)"}
{"label": 71, "index": 9170, "code": "N, K = map(int, input().split())\nl = list(map(int, input().split()))\nl.sort(reverse=True)\nprint(sum(l[:K]))\n"}
{"label": 71, "index": 9171, "code": "N,K = map(int, input().split())\nL = list(map(int, input().split()))\nL = sorted(L)[::-1]\nprint(sum(L[:K]))"}
{"label": 71, "index": 9172, "code": "# -*- coding:utf-8 -*-\nN, K = map(int, input().split())\nl = sorted(list(map(int, input().split())), reverse = True)\nans = 0\nfor tmp in range(K):\n    ans += l[tmp]\nprint(ans)"}
{"label": 71, "index": 9173, "code": "N,K = [int(i) for i in input().split(\" \")]\nl = [int(i) for i in input().split(\" \")]\nl.sort()\nprint(sum(l[N-K:N]))\n"}
{"label": 71, "index": 9174, "code": "n, k = map(int, input().split())\nprint(sum(list(sorted(map(int, input().split()), reverse=True))[:k]))\n"}
{"label": 71, "index": 9175, "code": "N, K = [int(n) for n in input().split()]\nl = [int(n) for n in input().split()]\n\nl.sort(reverse = True)\n\nprint(sum(l[:K]))"}
{"label": 71, "index": 9176, "code": "m, n = map(int, input().split())\nM = list(map(int, input().split()))\nM.sort()\nM.reverse()\nA = []\nfor i in range(n):\n    A.append(M[i])\nprint(sum(A))\n"}
{"label": 71, "index": 9177, "code": "a,b = map(int,input().split())\nn = list(map(int,input().split()))\nn.sort()\nprint(sum(n[-b:]))\n"}
{"label": 71, "index": 9178, "code": "n,k = map(int, raw_input().split())\nl = map(int, raw_input().split())\nl.sort()\ns = 0\nfor i in range(n-k, n):\n    s += l[i]\nprint s\n"}
{"label": 71, "index": 9179, "code": "A = input().split()\n\nN = int(A[0])\nK = int(A[1])\n\nA = input().split()\nl = []\n\nfor n in range(N):\n    l.append(int(A[n]))\n\nl.sort(reverse=True)\nsum=0\nfor i in range(K):\n    sum = sum + l[i]\nprint(sum)\n"}
{"label": 71, "index": 9180, "code": "#ABC067B\n\nn,k=map(int,raw_input().split())\nl=map(int,raw_input().split())\nl=sorted(l,reverse=True)\nres=0\nfor i in xrange(k):\n res+=l[i]\nprint res\n"}
{"label": 71, "index": 9181, "code": "m, n = map(int, input().split())\nM = list(map(int, input().split()))\nM.sort()\nM.reverse()\nA = []\nfor i in range(n):\n    A.append(M[i])\nprint(sum(A))\n"}
{"label": 71, "index": 9182, "code": "if __name__ == \"__main__\":\n    N, K = list(map(int, input().split()))\n    data = list(map(int, input().split()))\n    data.sort(reverse = True)\n    result = sum(data[:K])\n    print(result)"}
{"label": 71, "index": 9183, "code": "N, K =list(map(int, input().split()))\n# N, K = 15, 14\nl = list(map(int, input().split()))\n# l = [50, 26, 27, 21, 41, 7, 42, 35, 7, 5, 5, 36, 39, 1, 45]\nsorted_l = sorted(l, reverse=True)\nprint(sum(sorted_l[:K]))\n"}
{"label": 71, "index": 9184, "code": "N,K = [int(i) for i in input().split()]\nl = [int(i) for i in input().split()]\nl.sort()\nl1 = 0\nfor i in range(K):\n    l1 = l1+l[-1-i]\nprint(l1)\n"}
{"label": 71, "index": 9185, "code": "n, k = map(int, input().split(\" \"))\n\nl = list(map(int, input().split(\" \")))\nl.sort()\n\nsum = 0\nfor i in range(n-k, n):\n    sum = sum + l[i]\n\nprint(sum)\n"}
{"label": 71, "index": 9186, "code": "from collections import defaultdict\nfrom itertools import product, groupby\nfrom math import pi\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right\nINF = 10 ** 10\n\n\ndef main():\n    N, K = map(int, input().split())\n    l_list = list(sorted(list(map(int, input().split()))))\n    print(sum(l_list[-K:]))\n\n\nif __name__ == '__main__':\n    main()\n"}
{"label": 71, "index": 9187, "code": "def Q2(x):\n    N, K = x[0][0], x[0][1]\n    lst = x[1][:]\n    lst = sorted(lst)[::-1]\n    return sum(lst[:K])\n\nl = [int(i) for i in input().split()]\nm = [int(i) for i in input().split()]\nn = [l,m]\nprint(Q2(n))"}
{"label": 71, "index": 9188, "code": "# -*- coding: utf-8 -*-\nimport sys\n\nN, K = map(int, input().split())\nl = list(map(int, input().split()))\n\nl.sort()\ns = 0\nfor i in range(K):\n    s += l[N-K+i]\n\nprint(s)"}
{"label": 71, "index": 9189, "code": "n, k = list(map(int, input().split()))\nl = list(map(int, input().split()))\ncnt = 0\nans = 0\nl.sort()\nfor i in reversed(l):\n    if cnt < k:\n        ans += i\n        cnt += 1\n    else:\n        break\nprint(ans)\n"}
{"label": 71, "index": 9190, "code": "# coding: utf-8\n# Here your code !\na=input()\nb=a.split(\" \")\nN=int(b[0])\nK=int(b[1])\nans=[]\nc=input()\nl=c.split(\" \")\nl1=map(int,l)\nl2=list(l1)\nfor w in range(K):\n    ans.append(max(l2))\n    max_idx = l2.index(max(l2))\n    del l2[max_idx]\nprint(sum(ans))"}
{"label": 71, "index": 9191, "code": "c, d = map(int, input().split())\nans = 0\n \na = [int(i) for i in input().split()]\na.sort()\n \nfor i in range(d) :\n    ans = ans + a[c-1-i]\n \nprint (ans)"}
{"label": 71, "index": 9192, "code": "N,K=[int(i) for i in input().split()]\nL=[int(i) for i in input().split()]\nL.sort()\nL.reverse()\nhebi=0\nfor i in range(K):\n hebi=hebi+L[i]\nprint(hebi)"}
{"label": 71, "index": 9193, "code": "n, k =(int (i) for i in input().split())\nl=[int(i) for i in input().split()]\nl.sort()\nsum=0\nfor i in range(0,k):\n    sum += l.pop()\n\nprint(sum)\n"}
{"label": 71, "index": 9194, "code": "def main():\n    N, K = map(int, input().split())\n    L = list(map(int, input().split()))\n    L.sort(reverse=True)\n\n    print(sum(L[:K]))\n\nif __name__ == \"__main__\":\n    # global stime\n    # stime = time.clock()\n    main()\n"}
{"label": 71, "index": 9195, "code": "n, k = map(int, raw_input().split())\n\nl = map(int, raw_input().split())\n\nl.sort()\nl.reverse()\n\nans = 0\n\nfor i in range(k):\n    ans += l[i]\n\nprint ans"}
{"label": 71, "index": 9196, "code": "ans = 0\nn, k = map(int, input().split())\nlst = list(map(int, input().split()))\nlst.sort()\nlst.reverse()\nfor i in range(k):\n    ans += lst[i]\nprint(ans)"}
{"label": 71, "index": 9197, "code": "n, k = map(int, input().split())\n\nl = list(map(int, input().split()))\n\nl.sort()\nl.reverse()\nans = 0\nfor i in range(k):\n    ans += l[i]\n\nprint(ans)"}
{"label": 71, "index": 9198, "code": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport sys\nimport re\nimport math\nimport collections\nimport itertools\nimport functools\n\nDEBUG = True\nDEBUG = False\n\ndef dbg(*args):\n    if DEBUG:\n        print(\"DBG: \", file=sys.stderr, end=\"\")\n        print(*args, file=sys.stderr)\n\n\n\ndef main():\n    n, k = map(int, input().split())\n    ls = list(map(int, input().split()))\n\n    ls.sort(reverse=True)\n    ans = sum(ls[:k])\n    print(ans)\n\nif __name__ == \"__main__\": main()\n"}
{"label": 71, "index": 9199, "code": "N,K=map(int,input().split())\na=list(map(int,input().split()))\n\n\na.sort(reverse=True)\nans=sum(a[:K])\nprint(ans)\n"}
{"label": 71, "index": 9200, "code": "# coding: utf-8\n\nN, K = tuple(map(int, input().split()))\n\nl = list(map(int, input().split()))\n\nprint(sum(sorted(l, reverse = True)[0:K]))\n"}
{"label": 71, "index": 9201, "code": "# -*- coding: utf-8 -*-\nn, k = map(int, raw_input().split())\nl = map(int, raw_input().split())\nl.sort(reverse=True)\n\na = 0\nfor i in range(k):\n    a = a + l[i]\n\nprint a"}
{"label": 71, "index": 9202, "code": "N, K = list(map(int, input().split()))\nl = [int(0)] * N\nl = list(map(int, input().split()))\nl.sort()\nsum=0\nfor i in range(K):\n    sum+=l[N-1-i]\nprint(sum)\n"}
{"label": 71, "index": 9203, "code": "n, k = map(int, input().split())\nl = list(map(int, input().split()))\nl.sort(reverse=True)\nans = 0\nfor i in range(k):\n    ans += l[i]\nprint(ans)"}
{"label": 71, "index": 9204, "code": "N,K=map(int,input().split())\nl=list(map(int,input().split()))\nS=0\nfor i in range(K):\n    S+=max(l)\n    l.remove(max(l))\nprint(S)"}
{"label": 71, "index": 9205, "code": "N,K=map(int,input().split())\nL=list(map(int,input().split()))\nL.sort(reverse=1)\nans=0\nfor i in range(K):\n  ans+=L[i]\nprint(ans)"}
{"label": 71, "index": 9206, "code": "m, n = map(int, input().split())\nM = list(map(int, input().split()))\nM.sort()\nM.reverse()\nA = []\nfor i in range(n):\n    A.append(M[i])\nprint(sum(A))"}
{"label": 71, "index": 9207, "code": "n, k = map(int, input().split())\nls = sorted(list(map(int, input().split())))\nprint(sum(ls[-k:]))"}
{"label": 71, "index": 9208, "code": "N,K = map(int, input().split())\nsrc = list(map(int, input().split()))\nsrc.sort()\nprint(sum(src[-K:]))\n"}
{"label": 71, "index": 9209, "code": "N,K = map(int,input().split())\nlengths = map(int,input().split())\n\nlengths = sorted(lengths)\nresult = 0\nfor i in range(len(lengths)-1,len(lengths)-1-K,-1):\n    result += lengths[i]\nprint(result)\n"}
{"label": 71, "index": 9210, "code": "N, K = map(int, input().split())\nl = list(map(int, input().split()))\n\nl.sort(reverse=True)\nprint(sum(l[0:K]))\n"}
{"label": 71, "index": 9211, "code": "\n\nn, k = map(int, input().split())\nl = list(map(int, input().split()))\nprint(sum(sorted(l, reverse=True)[:k]))\n"}
{"label": 71, "index": 9212, "code": "i = input().split()\nl = list(map(int, input().split()))\nn = int(i[0])\nk = int(i[1])\n\nl.sort(reverse = True)\nans = 0\n\nfor i in range(k):\n    ans += l[i]\nprint(ans)\n"}
{"label": 71, "index": 9213, "code": "import sys\n\ndef main():\n    line = sys.stdin.readline()\n    lst = line.split()\n    n = int(lst[0])\n    k = int(lst[1])\n\n    line = sys.stdin.readline()\n    lst = line.split()\n    l_lst = sorted([int(l) for l in lst], reverse=True)\n\n    print(sum(l_lst[:k]))\n\n\n    return 0\n\nif __name__ == '__main__':\n    sys.exit(main())\n"}
{"label": 71, "index": 9214, "code": "n, k = (int(i) for i in input().split())\nl = [int(i) for i in input().split()]\nl.sort()\nl.reverse()\nsum = 0\nfor m in range(k):\n    sum += l[m]\nprint(sum)\n"}
{"label": 71, "index": 9215, "code": "list = input().rstrip().split()\nN = int(list[0])\nK = int(list[1])\nlist2 = input().rstrip().split()\na = []\nfor i in range(N):\n    a = a + [int(list2[i])]\na.sort()\nsum = 0\nfor i in range(K):\n    sum = sum + a[N-1-i]\nprint(sum)"}
{"label": 71, "index": 9216, "code": "n, k = map(int, raw_input().split())\na = map(int, raw_input().split())\na.sort(reverse = True)\nprint sum(a[0:k])\n"}
{"label": 71, "index": 9217, "code": "n, k = map(int, input().strip().split(' '))\narr = sorted(list(map(int, input().strip().split(' '))))\nprint(sum(arr[-k:]))"}
{"label": 71, "index": 9218, "code": "N, K = map((int), input().split())\nl = [int(item) for item in input().split()]\n\nl.sort(reverse = True)\n\ns = 0\nfor i in range(K):\n    s += int(l[i])\n\nprint(s)"}
{"label": 71, "index": 9219, "code": "#!/usr/bin/python\n\nimport sys\n\ndef main(argv):\n    N, K = map(lambda x: int(x), sys.stdin.readline().split(\" \", 2))\n    while N and K:\n        L = map(lambda x: int(x), raw_input().split(\" \", N))\n        print(sum(sorted(L)[-K:]))\n\n        line = sys.stdin.readline()\n        if line:\n            N, K = map(lambda x: int(x), line.split(\" \", 2))\n        else:\n            N = None\n            K = None\n\nif __name__ == \"__main__\":\n    main(sys.argv)"}
{"label": 71, "index": 9220, "code": "(N, K) = map(int, input().split(\" \"))\na = map(int, input().split())\nsa = sorted(a)\nleng = sum(sa[:-(K+1):-1])\nprint(leng)"}
{"label": 71, "index": 9221, "code": "#!/usr/bin/env python\n# -*- coding: utf8 -*-\n\nN, K=map(int, raw_input().split())\nl = map(int, raw_input().split())\n\nl.sort(reverse=True)\nSUM = 0\nfor i in range(K):\n    SUM += l[i]\n\nprint SUM"}
{"label": 71, "index": 9222, "code": "n, k = [int(x) for x in input().split()]\nl = [int(y) for y in input().split()]\n\nl.sort()\n\nprint(sum(l[-k:]))\n"}
{"label": 71, "index": 9223, "code": "# \u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u306e\u6574\u6570\u306e\u5165\u529b\nN, K = map(int, input().split())\n\nl = [int(i) for i in input().split()]\nl.sort(reverse=True)\n\nans = 0\nfor i in range(K):\n\tans += l[i]\n\nprint(ans)\n"}
{"label": 71, "index": 9224, "code": "n,k=map(int,input().split())\nl = list(map(int,input().split()))\nl.sort(reverse=True)\n\nprint(sum(l[:k]))"}
{"label": 71, "index": 9225, "code": "n, k = map(int, input().split(\" \"))\nl = map(int, input().split(\" \"))\n\nprint(sum(sorted(l)[-k:]))\n\n"}
{"label": 71, "index": 9226, "code": "# -*- coding: utf-8 -*-\n\n#\u3059\u306c\u3051\u304f\u3093\u306f N \u672c\u306e\u68d2\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002 i \u756a\u76ee\u306e\u68d2\u306e\u9577\u3055\u306f li \u3067\u3059\u3002\n#\u3059\u306c\u3051\u304f\u3093\u306f K \u672c\u306e\u68d2\u3092\u9078\u3093\u3067\u3064\u306a\u3052\u3066\u3001\u30d8\u30d3\u306e\u304a\u3082\u3061\u3083\u3092\u4f5c\u308a\u305f\u3044\u3067\u3059\u3002\n#\u30d8\u30d3\u306e\u304a\u3082\u3061\u3083\u306e\u9577\u3055\u306f\u9078\u3093\u3060\u68d2\u305f\u3061\u306e\u9577\u3055\u306e\u7dcf\u548c\u3067\u8868\u3055\u308c\u307e\u3059\u3002 \n#\u30d8\u30d3\u306e\u304a\u3082\u3061\u3083\u306e\u9577\u3055\u3068\u3057\u3066\u3042\u308a\u3046\u308b\u9577\u3055\u306e\u3046\u3061\u3001\u6700\u5927\u5024\u3092\u6c42\u3081\u306a\u3055\u3044\u3002\n\nA = input().split()\nB = input().split()\n#A = [5, 3]\n#B = [1, 2, 3, 4, 5]\n#A = [15, 14]\n#B = [50, 26, 27, 21, 41, 7, 42, 35, 7, 5, 5, 36, 39, 1, 45]\n\nN = int(A[0])\nK = int(A[1])\n\nC = []\n\nfor i in range(N):\n    C.append(int(B[i]))\n\nD = sorted(C)\n\nans = 0\n\nfor i in range(K):\n    x = N - i -1\n    ans = ans + D[x]\n\nprint(ans)\n"}
{"label": 71, "index": 9227, "code": "if(__name__ == \"__main__\"):\n    N, K =[int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    #print(a,b)\n    \n    maxlist = a[:K]\n    #print(maxlist)\n    for i in range(K,N):\n        if(min(maxlist) < a[i]):\n            maxlist.remove(min(maxlist))\n            maxlist.append(a[i])\n            #print(maxlist)\n        \n    print(sum(maxlist))"}
{"label": 71, "index": 9228, "code": "n, k = list(map(int, input().split()))\nl = list(map(int, input().split()))\nprint(sum(sorted(l, reverse=True)[:k]))\n"}
{"label": 71, "index": 9229, "code": "t = raw_input().split()\na = int(t[0])\nb = int(t[1])\nl = map(int, raw_input().strip().split())\nl.sort()\nl = l[::-1]\nans = 0\nfor x in range(b):\n\tans += l[x]\nprint(ans)"}
{"label": 72, "index": 9230, "code": "print(\"ABC{0}\".format(input()))\n"}
{"label": 72, "index": 9231, "code": "# coding: utf-8\n\nn = input()\nprint \"ABC\" + str(n)\n"}
{"label": 72, "index": 9232, "code": "print \"ABC\" + raw_input()"}
{"label": 72, "index": 9233, "code": "# -*- coding:utf-8 -*-\nN = int(input())\nprint(\"ABC\"+str(N))"}
{"label": 72, "index": 9234, "code": "n=input()\nprint('ABC'+n)"}
{"label": 72, "index": 9235, "code": "num = input()\nprint(\"ABC\" + num)"}
{"label": 72, "index": 9236, "code": "print(\"{}{}\".format(\"ABC\",input())  )"}
{"label": 72, "index": 9237, "code": "a = input()\nprint('ABC'+ a)"}
{"label": 72, "index": 9238, "code": "N=input()\nprint('ABC'+N)"}
{"label": 72, "index": 9239, "code": "#ABC068A\n\nn=raw_input()\nprint 'ABC'+n\n"}
{"label": 72, "index": 9240, "code": "num = int(input())\nprint (\"ABC{}\".format(num))\n"}
{"label": 72, "index": 9241, "code": "N = input()\n\nprint(\"ABC\"+N)"}
{"label": 72, "index": 9242, "code": "#!usr/bim/python\n#! -*- coding: utf-8 -*-\n\n\nnum = raw_input()\n\nprint \"ABC\"+num\n"}
{"label": 72, "index": 9243, "code": "print \"ABC%d\" % input()"}
{"label": 72, "index": 9244, "code": "N = input()\nprint(\"ABC\"+N)"}
{"label": 72, "index": 9245, "code": "a = input()\nprint(\"ABC\" + a)\n"}
{"label": 72, "index": 9246, "code": "print(\"ABC\"+input())\n"}
{"label": 72, "index": 9247, "code": "# -*- coding: utf-8 -*-\nn = int(raw_input())\nif n >= 100 and n <= 999:\n    print \"ABC\" + str(n)\nelse:\n    exit"}
{"label": 72, "index": 9248, "code": "s=input()\nprint(\"ABC%s\"%(s))"}
{"label": 72, "index": 9249, "code": "a = input()\n\nprint('ABC'+a)"}
{"label": 72, "index": 9250, "code": "print(\"ABC\"+ input())"}
{"label": 72, "index": 9251, "code": "N = int(input())\nprint(\"ABC{0:03d}\".format(N))"}
{"label": 72, "index": 9252, "code": "x = int(input())\nprint('ABC', x, sep='')"}
{"label": 72, "index": 9253, "code": "print('ABC'+input())\n"}
{"label": 72, "index": 9254, "code": "print 'ABC'+raw_input()"}
{"label": 72, "index": 9255, "code": "n = input()\nprint('ABC' + n)"}
{"label": 72, "index": 9256, "code": "a = int(input())\nb = \"ABC\" + str(a)\n\nprint(b)"}
{"label": 72, "index": 9257, "code": "print str(\"ABC\") + raw_input()"}
{"label": 72, "index": 9258, "code": "print('ABC' + input())"}
{"label": 72, "index": 9259, "code": "S = input()\nprint(\"ABC\"+S)"}
{"label": 72, "index": 9260, "code": "n = input()\nprint(\"ABC\" + n)"}
{"label": 72, "index": 9261, "code": "n=input()\nans='ABC'+str(n)\nprint(ans)\n"}
{"label": 72, "index": 9262, "code": "#!/usr/bin/python\n\nimport sys\n\ndef main(argv):\n    for line in sys.stdin:\n        print(\"ABC{0}\".format(int(line)))\n\nif __name__ == \"__main__\":\n    main(sys.argv)"}
{"label": 72, "index": 9263, "code": "a=input()\nprint('ABC'+a)"}
{"label": 72, "index": 9264, "code": "print(\"ABC\"+str(input()))\n"}
{"label": 72, "index": 9265, "code": "N = int(input())\nprint(\"ABC\" + str(N))"}
{"label": 72, "index": 9266, "code": "a = input()\nprint(\"ABC\" + str(a))"}
{"label": 72, "index": 9267, "code": "print(\"ABC\" + input())"}
{"label": 72, "index": 9268, "code": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nprint('ABC'+input())"}
{"label": 72, "index": 9269, "code": "print(\"ABC\"+input())"}
{"label": 72, "index": 9270, "code": "nb = int(input())\nprint(\"ABC\",end = \"\")\nprint(nb)"}
{"label": 72, "index": 9271, "code": "n = input()\n\nprint(\"ABC\" + n)\n"}
{"label": 72, "index": 9272, "code": "print(\"ABC\" + input())"}
{"label": 72, "index": 9273, "code": "from sys import stdin\nprint 'ABC'+stdin.readline()"}
{"label": 72, "index": 9274, "code": "print('ABC'+input())"}
{"label": 72, "index": 9275, "code": "N = str(input())\nprint('ABC' + N)"}
{"label": 72, "index": 9276, "code": "def main():\n    print(\"ABC\" + input())\n\nif __name__ == '__main__':\n    main()\n"}
{"label": 72, "index": 9277, "code": "print('ABC'+input())"}
{"label": 72, "index": 9278, "code": "a = input()\nprint(\"ABC\" + a )"}
{"label": 72, "index": 9279, "code": "# coding: utf-8\n# Here your code !\nN = input()\nprint(\"ABC\" + N)"}
{"label": 72, "index": 9280, "code": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport sys\nimport re\nimport math\nimport collections\nimport itertools\nimport functools\n\nDEBUG = True\nDEBUG = False\n\ndef dbg(*args):\n    if DEBUG:\n        print(\"DBG: \", file=sys.stderr, end=\"\")\n        print(*args, file=sys.stderr)\n\n\n\ndef main():\n    N = int(input())\n    print(\"ABC{:03d}\".format(N))\n\nif __name__ == \"__main__\": main()\n"}
{"label": 72, "index": 9281, "code": "N = input()\nprint(\"ABC\" + N.zfill(3))"}
{"label": 72, "index": 9282, "code": "N = int(raw_input())\nprint \"ABC{}\".format(N)"}
{"label": 72, "index": 9283, "code": "x = input()\nprint('ABC'+x)"}
{"label": 72, "index": 9284, "code": "n = str(input())\nprint(\"ABC\"+n)"}
{"label": 72, "index": 9285, "code": "a=input()\nprint(\"ABC\" + a)"}
{"label": 72, "index": 9286, "code": "n=input()\nprint(\"ABC\"+n)"}
{"label": 72, "index": 9287, "code": "n=input()\nprint(\"ABC\"+n)"}
{"label": 72, "index": 9288, "code": "N = raw_input()\nprint('ABC{0}'.format(N))"}
{"label": 72, "index": 9289, "code": "n = int(input())\nprint(\"ABC\"+str(n))"}
{"label": 72, "index": 9290, "code": "import sys\n\n\ndef main():\n    args = sys.stdin.readline().split()\n    N = int(args[0])\n\n    print('ABC' + str(N))\n\nmain()"}
{"label": 72, "index": 9291, "code": "x=input()\nprint(\"ABC\"+x)"}
{"label": 72, "index": 9292, "code": "N = int(input())\n\nprint(\"ABC\" + str(N))\n"}
{"label": 72, "index": 9293, "code": "n = input()\nprint('ABC' + str(n).zfill(3))"}
{"label": 72, "index": 9294, "code": "n=input()\nprint('ABC'+n)"}
{"label": 72, "index": 9295, "code": "a=input()\nb='ABC'\nprint(b + a)\n"}
{"label": 72, "index": 9296, "code": "# a = list(map(int, input().split()))\n# print(a)\n\nn = int(input())\n\nprint(\"ABC\" + str(n))\n"}
{"label": 72, "index": 9297, "code": "a = input()\nprint('ABC' + a)"}
{"label": 72, "index": 9298, "code": "N=input()\nprint('ABC'+N)"}
{"label": 72, "index": 9299, "code": "n = int(input())\nprint(\"ABC\" + str(n))"}
{"label": 72, "index": 9300, "code": "x=int(input())\nprint(\"ABC\"+str(x))"}
{"label": 72, "index": 9301, "code": "#! /usr/bin/env python3\n\nprint('ABC' + input())"}
{"label": 72, "index": 9302, "code": "print(\"ABC\" + input())"}
{"label": 72, "index": 9303, "code": "print(\"ABC\" + input())"}
{"label": 72, "index": 9304, "code": "N = input()\nprint(\"ABC{0}\" .format(N))"}
{"label": 72, "index": 9305, "code": "n=int(raw_input())\nprint \"ABC\"+str(n)"}
{"label": 72, "index": 9306, "code": "num = input()\nprint(\"ABC\"+num)"}
{"label": 72, "index": 9307, "code": "print \"ABC%03d\" % int(raw_input())\n"}
{"label": 72, "index": 9308, "code": "print(\"ABC\"+input())"}
{"label": 72, "index": 9309, "code": "i=input()\nprint('ABC'+i)\n\n"}
{"label": 72, "index": 9310, "code": "import sys\n\n# sys.stdin = open('a1.in')\n\n\ndef read_int_list():\n    return list(map(int, input().split()))\n\n\ndef read_str_list():\n    return input().split()\n\n\ndef read_int():\n    return int(input())\n\n\ndef read_str():\n    return input()\n\n\nn = read_int()\nprint('ABC' + str(n))\n"}
{"label": 72, "index": 9311, "code": "a = str(input())\nprint(\"ABC\" + a)\n"}
{"label": 72, "index": 9312, "code": "n = input()\nprint('ABC' + n)\n"}
{"label": 72, "index": 9313, "code": "print('ABC' + input())"}
{"label": 72, "index": 9314, "code": "a = input();\nprint (\"ABC\" + a)"}
{"label": 72, "index": 9315, "code": "n = input()\nprint(\"ABC\" +n)"}
{"label": 72, "index": 9316, "code": "a=input()\nprint(\"ABC\"+a) "}
{"label": 72, "index": 9317, "code": "def a():\n    n = int(input())\n    print('ABC'+str(n))\n\na()\n"}
{"label": 72, "index": 9318, "code": "print('ABC'+input())"}
{"label": 72, "index": 9319, "code": "# coding: utf-8\n\nprint(\"ABC\" + input())\n"}
{"label": 72, "index": 9320, "code": "print(\"ABC\"+str(input()))"}
{"label": 72, "index": 9321, "code": "N = int(input())\n\nprint(\"ABC\" + str(N))"}
{"label": 72, "index": 9322, "code": "N = int(input())\n\nprint(\"ABC\" + str(N))"}
{"label": 72, "index": 9323, "code": "s = raw_input()\nprint 'ABC' + s\n"}
{"label": 72, "index": 9324, "code": "# -*- coding: utf-8 -*-\n\nimport math\n\nn = input()\nprint(\"ABC\" + n)\n"}
{"label": 72, "index": 9325, "code": "print(\"ABC\"+input())"}
{"label": 72, "index": 9326, "code": "N=str(input())\nprint('ABC'+N)\n"}
{"label": 72, "index": 9327, "code": "print(\"ABC\"+input())"}
{"label": 72, "index": 9328, "code": "n = input()\nprint('ABC' + n)"}
{"label": 72, "index": 9329, "code": "n = int(input())\nprint(\"ABC\" + str(n))"}
{"label": 72, "index": 9330, "code": "a = raw_input()\nprint('ABC'+a)"}
{"label": 72, "index": 9331, "code": "print(\"ABC\"+input())"}
{"label": 72, "index": 9332, "code": "a=input()\nprint('ABC'+a)"}
{"label": 72, "index": 9333, "code": "n = int(input())\nprint(\"ABC\",n,sep = '')\n"}
{"label": 72, "index": 9334, "code": "x=input()\nprint(\"ABC\"+str(x))\n\n"}
{"label": 72, "index": 9335, "code": "print(\"ABC\" + input())"}
{"label": 72, "index": 9336, "code": "s = input()\n\nprint(\"ABC\" + s)"}
{"label": 72, "index": 9337, "code": "n = input()\nprint(\"ABC\" + n)"}
{"label": 72, "index": 9338, "code": "n=input()\n\nans=\"ABC\"+n\n\nprint(ans)"}
{"label": 72, "index": 9339, "code": "print(\"ABC\"+input())"}
{"label": 72, "index": 9340, "code": "N = str(input())\n\nprint(\"ABC\" + N)"}
{"label": 72, "index": 9341, "code": "def main():\n    print(\"ABC{}\".format(input()))\n    \n\nif __name__ == \"__main__\":\n    main()"}
{"label": 72, "index": 9342, "code": "N = input()\nprint(\"ABC\"+N)"}
{"label": 72, "index": 9343, "code": "#Python\n\nN = input()\nprint \"ABC\"+str(N)"}
{"label": 72, "index": 9344, "code": "print(\"ABC\" + input())"}
{"label": 72, "index": 9345, "code": "S = input()\nprint('ABC' + S)"}
{"label": 72, "index": 9346, "code": "# -*- coding: utf-8 -*-\n\ncount = input()\n\nprint(\"ABC\" + str(count))\n"}
{"label": 72, "index": 9347, "code": "N=input ()\nprint (\"ABC\"+N)"}
{"label": 72, "index": 9348, "code": "s = input()\ns = int(s)\nprint(\"ABC{0}\".format(s))\n"}
{"label": 72, "index": 9349, "code": "N = raw_input()\nprint('ABC' + N)"}
{"label": 72, "index": 9350, "code": "N = input()\nprint('ABC' + N)"}
{"label": 72, "index": 9351, "code": "A = str(input())\nprint(\"ABC\"+ A)"}
{"label": 72, "index": 9352, "code": "#!/usr/bin/env python\n\nnum = input()\n\nprint(\"ABC\" + num)\n"}
{"label": 72, "index": 9353, "code": "N = input()\n\nprint(\"ABC\" + N, sep=\" \")\n"}
{"label": 72, "index": 9354, "code": "print('ABC' + input())"}
{"label": 72, "index": 9355, "code": "number = input()\nTournament = \"ABC\"\nTournament += number\nprint(Tournament)"}
{"label": 72, "index": 9356, "code": "N = input()\n\nprint('ABC' + N)"}
{"label": 72, "index": 9357, "code": "print(\"ABC\" + input())"}
{"label": 72, "index": 9358, "code": "def main():\n\tn = input()\n\tprint(\"ABC\" + n)\n \nif __name__ == '__main__':\n\tmain()"}
{"label": 72, "index": 9359, "code": "print(\"ABC\" + input())"}
{"label": 73, "index": 9360, "code": "N = int(raw_input())\ndata = [1, 2, 4, 8, 16, 32, 64]\nprint max([d for d in data if d <= N])\n"}
{"label": 73, "index": 9361, "code": "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\ngosa = 1.0 / 10**9\nmod = 10**9 + 7\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\n\n\ndef main():\n    N = I()\n    r = 0\n    while N>=2:\n        N //= 2\n        r += 1\n\n    return 2**r\n\n\n\nprint(main())\n\n"}
{"label": 73, "index": 9362, "code": "# -*- coding: utf-8 -*-\n\nN = int(raw_input())\n\nif N >= 64:\n    print '64'\nelif N >= 32:\n    print '32'\nelif N >= 16:\n    print '16'\nelif N >= 8:\n    print '8'\nelif N >= 4:\n    print '4'\nelif N >= 2:\n    print '2'\nelse:\n    print '1'\n"}
{"label": 73, "index": 9363, "code": "Nmax = int(input())\nans = 1\nmaxnum = 0\nfor N in range(1, Nmax+1):\n    cnt=0\n    N_before = N\n    while 1:\n        if int(N/2) == int((N+1)/2):\n            N = N/2\n            cnt +=1\n        else:\n            break\n    if cnt > maxnum:\n        maxnum = cnt\n        ans = N_before\nprint (ans)\n"}
{"label": 73, "index": 9364, "code": "n = int(input())\nfor i in range(7):\n    if 2 ** i <= n < 2 ** (i+1):\n        print(2 ** i)\n        break\n"}
{"label": 73, "index": 9365, "code": "#!/usr/bin\n# -*- coding=\"utf-8\" -*-\n \nn = int(input())\nif n >= 64:\n  a = 64\nelif n >= 32:\n  a = 32\nelif n >= 16:\n  a = 16\nelif n >= 8:\n  a= 8\nelif n >= 4:\n  a = 4\nelif n >= 2:\n  a = 2\nelse:\n  a = 1\nprint(a)"}
{"label": 73, "index": 9366, "code": "n = int(input())\ni=1\nwhile ( i * 2 <= n):\n    i *= 2\nprint(i)"}
{"label": 73, "index": 9367, "code": "N = int(input())\n\ntmp = 1\nwhile(1):\n    if tmp*2 > N:\n        break\n    else:\n        tmp *= 2\n        \nprint(tmp)"}
{"label": 73, "index": 9368, "code": "def countdiv(n):\n\tm = n\n\tcnt = 0\n\twhile m % 2 == 0:\n\t\tcnt += 1\n\t\tm = m / 2\n\treturn cnt\n\nn = int(raw_input())\nmax = 0\nnmb = 1\n\nfor i in range(1, n+1):\n\ttmp = countdiv(i)\n\tif tmp > max:\n\t\tmax = tmp\n\t\tnmb = i\n\nprint nmb"}
{"label": 73, "index": 9369, "code": "x = input()\nx = int(x)\ny = 1\nwhile x>=y:\n    y = y*2\nelse:\n    print(int(y/2))"}
{"label": 73, "index": 9370, "code": "n = int(input())\ni = 0\nwhile 2 ** i <= n:\n    i += 1\nprint(2 ** (i - 1))\n"}
{"label": 73, "index": 9371, "code": "a=[0,1,2,2,4,4,4,4,8,8,8,8,8,8,8,8,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64]\nprint(a[(int(input()))])\n"}
{"label": 73, "index": 9372, "code": "n = int(input())\nans = 1\nwhile n >= ans*2:\n    ans *= 2\nprint(ans)"}
{"label": 73, "index": 9373, "code": "N = int(raw_input())\n\nS = range(N)\nfor i in S:\n    S[i] = i + 1\n\nres = []\n\nfor i in S:\n    num = i\n    count = 0\n\n    while i%2 == 0:\n\n        i = i/2\n        count += 1\n\n    res.append((count,num))\n\n\nres.sort()\n\nAnser = res[-1][1]\n\nprint Anser\n"}
{"label": 73, "index": 9374, "code": "N = int(input())\n\nli = [2**i for i in range(7)]\n\nfor i, x in enumerate(li, 1):\n    if N >= li[len(li)-i]:\n        print(li[len(li)-i])\n        break\n    else:\n        continue\n"}
{"label": 73, "index": 9375, "code": "n = int(input())\nfor i in range(8):\n    if 2 ** i <= n < 2 ** (i+1):\n        print(2 ** i)\n        break"}
{"label": 73, "index": 9376, "code": "n = int(input())\n\nif n >= 64:\n    print(64)\nelif n >= 32:\n    print(32)\nelif n >= 16:\n    print(16)\nelif n >= 8:\n    print(8)\nelif n >= 4:\n    print(4)\nelif n >= 2:\n    print(2)\nelse:\n    print(1)\n"}
{"label": 73, "index": 9377, "code": "N = int(input())\ns = 7\ni = 0\n\nfor i in range(s):\n    t = 64 >> i\n    if (0 != (N & int(t))):\n        print(t)\n        break"}
{"label": 73, "index": 9378, "code": "n = map(int, raw_input().split())[0]\n\ni = 1\n\nwhile i * 2 <= n:\n    i *= 2\n\nprint i\n"}
{"label": 73, "index": 9379, "code": "n=int(input())\na=[2**x for x in range(7)]\na=a[::-1]\nfor x in a:\n    if n>=x:\n        ans=x\n        break\nprint(ans)"}
{"label": 73, "index": 9380, "code": "n = int(input())\nbi = [2 ** i for i in range(8)]\nfor i in range(8):\n    if n < bi[i]:\n        print(bi[i - 1])\n        break\n"}
{"label": 73, "index": 9381, "code": "n = int(input())\n\nimport math as m\nprint(2** m.floor(m.log(n, 2)))"}
{"label": 73, "index": 9382, "code": "n=int(input())\na=1\nwhile a*2<=n:\n a*=2\nprint(a)"}
{"label": 73, "index": 9383, "code": "N = int(input())\nif N < 2:\n    print('1')\nelif N < 4:\n    print('2')\nelif N < 8:\n    print('4')\nelif N < 16:\n    print('8')\nelif N < 32:\n    print('16')\nelif N < 64:\n    print('32')\nelse:\n    print('64')"}
{"label": 73, "index": 9384, "code": "n=int(input())\nl = [2,4,8,16,32,64]\nif n==1:\n    print(1)\nelse:\n    while True:\n        a=l.pop()\n        if n>=a:\n            print(a)\n            break\n"}
{"label": 73, "index": 9385, "code": "n = int(input())\n\nbreakNum = 1\n\nwhile breakNum*2 <= n:\n\tbreakNum *= 2\n\nprint(breakNum)"}
{"label": 73, "index": 9386, "code": "N = int(input())\ni = 1\nwhile i <= N:\n    i *= 2\nprint(i//2)\n"}
{"label": 73, "index": 9387, "code": "n = int(input())\nnum = 1\nwhile True:\n    if num*2 > n:\n        print(num)\n        break\n    elif num*2 == n:\n        print(num*2)\n        break\n    else:\n        num *= 2"}
{"label": 73, "index": 9388, "code": "N = int(input())\n\nfor i in range(10):\n    if 2 ** i <= N < 2 ** (i+1):\n        print(2**i)\n        break"}
{"label": 73, "index": 9389, "code": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport sys\n\nn = int(sys.stdin.readline())\n\nx = 2\nwhile x <= n:\n\tx *= 2\n\nif n < 2:\n\tprint (str(n))\nelse:\n\tprint (str(int(x/2)))"}
{"label": 73, "index": 9390, "code": "# coding: utf-8\n# Here your code !\nn = int(input())\ni = 1\nwhile i <8:\n    if n < 2**i:\n        print (2**(i-1))\n        break\n    else:\n        i += 1"}
{"label": 73, "index": 9391, "code": "n = int(input())\na = [1,2,4,8,16,32,64]\nb = 0\nfor x in a:\n if n < x:\n  break\n b = x\nprint(b) "}
{"label": 73, "index": 9392, "code": "N = int(input())\n\nif N == 1:\n\tprint(1)\nelif N < 4:\n\tprint(2)\nelif N < 8:\n\tprint(4)\nelif N < 16:\n\tprint(8)\nelif N < 32:\n\tprint(16)\t\nelif N < 64:\n\tprint(32)\nelse:\n\tprint(64)"}
{"label": 73, "index": 9393, "code": "# coding: utf-8\n\nn = int(input())\nfor i in range(7, -1, -1):\n    a = 2**i\n    if n >= a:\n        print(a)\n        exit()"}
{"label": 73, "index": 9394, "code": "# coding: utf-8\n\nif __name__ == \"__main__\":\n    n = int(input())\n    r = 0\n    while 2**r <= n:\n        r += 1\n\n    r -= 1\n\n    print(2**r)\n"}
{"label": 73, "index": 9395, "code": "N = int(input())\ncnt_max = 0\nans = 1\nfor n in range(1 , N+1):\n    cnt = 0\n    z = n\n    while True:\n        if z%2 == 0:\n            cnt += 1\n            z = z / 2\n        else:\n            break\n    if cnt > cnt_max:\n        cnt_max = cnt\n        ans = n\n\nprint(ans)"}
{"label": 73, "index": 9396, "code": "import math\nimport numpy as np\nprint(int(2**math.floor(np.log2(int(raw_input())))))"}
{"label": 73, "index": 9397, "code": "#!usr/bim/python\n#! -*- coding: utf-8 -*-\n\nnum = raw_input()\nnum = int(num)\n\ni = 0\nwhile 1:\n    if 2**i <= num:\n        i += 1\n    else:\n        break\n\nans = 2**(i - 1)\n\nprint ans\n"}
{"label": 73, "index": 9398, "code": "num = int(input())\ncnt =0\nwhile num>1:\n    num = int(num/2)\n    cnt +=1\nprint(2**cnt)"}
{"label": 73, "index": 9399, "code": "N = int(input())\nsecound = [64,32,16,8,4,2,1]\nfor i in secound:\n    if N >= i:\n        print(i)\n        break"}
{"label": 73, "index": 9400, "code": "input_number = int(input())                                                                 \ncount = 0 \nbuff_rank = []\n\nfor i in range(1,input_number+1):\n    num = i \n    while num % 2 == 0:\n        num = num // 2\n        count = count + 1 \n    buff_rank.append(count)\n    count = 0 \n\nprint(buff_rank.index(max(buff_rank))+1)"}
{"label": 73, "index": 9401, "code": "n = int(raw_input())\na = 1\nwhile a*2 <= n:\n    a *= 2\nprint a\n"}
{"label": 73, "index": 9402, "code": "N = int(input())\n\ni = 1\nwhile(1):\n    if i*2 > N:\n        break\n    i = i*2\nprint(i)    "}
{"label": 73, "index": 9403, "code": "a = int(input())\ncnt = 0\nwhile a:\n    cnt += 1\n    a >>= 1\nprint(1 << (cnt - 1))\n"}
{"label": 73, "index": 9404, "code": "from math import log\nprint (max(1, 2**int(log(int(input()), 2))))"}
{"label": 73, "index": 9405, "code": "n=int(input())\n\nans=1\nwhile True:\n    if n>ans: ans*=2\n    elif n==ans: break\n    else: ans/=2; break\n\nprint(int(ans))"}
{"label": 73, "index": 9406, "code": "N = int(input())\n\nc_max = 0\ni_max = 1\nfor i in range(1, N+1):\n    c = 0\n    num = i\n    while True:\n        if num % 2 != 0:\n            break\n        num = num // 2\n        c += 1\n    if c > c_max:\n        c_max = c\n        i_max = i\n        \nprint(i_max)\n"}
{"label": 73, "index": 9407, "code": "arr=[64,32,16,8,4,2,1]\nn=int(input())\nfor i in arr:\n    if n>=i:\n        print(i)\n        break\n"}
{"label": 73, "index": 9408, "code": "n = int(input())\nnums = [2**x for x in range(10)]\nwhile True:\n\tif n in nums:\n\t\tprint(n)\n\t\tbreak\n\telse:\n\t\tn -= 1"}
{"label": 73, "index": 9409, "code": "N = input()\n\ni = 1\n\nwhile i <= N:\n    i *= 2\n\nprint i / 2"}
{"label": 73, "index": 9410, "code": "N = int(input())\nans = 64\nwhile ans >= 1:\n    if N >= ans: break\n    ans //= 2\nprint(ans)\n"}
{"label": 73, "index": 9411, "code": "import math\nn=int(input())\n\nif n==1:\n    print(1)\nelse:\n    m=math.log2(n)\n    ans=math.pow(2,math.floor(m))\n    print(int(ans))\n\n\n\n"}
{"label": 73, "index": 9412, "code": "# -*- coding: utf-8 -*-\n\nimport math\n\ndef check(n, i):\n    if (2 ** i > n):\n        return 2 ** (i-1)\n    else:\n        return check(n, i+1)\n\nn = int(input())\nprint(check(n, 0))\n"}
{"label": 73, "index": 9413, "code": "a = 100\nl = [0]*a\nt = 1\nfor x in xrange(a):\n\twhile t%2 == 0:\n\t\tt = t/2\n\t\tl[x] += 1\n\tt = x+2\na = int(raw_input())\nma = 0\nmi = 1\nfor x in range(a):\n\tif l[x] > ma:\n\t\tma = l[x]\n\t\tmi = x\nif a == 1:\n\tprint(1)\nelse:\n\tprint(mi+1)"}
{"label": 73, "index": 9414, "code": "N=int(input())\nans=0\nwhile 2**ans <= N:\n    ans += 1\n\nprint(2**(ans-1))\n"}
{"label": 73, "index": 9415, "code": "N = int(input())\n\nif N == 1:\n    print(N)\nelse:\n    for i in range(N):\n        if 2**i > N:\n            print(2**(i-1))\n            break\n        "}
{"label": 73, "index": 9416, "code": "n = int(input())\ni = 1\nwhile i <= n:\n    i *= 2\nprint(int(i/2))"}
{"label": 73, "index": 9417, "code": "N = int(input())\ni = 0\nwhile 2**i <= N:\n    i = i + 1\nprint(2**(i-1))"}
{"label": 73, "index": 9418, "code": "import sys\n\n# sys.stdin = open('b1.in')\n\n\ndef read_int_list():\n    return list(map(int, input().split()))\n\n\ndef read_str_list():\n    return input().split()\n\n\ndef read_int():\n    return int(input())\n\n\ndef read_str():\n    return input()\n\n\nn = read_int()\nres = 0\nfor i in range(100):\n    r = 2 ** i\n    if r <= n:\n        res = r\n    else:\n        break\nprint(res)\n"}
{"label": 73, "index": 9419, "code": "N=int(raw_input())\n\ni=1\nwhile 2**i <= N:\n    i+=1\n\nprint 2**(i-1)"}
{"label": 73, "index": 9420, "code": "print(2**(len(str(bin(int(input()))))-3))"}
{"label": 73, "index": 9421, "code": "from math import log2\nfrom math import floor\nN=int(input())\nprint(2**floor(log2(N)))"}
{"label": 73, "index": 9422, "code": "n = int(input())\npow2 = [2 ** item for item in range(10)]\nfor item in pow2[::-1]:\n    if(item <= n):\n        print(item)\n        break\n"}
{"label": 73, "index": 9423, "code": "N=int(input())\nx=[]\nfor i in range(200):\n    x.append(0)\nfor i in range(200):\n    ori=i\n    while ori!=0:\n        if ori%2==0:\n            ori=ori/2\n            x[i]+=1\n        else:\n            break\nmaxi=1\nmaxv=0\nfor i in range(200):\n    if maxv<x[i] and i<N+1:\n        maxv=x[i]\n        maxi=i\nprint(maxi)\n"}
{"label": 73, "index": 9424, "code": "m = int(input())\na = 1\nfor c in range(7):\n  if (2 ** c) > m:\n    break\n  a = (2 ** c)\n\nprint(a)\n"}
{"label": 73, "index": 9425, "code": "n = int(input())\nif n == 1:\n    print(1)\n    exit()\n\nans = [0] * 2\nfor i in range(1, n + 1):\n    num = i\n    cnt = 0\n    while num % 2 == 0:\n        num //= 2\n        cnt += 1\n\n    if cnt > ans[1]:\n        ans[0] = i\n        ans[1] = cnt\n\nprint(ans[0])\n"}
{"label": 73, "index": 9426, "code": "# -*- coding: utf-8 -*-\n\nN = int(input())\n\ncnt = 0\nwhile True:\n    if N >= 2:\n        N = N // 2\n        cnt += 1\n    else:\n        break\n\nprint(2**cnt)"}
{"label": 73, "index": 9427, "code": "N=int(input())\nN|=N>>1\nN|=N>>2\nN|=N>>4\nN|=N>>8\nprint((N+1)>>1)"}
{"label": 73, "index": 9428, "code": "# coding: utf-8\n\nn = input()\nm = 0\nrank = 1\nfor i in range(1, n+1):\n    j = i\n    c = 0\n    while True:\n        if j % 2 == 0:\n            j /= 2\n            c += 1\n\n        else:\n            if m < c:\n                m = c\n                rank = i\n            break\n\nprint rank\n"}
{"label": 73, "index": 9429, "code": "import math\nN=int(input())\nL=int(math.log(N,2))\nprint(2**L)"}
{"label": 73, "index": 9430, "code": "N = int(input())\np = 0\nwhile True:\n    if N < 2**p:\n        print(2**(p-1))\n        break\n    else:\n        p=p+1\n    "}
{"label": 73, "index": 9431, "code": "N = int(input())\nA = 1\nwhile A <= N:\n    A *= 2\nA /= 2\nprint(int(A))\n"}
{"label": 73, "index": 9432, "code": "N = int(input())\nn = 0\nwhile N>=2**n:\n    n += 1\nprint(2**(n-1))"}
{"label": 73, "index": 9433, "code": "import sys\nimport math\n\n\ndef main():\n    args = sys.stdin.readline().split()\n    N = int(args[0])\n\n    X = 0\n    while True:\n        X += 1\n        temp = math.pow(2, X)\n        if temp > N:\n            temp = math.pow(2, X-1)\n            break\n\n    print(int(temp))\n\nmain()"}
{"label": 73, "index": 9434, "code": "N = int(raw_input())\nn = 1\nwhile n * 2 <= N:\n  n *= 2\nprint n"}
{"label": 73, "index": 9435, "code": "from sys import stdin\nma = -1\nans = -1\nn = int(stdin.readline())\nfor i in xrange(1,n+1):\n x = i\n cn = 0\n while x%2==0:\n  x/=2;cn+=1\n if cn > ma:\n  ma = cn;ans = i\nprint ans"}
{"label": 73, "index": 9436, "code": "N = int(input())\nans = 1\nif (N >= 64):\n    ans = 64\nelif (N >= 32):\n    ans = 32\nelif (N >= 16):\n    ans = 16\nelif (N >= 8):\n    ans = 8\nelif (N >= 4):\n    ans = 4\nelif (N >= 2):\n    ans = 2\nprint(ans)\n"}
{"label": 73, "index": 9437, "code": "\ndef b():\n    n = int(input())\n    two_l = [ 2**x for x in range(7) ]\n    res = 1\n    for i in two_l:\n        if i <= n:\n            res = i\n        else:\n            break\n    print(res)\n\nb()\n"}
{"label": 73, "index": 9438, "code": "n = int(input())\n\nx = 1\nwhile(x*2 <= n):\n    x *= 2\n\nprint(x)"}
{"label": 73, "index": 9439, "code": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport sys\nimport re\nimport math\nimport collections\nimport itertools\nimport functools\n\nDEBUG = True\nDEBUG = False\n\ndef dbg(*args):\n    if DEBUG:\n        print(\"DBG: \", file=sys.stderr, end=\"\")\n        print(*args, file=sys.stderr)\n\n\n\ndef main():\n    N = int(input())\n\n    k = math.floor(math.log(N, 2))\n    print(2**k)\n\nif __name__ == \"__main__\": main()\n"}
{"label": 73, "index": 9440, "code": "N = int(input())\nans = 1\nfor i in range(N):\n    t = 2 * ans\n    if t > N:\n        print(ans)\n        break\n    ans = t"}
{"label": 73, "index": 9441, "code": "#coding: utf-8\nN = int(input())\n\nbase = 2\nmul = 0\nwhile True:\n    mul += 1\n    if base ** mul > N:\n        break\n\nprint(base ** (mul - 1))\n"}
{"label": 73, "index": 9442, "code": "N = int(input())\n\nk = [2 ** i for i in range(1, 8)]\n\nM = 1\n\nfor i in k:\n    if i <= N:\n        M = i\n\nprint(M)\n"}
{"label": 73, "index": 9443, "code": "# cook your dish here\nfrom math import * \nn=int(input())\nprint(2**floor(log2(n) ))"}
{"label": 73, "index": 9444, "code": "import logging\nlogging.basicConfig(level=logging.CRITICAL,format=' %(asctime)s - %(levelname)s - %(message)s')\n\ndef power(n):\n    i = 1\n    logging.info('func start')\n    while n > 0:\n        i *= 2\n        n -= 1\n        logging.debug('i = {}, n = {}'.format(i,n))\n    logging.info('func end')\n    return i\n\ni = 0\nn = int(input())\nlogging.info('in loop')\nwhile not (power(i + 1) > n):\n    i = i + 1\n    logging.debug('i = {}, pow(i) = {}'.format(i,power(i)))\n\nlogging.info('out loop')\nprint(power(i ))\n"}
{"label": 73, "index": 9445, "code": "n=int(input())\nt=[2,4,8,16,32,64]\nc=0\nif n==0:print(\"0\")\nelif n==1:print(\"1\")\nelif n>=64:print(\"64\")\nelse:\n    for i in t:\n        if n < i:\n            print(t[c-1])\n            break\n        c=c+1\n"}
{"label": 73, "index": 9446, "code": "# coding: utf-8\n\nN = int(input())\n\nma = -1\nres = 1\nfor i in range(1, N+1):\n    num = i\n    tmp = num\n    count = 0\n    while num % 2 == 0:\n        count += 1\n        num = num / 2\n\n    if count > ma:\n        res = tmp\n        ma = count\n\nprint(res)\n"}
{"label": 73, "index": 9447, "code": "N = int(input())\nif N >= 64:\n    print(64)\nelif N >= 32:\n    print(32)\nelif N >= 16:\n    print(16)\nelif N >= 8:\n    print(8)\nelif N >= 4:\n    print(4)\nelif N >= 2:\n    print(2)\nelse:\n    print(1)"}
{"label": 73, "index": 9448, "code": "def main(N):\n    n_div_max = 0\n    answer = 1\n    for n in range(1, N + 1):\n        _n = n\n        tmp_n_div = 0\n        while True:\n            _n, m = divmod(_n, 2)\n            if m > 0:\n                break\n            tmp_n_div += 1\n\n        if tmp_n_div >= n_div_max:\n            n_div_max = tmp_n_div\n            answer = max(answer, n)\n\n    print(answer)\n\n\ndef main2(N):\n    # 128 = 2 ** 7\n    for i in reversed(range(7)):\n        n = 2 ** i\n        if N >= n:\n            print(n)\n            return\n\nif __name__ == '__main__':\n    N = int(input())\n    main2(N)\n"}
{"label": 73, "index": 9449, "code": "N=int(input())\nfor i in range(8):\n    if 2**i <= N < 2**(i+1):\n        print(2**i)\n        break"}
{"label": 73, "index": 9450, "code": "N = int(input())\n\nres_list = []\ntmp = 1\nwhile True:\n    if tmp > N:\n        break\n    res_list.append(tmp)\n    tmp *= 2\n\n\nprint(max(res_list))"}
{"label": 73, "index": 9451, "code": "import math\nt=int(input())\nx=0\ni=0\nwhile x<=t:\n  x=math.pow(2,i)\n  i+=1\nprint(int(pow(2,i-2)))"}
{"label": 73, "index": 9452, "code": "N = int(input())\n\nindex = -1\nfor i in range(7):\n    if 2 ** i <= N:\n        index += 1\n    else:\n        pass\n\nprint(2 ** index)\n"}
{"label": 73, "index": 9453, "code": "N = int(raw_input())\nans = 64\nwhile ans > N: ans /= 2\nprint ans\n"}
{"label": 73, "index": 9454, "code": "N=int(input())\nx = 1\nwhile x <=N:\n\tif x*2 >N:\n\t\tprint(x)\n\t\tbreak\n\tx = x*2"}
{"label": 73, "index": 9455, "code": "def main():\n    N = int(input())\n\n    if N == 1:\n        print(1)\n        return\n\n    x = (64, 32, 16, 8, 4, 2)\n    for i in x:\n        if i <= N:\n            print(i)\n            break\n\nmain()\n"}
{"label": 73, "index": 9456, "code": "# -*- coding:utf-8 -*-\nN = int(input())\na = [tmp for tmp in reversed(range(1,N+1)) if tmp%2 == 0]\nans = 0\nfor tmp in range(7):\n    if N == 1:\n        ans = 1\n        break\n    b = [tmp2//2 for tmp2 in a if tmp2%2 == 0]\n    if len(b) != 0:\n        ans += 1\n    else:\n        ans = (2**ans)*a.pop()\n        break\n    a = [tmp2 for tmp2 in b]\nprint(ans)"}
{"label": 73, "index": 9457, "code": "N = int(input())\n\nans = 64\nwhile N < ans:\n    ans //= 2\n\nprint(ans)\n"}
{"label": 73, "index": 9458, "code": "# coding: utf-8\n# Here your code !\nn=input()\nN=int(n)\na=0\nans=[]\nfor i in range(N):\n    I=i+1\n    a=0\n    if I%2==0:\n        a=a+1\n        P=I/2\n        for w in range(100):\n            if P%2==0:\n                a=a+1\n                P=P/2\n            else:\n                ans.append(a)\n                break\n    else:\n        ans.append(0)\nmax_idx = ans.index(max(ans))\nprint(max_idx+1)"}
{"label": 73, "index": 9459, "code": "maxNum = int(input())\nfavNum = 1\nmax2 = 0\n\nfor i in range(1,maxNum+1):\n    currNum = i\n    j = 0\n    while(1):\n        if currNum % 2 == 1:\n            break\n        else:\n            currNum = currNum/2\n            j += 1\n    if max2 < j:\n        max2 = j \n        favNum = i\n\nprint(favNum)"}
{"label": 73, "index": 9460, "code": "N = int(input())\n\nmaxcount = -1\nmaxi = 0\nfor i in range(1, N+1):\n  count = 0\n  cur_i = i\n  while True:\n    if i % 2 == 0:\n      i = i // 2\n      count += 1\n    else:\n      break\n  if count > maxcount:\n    maxcount = count\n    maxi = cur_i\nprint(maxi)"}
{"label": 73, "index": 9461, "code": "a=int(input())\nb=int(2)\nc=int\nif 1==a:\n    print(a)\nelse:\n    while b<100:\n        c=b\n        b=b*2\n        \n        if(a<b)and(a>=c):\n            print (c)\n"}
{"label": 73, "index": 9462, "code": "print(2**(len(str(bin(int(input())))[2:])-1))"}
{"label": 73, "index": 9463, "code": "n = int(input())\ncount = 0\nfor i in range(1, n):\n    if n >= pow(2, i):\n        count = count + 1\n    else:\n        break\nprint(pow(2,count))"}
{"label": 73, "index": 9464, "code": "a = int(input())\ni = 1\nwhile(i<=a):\n\ti *= 2\nprint(int(i/2))\n"}
{"label": 73, "index": 9465, "code": "n = int(input())\ntwo = 1\nwhile True:\n    if two * 2 > n:\n        break\n    two *= 2\nprint(two)"}
{"label": 73, "index": 9466, "code": "N = int(input())\n\nif N == 1:\n    print(\"1\")\nelse:\n    l = [2**x for x in list(range(1, 8))]\n    a = [ x for x in l if x <= N]\n    print(max(a))\n"}
{"label": 73, "index": 9467, "code": "from math import floor, log2\nn = int(input())\nprint(2 ** floor(log2(n)))"}
{"label": 73, "index": 9468, "code": "c = [1,2,4,8,16,32,64]\nN = int(input())\n\nif 1 <= N < 2:\n\tprint(c[0])\nelif 2 <= N < 4:\n\tprint(c[1])\nelif 4 <= N < 8:\n\tprint(c[2])\nelif 8 <= N < 16:\n\tprint(c[3])\nelif 16 <= N < 32:\n\tprint(c[4])\nelif 32 <= N < 64:\n\tprint(c[5])\nelif 64 <= N:\n\tprint(c[6])"}
{"label": 73, "index": 9469, "code": "# encoding:utf-8\n\ndef main():\n\tn = int(input())\n\tpowers = [2 ** i for i in range(7)]\n\tout = max([x for x in powers if x <= n])\n\tprint(out)\n\nif __name__ == '__main__':\n\tmain()"}
{"label": 73, "index": 9470, "code": "N=int(input())\n\nC=0\nL=[]\n\nif N==1:\n    print(1)\n\nelse:\n    for i in range(8):\n        C=2**i\n        L.append(C)\n        if C>N:\n            print(L[-2]) \n            break"}
{"label": 73, "index": 9471, "code": "N = int(input())\n\nresult = 0\nwhile N / 2 >= 1.0:\n    N /= 2\n    result += 1\nprint(2**result)\n"}
{"label": 73, "index": 9472, "code": "n = int(input())\nret = 1\nwhile 2*ret <= n:\n  ret *= 2\nprint(ret)"}
{"label": 73, "index": 9473, "code": "inp = int(input())\ncount = 0\nserch = 1\n\n\nfor i in range(1,inp + 1):\n\ta = i\n\tj = 1\n\twhile j <= i:\n\t\tif a % 2 != 0:\n\t\t\tif j - 1 > count:\n\t\t\t\tcount = j - 1\n\t\t\t\tserch = i\n\t\t\tbreak\n\t\ta = a / 2\n\t\tj += 1\n\n\nprint(serch)"}
{"label": 73, "index": 9474, "code": "from collections import defaultdict\nfrom itertools import product, groupby\nfrom math import pi\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right\nINF = 10 ** 10\n\n\ndef count(n):\n    ans = 0\n    while n % 2 == 0:\n        n //= 2\n        ans += 1\n    return ans\n\n\ndef main():\n    N = int(input())\n    ans, num = 0, 0\n    for i in range(1, N + 1):\n        if count(i) >= num:\n            num = count(i)\n            ans = i\n\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n"}
{"label": 73, "index": 9475, "code": "n = int(input())\ni=1\nt=1\nwhile(i <= n):\n    t = i\n    i *= 2\nprint(t)"}
{"label": 73, "index": 9476, "code": "import math as m\ns=int(input())\nprint(2**int(m.log2(s)))"}
{"label": 73, "index": 9477, "code": "N = int(input())\n\nfor i in range(10):\n    if N > 2**i:\n        continue\n    elif N < 2**i:\n        break\n\nprint(2**(i-1))\n"}
{"label": 73, "index": 9478, "code": "N = int(input())\n\nsig = [2,4,8,16,32,64,128]\nsig.reverse()\n\nif N == 1:\n    print('1')\n    exit()\n\nfor i in sig:\n    if i <= N:\n        print(i)\n        exit()"}
{"label": 73, "index": 9479, "code": "a=int(input())\nb=1\nwhile (b<<1)<=a:\n    b=b<<1\nprint(b)\n"}
{"label": 73, "index": 9480, "code": "n = int(input())\nif n < 2:\n    print(1)\nelif n < 4:\n    print(2)\nelif n < 8:\n    print(4)\nelif n < 16:\n    print(8)\nelif n < 32:\n    print(16)\nelif n < 64:\n    print(32)\nelse:\n    print(64)\n"}
{"label": 73, "index": 9481, "code": "a = int(input())\nfor i in range(a):\n  if 2 ** i > a:\n    break\n  elif 2 ** i <= a:\n    count = 2 ** i\n\nprint(count)"}
{"label": 73, "index": 9482, "code": "N = int(input())\nl = [2**n for n in range(10) if 2**n <= N]\nprint(max(l))"}
{"label": 73, "index": 9483, "code": "#!/usr/bin/python\n\nimport math\nimport sys\n\ndef main(argv):\n    for line in sys.stdin:\n        N = int(line)\n        index = int(math.log(N, 2))\n        print(int(math.pow(2, index)))\n\nif __name__ == \"__main__\":\n    main(sys.argv)"}
{"label": 73, "index": 9484, "code": "import sys\n\nN = int(input())\t\t\t\t\t\t# 5\n\ni = 1\nwhile (i*2) <= N:\n\ti *= 2\n\nprint(i)\n"}
{"label": 73, "index": 9485, "code": "N = int(input())\nans = 1\nwhile ans * 2 <= N:\n    ans *= 2\nprint(ans)\n"}
{"label": 73, "index": 9486, "code": "# -*- coding: utf-8 -*-\n\nnum = int(input())\n\nif num >= 64:\n    print(str(64))\nelif num >= 32:\n    print(str(32))\nelif num >= 16:\n    print(str(16))\nelif num >= 8:\n    print(str(8))\nelif num >= 4:\n    print(str(4))\nelif num >= 2:\n    print(str(2))\nelse:\n    print(str(1))\n"}
{"label": 73, "index": 9487, "code": "n = int(input().strip())\nwhile True:\n if n & (n-1) == 0:\n  print(n)\n  break\n n -= 1"}
{"label": 73, "index": 9488, "code": "N = int(input())\nans = 0\nfor i in range(7):\n\tif N >= 2 ** i:\n\t\tans = 2 ** i\n\telse:\n\t\tbreak\nprint(ans)"}
{"label": 73, "index": 9489, "code": "print(2**(len(bin(int(input())))-3))"}
{"label": 74, "index": 9490, "code": "a, b = map(int, raw_input().strip().split())\nprint (a - 1) * (b - 1)"}
{"label": 74, "index": 9491, "code": "n, m = map(int, input().split())\nprint((n - 1) * (m - 1))\n"}
{"label": 74, "index": 9492, "code": "def main():\n    N, M = map(int, input().split())\n\n    ans = (N - 1) * (M - 1)\n    print(ans)\n\nmain()\n"}
{"label": 74, "index": 9493, "code": "n, m = map(int,input().split(\" \"))\n\nresult = (n-1) * (m-1)\n\nprint(result)"}
{"label": 74, "index": 9494, "code": "n,m=map(int,input().split())\nprint((n-1)*(m-1))"}
{"label": 74, "index": 9495, "code": "def a():\n    n, m = map(int, input().split())\n    print((n-1) * (m-1))\n\na()"}
{"label": 74, "index": 9496, "code": "a,b=map(int,input().split())\nprint((a-1)*(b-1))"}
{"label": 74, "index": 9497, "code": "# encoding:utf-8\n \ndef main():\n\tn, m = list(map(int, input().split()))\n\tprint((n - 1) * (m - 1))\n\t\t\nif __name__ == '__main__':\n\tmain()"}
{"label": 74, "index": 9498, "code": "n,m = input().split()\nn = int(n)\nm = int(m)\n\nprint((n-1)*(m-1))"}
{"label": 74, "index": 9499, "code": "\n\ndef main():\n    n, m = (int(x) for x in input().split())\n    n += 1\n    m += 1\n\n    print(n * m - 2 * (n + m) + 4)\n\n\nif __name__ == \"__main__\":\n    main()"}
{"label": 74, "index": 9500, "code": "'''input\n3 4\n'''\nn , m = map(int ,raw_input().split())\nprint (n-1)*(m-1)\n"}
{"label": 74, "index": 9501, "code": "a = input().split()\nprint((int(a[0])-1)*(int(a[1])-1))"}
{"label": 74, "index": 9502, "code": "n,m=map(int,input().split())\nprint((n-1)*(m-1))\n"}
{"label": 74, "index": 9503, "code": "#!/usr/bin/python\n\nn, m = map(int, input().split(\" \"))\n\nans = (n-1) * (m-1)\nprint(ans)\n"}
{"label": 74, "index": 9504, "code": "n,m = list(map(int,input().split()))\nprint((n-1)*(m-1))"}
{"label": 74, "index": 9505, "code": "a,b = map(int,input().split())\nprint((a-1) * (b-1))\n"}
{"label": 74, "index": 9506, "code": "n, m = input().split()\nn = int(n)\nm = int(m)\noutput = (n-1)*(m-1)\n\nprint(output)\n"}
{"label": 74, "index": 9507, "code": "n, m = map(int, input().split())\nprint((n-1)*(m-1))"}
{"label": 74, "index": 9508, "code": "a,b=list(map(int, input().split()))\nprint ((a-1)*(b-1))"}
{"label": 74, "index": 9509, "code": "n, m = map(int, input().split())\nprint((n-1)*(m-1))"}
{"label": 74, "index": 9510, "code": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nn, m = map(int, raw_input().split())\narea = (n-1) * (m-1)\nprint area\n"}
{"label": 74, "index": 9511, "code": "n , m = map(int , input().split())\nprint((n-1) * (m-1))"}
{"label": 74, "index": 9512, "code": "n,m = list(map(int, input().split()))\n \nprint ((n-1)*(m-1))"}
{"label": 74, "index": 9513, "code": "n,m=map(int,input().split())\nprint((n-1)*(m-1))"}
{"label": 74, "index": 9514, "code": "n,m = map(int,raw_input().split())\nprint((n-1)*(m-1))"}
{"label": 74, "index": 9515, "code": "a, b = map(int, input().split())\nprint((a - 1) * (b - 1))\n"}
{"label": 74, "index": 9516, "code": "n, m = map(int, input().split())\nprint((n-1)*(m-1))\n"}
{"label": 74, "index": 9517, "code": "# import numpy as np\nn, m = map(int, input().split())\n\nprint((n-1) * (m-1))"}
{"label": 74, "index": 9518, "code": "n,m = map(int, raw_input().split())\nprint (n-1)*(m-1)\n"}
{"label": 74, "index": 9519, "code": "import sys\n\n# sys.stdin = open('a1.in')\n\n\ndef read_int_list():\n    return list(map(int, input().split()))\n\n\ndef read_str_list():\n    return input().split()\n\n\ndef read_int():\n    return int(input())\n\n\ndef read_str():\n    return input()\n\n\ndef main():\n    n, m = read_int_list()\n    res = (n - 1) * (m - 1)\n    print(res)\n\nmain()\n"}
{"label": 74, "index": 9520, "code": "n, m = map(int, raw_input().split())\nprint (n - 1)*(m - 1)\n"}
{"label": 74, "index": 9521, "code": "temp = input()\nn, m = temp.split()\ncity = (int(n)-1)*(int(m)-1)\nprint(city)\n"}
{"label": 74, "index": 9522, "code": "n,m = map(int, raw_input().split())\nprint((n-1)*(m-1))"}
{"label": 74, "index": 9523, "code": "n,m = map(int, input().split())\nprint((n-1)*(m-1))\n"}
{"label": 74, "index": 9524, "code": "def main():\n    n, m = [int(i) for i in input().split()]\n    #print(n, m)\n    print((n-1) * (m-1))\n\nif __name__==\"__main__\":\n    main()"}
{"label": 74, "index": 9525, "code": "n, m = map(int, input().split())\nprint((n-1)*(m-1))"}
{"label": 74, "index": 9526, "code": "n,m = map(int,input().split())\n\nA=(n-1)*(m-1)\nprint(A)"}
{"label": 74, "index": 9527, "code": "# -*- coding: utf-8 -*-\n\"\"\"\nhttp://abc069.contest.atcoder.jp/tasks/abc069_a\n\"\"\"\n\n\ndef main():\n    n, m = map(int, input().split())\n    print((n-1)*(m-1))\n\n\nif __name__ == '__main__':\n    main()"}
{"label": 74, "index": 9528, "code": "# coding: utf-8\n# Here your code !\na=input()\nb=a.split()\nn=int(b[0])\nm=int(b[1])\n\nprint((n-1)*(m-1))"}
{"label": 74, "index": 9529, "code": "n, m = map(int, input().split(\" \"))\n\n\nprint((n-1)*(m-1))"}
{"label": 74, "index": 9530, "code": "n, m = list(map(int, input().split()))\nprint((n-1) *(m-1))\n"}
{"label": 74, "index": 9531, "code": "n, m = list(map(int, input().split()))\nprint((n-1)*(m-1))\n"}
{"label": 74, "index": 9532, "code": "n,m = map(lambda i:int(i)-1,input().split(' '))\nprint(n*m)"}
{"label": 74, "index": 9533, "code": "n, m = map(int, input().split())\nprint((m - 1) * (n - 1))"}
{"label": 74, "index": 9534, "code": "a,b=map(int,raw_input().split())\nprint (a-1)*(b-1)"}
{"label": 74, "index": 9535, "code": "n, m = map(int, input().split())\nblock = (n - 1) * (m - 1)\nprint(block)\n"}
{"label": 74, "index": 9536, "code": "n, m = list(map(int, input().split()))\nprint((n-1)*(m-1))"}
{"label": 74, "index": 9537, "code": "n, m = map(int, raw_input().split())\nprint (n-1) * (m-1)"}
{"label": 74, "index": 9538, "code": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport sys\nimport re\nimport math\nimport collections\nimport itertools\nimport functools\n\nDEBUG = True\nDEBUG = False\n\ndef dbg(*args):\n    if DEBUG:\n        print(\"DBG: \", file=sys.stderr, end=\"\")\n        print(*args, file=sys.stderr)\n\n\n\ndef main():\n    N, M = map(int, input().split())\n\n    print((N-1)*(M-1))\n\nif __name__ == \"__main__\": main()\n"}
{"label": 74, "index": 9539, "code": "n, m = map(int, raw_input().split())\nprint (n - 1) * (m - 1)\n"}
{"label": 74, "index": 9540, "code": "A, B=list(map(int, input().split()))\nprint((A-1)*(B-1))\n"}
{"label": 74, "index": 9541, "code": "a = input().split()\nb = int(a[0])\nc = int(a[1])\nb = b-1\nc = c-1\nprint(b*c)"}
{"label": 74, "index": 9542, "code": "(n, m) = tuple(map(int, input().split(\" \")))\nprint((n-1) * (m-1))"}
{"label": 74, "index": 9543, "code": "n, m = map(int, input().split())\n\nprint((n-1)*(m-1))"}
{"label": 74, "index": 9544, "code": "n,m=map(int,input().split())\n\nans=(n-1)*(m-1)\n\nprint(ans)"}
{"label": 74, "index": 9545, "code": "def main():\n    n, m = map(int, input().split())\n    print((n - 1) * (m - 1))\n\nif __name__ == '__main__':\n    main()\n"}
{"label": 74, "index": 9546, "code": "# your code goes here\nn,m = map(int,input().split())\nprint ((n-1)*(m-1))"}
{"label": 74, "index": 9547, "code": "n, m = map(int,input().split())\n\nprint((n-1)*(m-1))"}
{"label": 74, "index": 9548, "code": "n, m = map(int, input().split())\nprint((n - 1) * (m - 1))"}
{"label": 74, "index": 9549, "code": "n, m = map(int, input().split())\n\nh = n - 1\nw = m - 1\nans = h * w\nprint(ans)\n"}
{"label": 74, "index": 9550, "code": "n, m = map(int, input().split())\nprint((n-1) * (m-1))"}
{"label": 74, "index": 9551, "code": "x,y = map(int,raw_input().split())\nprint (x-1)*(y-1)"}
{"label": 74, "index": 9552, "code": "n, m = map(int,raw_input().split(' '))\nprint (n-1)*(m-1)"}
{"label": 74, "index": 9553, "code": "n, m = [int(e) for e in input().split()]\nprint((n - 1) * (m - 1))"}
{"label": 74, "index": 9554, "code": "n,m =map(int,input().split())\nprint((n-1)*(m-1))"}
{"label": 74, "index": 9555, "code": "n,m = map(int,input().split())\nprint((n-1) * (m-1))\n"}
{"label": 74, "index": 9556, "code": "n, m=map(int, input().split())\nprint( (n-1)*(m-1))\n"}
{"label": 74, "index": 9557, "code": "\ndef Solution(a,b):\n    return (a-1)*(b-1)\n\nif __name__==\"__main__\":\n    input = raw_input().split(\" \")\n    print Solution((int)(input[0]), (int)(input[1]))"}
{"label": 74, "index": 9558, "code": "# coding: utf-8\n\nn, m = map(int, raw_input().split())\nprint ((n+1)*(m+1))-(n*2+m*2)"}
{"label": 74, "index": 9559, "code": "n ,m = [int(i) for i in input().split()]\nprint((n - 1) * (m - 1))\n"}
{"label": 74, "index": 9560, "code": "x, y = list(map(int, input().split()))\n\nprint((x - 1) * (y - 1))"}
{"label": 74, "index": 9561, "code": "# -*- coding: utf-8 -*-\ninput_cl = input().split()\ninput_cl = [int(i) for i in input_cl]\nn = input_cl[0]\nm = input_cl[1]\nsector = (n-1) * (m-1)\nprint(sector)\n"}
{"label": 74, "index": 9562, "code": "m, n = (int(i) for i in input().split())\nprint((m-1)*(n-1))"}
{"label": 74, "index": 9563, "code": "s = raw_input()\ns = s.split(' ')\ns = [int(x) for x in s]\nn, m = s\n\nprint((n-1)*(m-1))"}
{"label": 74, "index": 9564, "code": "l = map(int, input().split())\nl = list(l)\nprint(str((l[0]-1)*(l[1]-1)))"}
{"label": 74, "index": 9565, "code": "n, m = map(int, input().split())\nprint( (n-1)*(m-1) )\n"}
{"label": 74, "index": 9566, "code": "a,b=map(int,input().split())\nprint((a-1)*(b-1))"}
{"label": 74, "index": 9567, "code": "m,n = map(int, input().split())\nprint((m-1)*(n-1))"}
{"label": 74, "index": 9568, "code": "#!usr/bim/python\n#! -*- coding: utf-8 -*-\n\nnm = raw_input()\nnm = nm.split()\nnm = map(int, nm)\n\n\n\nif nm[0] < 2 or nm[1] < 2:\n    ans = 0\nelse:\n    ans = (nm[0]-1)*(nm[1]-1)\n\nprint ans\n"}
{"label": 74, "index": 9569, "code": "N,M=(int(i) for i in input(). split ())\nN-=1\nM-=1\nprint (N*M)"}
{"label": 74, "index": 9570, "code": "n,m=map(int,input().split())\nprint((n-1)*(m-1))"}
{"label": 74, "index": 9571, "code": "astr = input().split()\nanum = []\nfor i in astr:\n    anum.append(int(i))\nprint((anum[0]-1)*(anum[1]-1))"}
{"label": 74, "index": 9572, "code": "\n\n\n\na,b=map(int,input().split())\nprint((a-1)*(b-1))"}
{"label": 74, "index": 9573, "code": "input_line = map(int,raw_input().split(\" \"))\nn = input_line[0]\nm = input_line[1]\n\nprint (n-1) * (m-1)"}
{"label": 74, "index": 9574, "code": "n, m = map(int, raw_input().split())\n\nprint (n-1) * (m-1)\n"}
{"label": 74, "index": 9575, "code": "n,m = map(int,input().split())\n\nprint(\"%d\" % ((n-1) * (m-1)))\n"}
{"label": 74, "index": 9576, "code": "nm = input().split(' ')\nprint((int(nm[0])-1) * (int(nm[1])-1))"}
{"label": 74, "index": 9577, "code": "n, m = (int(i) for i in input().split())\nprint((n-1)*(m-1))"}
{"label": 74, "index": 9578, "code": "l = list(map(int, input().split()))\nprint((l[0]-1)*(l[1]-1))\n"}
{"label": 74, "index": 9579, "code": "l = input().split()\nn = int(l[0])\nm = int(l[1])\nprint((n-1) * (m-1))\n"}
{"label": 74, "index": 9580, "code": "n, m = [int(x) for x in input().split()]\nprint((n - 1) * (m - 1))\n"}
{"label": 74, "index": 9581, "code": "n, m = map(int, input().split())\nprint((n-1)*(m-1))\n"}
{"label": 74, "index": 9582, "code": "n,m=map(int,input().split())\nans=(n-1)*(m-1)\nprint(ans)"}
{"label": 74, "index": 9583, "code": "if __name__ == '__main__':\n    N = list(map(int, input().split()))\n    print((N[0] - 1) * (N[1] - 1))\n"}
{"label": 74, "index": 9584, "code": "a,b=map(int,input().split())\nprint((a-1)*(b-1))"}
{"label": 74, "index": 9585, "code": "def read(): return list(map(int, input().split()))\n\nn, m = read()\nprint((n - 1) * (m - 1))"}
{"label": 74, "index": 9586, "code": "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\ngosa = 1.0 / 10**9\nmod = 10**9 + 7\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\n\n\ndef main():\n    n,m = LI()\n\n    return (n-1)*(m-1)\n\n\n\nprint(main())\n\n"}
{"label": 74, "index": 9587, "code": "n, m = map(int, raw_input().split())\nprint (n-1) * (m-1)"}
{"label": 74, "index": 9588, "code": "n, m = map(int, input().split())\nprint((n - 1) * (m - 1))\n"}
{"label": 74, "index": 9589, "code": "n,m=map(int,input().split())\nk=(n-1)*(m-1)\nprint(k)"}
{"label": 74, "index": 9590, "code": "temp_arr = input().split(' ')\nn = int(temp_arr[0])\nm = int(temp_arr[1])\n\nprint(str((n-1) * (m-1)))"}
{"label": 74, "index": 9591, "code": "n, m = list(map(int, input().split()))\nprint((n-1)*(m-1))"}
{"label": 74, "index": 9592, "code": "n, m = map(int, input().split())\nprint((n-1)*(m-1))\n"}
{"label": 74, "index": 9593, "code": "a = list(map(int,input().split()))\nprint((a[0] - 1) * (a[1] -1))"}
{"label": 74, "index": 9594, "code": "a = list(map((int),input().split(' ')))\nn = a[0]\nm = a[1]\n\nprint((n-1)*(m-1))\n"}
{"label": 74, "index": 9595, "code": "n=list(map(int,input().split()))\nprint((n[0]-1)*(n[1]-1))"}
{"label": 74, "index": 9596, "code": "nm=(input()).split(' ')\nprint(((int)(nm[0])-1)*((int)(nm[1])-1))"}
{"label": 74, "index": 9597, "code": "n, m = input().split()\nn = int(n)\nm = int(m)\nprint((n-1)*(m-1))"}
{"label": 74, "index": 9598, "code": "# -*- coding: utf-8 -*-\n\nn, m = [int(x) for x in input().split()]\ncities = (n-1) * (m-1)\nprint(cities)"}
{"label": 74, "index": 9599, "code": "n,m=map(int,input().split())\nprint((n-1)*(m-1))"}
{"label": 74, "index": 9600, "code": "#! /usr/bin/env python3\n\nN, M = map(int, input().split())\nprint((N-1) * (M-1))\n"}
{"label": 74, "index": 9601, "code": "#! -*- coding:utf-8 -*-\nn,m = map(int,input().split())\nprint((m-1)*(n-1))\n"}
{"label": 74, "index": 9602, "code": "def main():\n    n, m = map(int, input().split())\n    print((n-1)*(m-1))\n    \n\nif __name__ == \"__main__\":\n    main()"}
{"label": 74, "index": 9603, "code": "n,m = map(int,input().split())\nprint((n-1)*(m-1))"}
{"label": 74, "index": 9604, "code": "n = input().split()\nprint((int(n[0])-1 )* ( int(n[1])-1))"}
{"label": 74, "index": 9605, "code": "def read_int_list():\n    return (int(i) for i in input().split())\n\nn, m = read_int_list()\nprint((n-1)*(m-1))"}
{"label": 74, "index": 9606, "code": "n, m = list(map(int, input().split()))\nprint (str((n-1)*(m-1)))"}
{"label": 74, "index": 9607, "code": "n, m = map(int, input().split())\nprint((n - 1) * (m - 1))\n"}
{"label": 74, "index": 9608, "code": "n, m = map(int, input().split())\nprint((n-1)*(m-1))\n"}
{"label": 74, "index": 9609, "code": "n, m = list(map(int, input().split()))\nprint((n - 1) * (m - 1))\n"}
{"label": 74, "index": 9610, "code": "n, m =map(int, input().split())\nprint((n-1) * (m-1))"}
{"label": 74, "index": 9611, "code": "import sys\n\n\ndef main():\n    args = sys.stdin.readline().split()\n    n = int(args[0])\n    m = int(args[1])\n\n    print((n - 1) * (m - 1))\n\nmain()"}
{"label": 74, "index": 9612, "code": "from collections import defaultdict\nfrom itertools import product, groupby\nfrom math import pi\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right\nINF = 10 ** 10\n\n\ndef main():\n    n, m = map(int, input().split())\n    print((n - 1) * (m - 1))\n\n\nif __name__ == '__main__':\n    main()\n"}
{"label": 74, "index": 9613, "code": "n,m=map(int,input().split())\nprint((n-1)*(m-1))"}
{"label": 74, "index": 9614, "code": "n,m = map(int,input().split())\n\nprint((n-1)*(m-1))"}
{"label": 74, "index": 9615, "code": "#coding:utf-8\n\nn, m = map(int, input().split())\n#print('\\n')\n\nresult = (n - 1) * (m - 1)\n\nprint(\"{0}\".format(result))"}
{"label": 74, "index": 9616, "code": "# -*- coding: utf-8 -*-\n\nn,m = map(int, input().split())\nprint((n-1)*(m-1))\n\n    "}
{"label": 74, "index": 9617, "code": "a=map(int,raw_input('').split())\nprint (a[0]-1)*(a[1]-1)"}
{"label": 74, "index": 9618, "code": "n, m = map(int, input().split())\nprint((n - 1) * (m - 1))\n"}
{"label": 74, "index": 9619, "code": "a,b=map(int,input().split())\nprint((a-1)*(b-1))\n"}
{"label": 75, "index": 9620, "code": "# -*- coding:utf-8 -*-\ns = list(input())\na = s.pop(0)\nb = s.pop()\nprint(a+str(len(s))+b)"}
{"label": 75, "index": 9621, "code": "s = input()\nprint(s[0] + str(len(s)-2) + s[-1])"}
{"label": 75, "index": 9622, "code": "'''input\nxyz\n'''\ns = raw_input()\nprint s[0]+str(len(s[1:-1]))+s[-1]"}
{"label": 75, "index": 9623, "code": "# -*- coding: utf-8 -*-\n\ns = input()\n\nprint(s[0]+str(len(s)-2)+s[-1])\n"}
{"label": 75, "index": 9624, "code": "S = input()\nprint(S[0]+str(len(S)-2)+S[-1])\n"}
{"label": 75, "index": 9625, "code": "s = input()\nprint(s[0] + str(len(s)-2) + s[-1])"}
{"label": 75, "index": 9626, "code": "s = input()\nprint(s[0] + str(len(s)-2) + s[-1])"}
{"label": 75, "index": 9627, "code": "import sys\n\n\ndef main():\n    word = sys.stdin.readline().strip()\n    print(word[0] + str(len(word) - 2) + word[len(word) - 1])\n\nmain()"}
{"label": 75, "index": 9628, "code": "s = raw_input()\nprint(s[0] + str(len(s)-2) + s[len(s)-1])"}
{"label": 75, "index": 9629, "code": "s = input()\nprint(s[0] + str(len(s) - 2) + s[-1])"}
{"label": 75, "index": 9630, "code": "#!usr/bim/python\n#! -*- coding: utf-8 -*-\n\ns = raw_input()\n\nn = len(s)\n\nans = s[0] + str(n-2) + s[n-1]\n\nprint ans\n"}
{"label": 75, "index": 9631, "code": "s = input()\nprint(s[0] + str(len(s) - 2) + s[-1])\n"}
{"label": 75, "index": 9632, "code": "s = input()\nprint(s[0] + str(len(s)-2) + s[-1])"}
{"label": 75, "index": 9633, "code": "S = input()\n\nres = S[0] + str(len(S) - 2) + S[-1]\n\nprint(res)\n"}
{"label": 75, "index": 9634, "code": "s=str(input())\nprint(s[0]+str((len(s)-2))+s[len(s)-1])"}
{"label": 75, "index": 9635, "code": "s = input()\n\nn=len(s) - 2\nprint(s[0], end=\"\")\nprint(n, end=\"\")\nprint(s[-1])\n"}
{"label": 75, "index": 9636, "code": "def main():\n    S = input()\n    #print(S)\n    len_S = len(S)\n    print(S[0] + str(len_S - 2) + S[len_S - 1])\n     \nif __name__==\"__main__\":\n    main()"}
{"label": 75, "index": 9637, "code": "s = input()\nprint(s[0] + str(len(s)-2) + s[-1])"}
{"label": 75, "index": 9638, "code": "#! -*- coding:utf-8 -*-\ns = str(input())\nx = list(s)\n\ne = x.pop()\na = x.pop(0)\n\nprint(a,len(x),e,sep='')\n"}
{"label": 75, "index": 9639, "code": "s = input()\nN = len(s)\nprint(s[0] + str(N - 2) + s[N - 1])\n"}
{"label": 75, "index": 9640, "code": "S = input()\nprint(S[:1] + str(len(S) -2) + S[-1:])"}
{"label": 75, "index": 9641, "code": "s = str(input())\nprint(s[0]+str(len(s)-2)+s[len(s)-1])\n"}
{"label": 75, "index": 9642, "code": "s = input()\nprint(s[0] + str(len(s) - 2) + s[-1])\n"}
{"label": 75, "index": 9643, "code": "s=input()\nprint(s[0]+str(len(s)-2)+s[len(s)-1])"}
{"label": 75, "index": 9644, "code": "s = input()\n\nprint(s[0] + str(len(s) - 2) + s[-1])\n"}
{"label": 75, "index": 9645, "code": "s = input()\ns_s = s[0]\ns_e = s[-1]\ns = s[1:-1]\n\nnw = s_s + str(len(s)) + s_e\nprint(nw)"}
{"label": 75, "index": 9646, "code": "s = input()\n\nans = s[0]\nans += str(len(s) - 2)\nans += s[len(s) - 1]\n\nprint(ans)\n"}
{"label": 75, "index": 9647, "code": "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\ngosa = 1.0 / 10**9\nmod = 10**9 + 7\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\n\n\ndef main():\n    s = S()\n\n    return s[0] + str(len(s)-2) + s[-1]\n\n\n\nprint(main())\n\n"}
{"label": 75, "index": 9648, "code": "# -*- coding: utf-8 -*-\n\nword = input()\n\nprint(word[0] + str(len(word)-2) + word[-1])"}
{"label": 75, "index": 9649, "code": "def main():\n    S = input()\n\n    num = len(S) - 2\n    ans = S[0] + str(num) + S[-1]\n    print(ans)\n\nmain()\n"}
{"label": 75, "index": 9650, "code": "s = input()\n\nprint(s[0] + str(len(s[1:-1])) + s[-1])"}
{"label": 75, "index": 9651, "code": "\n\ns=input()\nl=len(s)-2\nprint(s[0] + str(l) + s[-1])\n\n"}
{"label": 75, "index": 9652, "code": "S = input()\nprint(S[0] + str(len(S[1:-1])) + S[-1:])\n"}
{"label": 75, "index": 9653, "code": "s = input()\na = len(s)\nprint('{0}{1}{2}'.format(s[0],a-2,s[-1]))"}
{"label": 75, "index": 9654, "code": "s = input()\n\nprint (s[0] + str(len(s) - 2) + s[len(s)-1])"}
{"label": 75, "index": 9655, "code": "s = input()\n\ninit = s[0]\nlast = s[-1]\nl = len(s) - 2\n\nprint(init + str(l) + last)"}
{"label": 75, "index": 9656, "code": "nm = input()\nl = len(nm)\nprint(nm[0] + str(l - 2) +nm[-1])"}
{"label": 75, "index": 9657, "code": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport sys\nimport re\nimport math\nimport collections\nimport itertools\nimport functools\n\nDEBUG = True\nDEBUG = False\n\ndef dbg(*args):\n    if DEBUG:\n        print(\"DBG: \", file=sys.stderr, end=\"\")\n        print(*args, file=sys.stderr)\n\n\n\ndef main():\n    s = input()\n    print(s[0] + str(len(s)-2) + s[-1])\n\nif __name__ == \"__main__\": main()\n"}
{"label": 75, "index": 9658, "code": "s=input()\ns=s[0]+str(len(s[1:-1]))+s[-1]\nprint(s)"}
{"label": 75, "index": 9659, "code": "S=list(input())\nprint(S[0]+str(len(S)-2)+S[-1])"}
{"label": 75, "index": 9660, "code": "sen = raw_input()\nlength = len(sen)\nprint(sen[0:1] + str(length - 2) + sen[length-1:length])"}
{"label": 75, "index": 9661, "code": "n = input()\nreturnStr = n[0] + str(len(n)-2) + n[-1]\nprint(returnStr)"}
{"label": 75, "index": 9662, "code": "s = input()\nprint(s[0] + str(len(s[1:len(s) - 1])) + s[len(s) - 1])"}
{"label": 75, "index": 9663, "code": "s = input()\nl = len(s)\n\nhead = s[0]\ntail = s[len(s)-1]\nan = l - 2\nprint(head + str(an) + tail)\n"}
{"label": 75, "index": 9664, "code": "import sys\n\n# sys.stdin = open('b1.in')\n\n\ndef read_int_list():\n    return list(map(int, input().split()))\n\n\ndef read_str_list():\n    return input().split()\n\n\ndef read_int():\n    return int(input())\n\n\ndef read_str():\n    return input()\n\n\ndef main():\n    s = read_str()\n    l = len(s)\n    res = s[0] + str(l - 2) + s[-1]\n    print(res)\n\n\nmain()\n"}
{"label": 75, "index": 9665, "code": "s = input()\nprint(s[:1] + str(len(s) - 2) + s[-1:])"}
{"label": 75, "index": 9666, "code": "ls = list(input())\nprint(ls[0] + str(len(ls)-2) + ls[-1])"}
{"label": 75, "index": 9667, "code": "s = raw_input()\n\nst = s[0]\nen = s[len(s) - 1]\n\nans = \"\"\nans += st\nans += str(len(s) - 2)\nans += en\nprint ans"}
{"label": 75, "index": 9668, "code": "chars=input()\n\nf=chars[0]\nl=chars[len(chars)-1]\n\nn=str(len(chars)-2)\n\nprint(f+n+l)"}
{"label": 75, "index": 9669, "code": "st = input()\nlength = len(st[1:-1])\nprint(st[0] + str(length) + st[-1])"}
{"label": 75, "index": 9670, "code": "s = input()\nprint(s[0]+str(len(s)-2)+s[-1])\n"}
{"label": 75, "index": 9671, "code": "s = input()\nprint(s[0] + str(len(s) - 2) + s[-1])\n"}
{"label": 75, "index": 9672, "code": "s = input()\nprint(s[0], end=\"\")\nprint(len(s)-2, end=\"\")\nprint(s[-1])"}
{"label": 75, "index": 9673, "code": "S = input()\n\nprint(S[0],len(S)-2,S[len(S)-1], sep='')"}
{"label": 75, "index": 9674, "code": "s = input()\nstrlen = len(s)\nprint(s[0:1] + str(strlen-2) + s[-1])"}
{"label": 75, "index": 9675, "code": "S = list(input())\nN = len(S)\nans = S[0] + str(N - 2) + S[-1]\nprint(ans)\n"}
{"label": 75, "index": 9676, "code": "s = input()\n\nprint (s[0] + str(len(s) - 2) + s[len(s) - 1])"}
{"label": 75, "index": 9677, "code": "x = input()\ny = x[1:-1]\nz = x[0]+str(len(y))+x[-1]\nprint(z)"}
{"label": 75, "index": 9678, "code": "#!/usr/bin/python\n\nimport sys\n\ndef main(argv):\n    for line in sys.stdin:\n        s = line.rstrip(\"\\n\")\n        print(\"{0}{1}{2}\".format(s[0], len(s) - 2, s[-1]))\n\nif __name__ == \"__main__\":\n    main(sys.argv)"}
{"label": 75, "index": 9679, "code": "s = input()\nprint(s[0] + str(len(s) - 2) + s[-1])"}
{"label": 75, "index": 9680, "code": "#ABc069B\n\ns=raw_input()\nprint s[0]+str(len(s)-2)+s[-1]\n"}
{"label": 75, "index": 9681, "code": "# -*- coding: utf-8 -*-\n\"\"\"\nhttp://abc069.contest.atcoder.jp/tasks/abc069_b\n\n\"\"\"\n\ndef solve(text):\n    text_length = len(text)\n    return text[0] + str(text_length-2) + text[-1]\n\ndef main():\n    S = input()\n    result = solve(S)\n    print(result)\n\n\nif __name__ == '__main__':\n    main()"}
{"label": 75, "index": 9682, "code": "s=input()\nprint(s[0]+str(len(s)-2)+s[-1])"}
{"label": 75, "index": 9683, "code": "a = input()\nprint(a[0] + str(len(a) - 2) + a[-1])"}
{"label": 75, "index": 9684, "code": "s = input()\n\nlength = len(s)\nans = s[0] + str(length - 2) + s[-1]\nprint(ans)"}
{"label": 75, "index": 9685, "code": "s = raw_input()\nprint s[0] + str(len(s)-2) + s[-1]\n"}
{"label": 75, "index": 9686, "code": "st=input()\nx=st[0]\ny=st[len(st)-1]\nn=str(len(st)-2)\nans=x+n+y\nprint(ans)\n"}
{"label": 75, "index": 9687, "code": "a = input()\n\na_len = len(a)\nf = a[0]\ne = a[-1]\n\nprint(f+str(a_len-2)+e)\n\n\n\n"}
{"label": 75, "index": 9688, "code": "l=raw_input()\nn=len(l)-2\nprint l[0]+str(n)+l[-1]\n"}
{"label": 75, "index": 9689, "code": "# encoding:utf-8\n \ndef main():\n\ts = input()\n\tout = s[0] + str(len(s) - 2) + s[-1]\n\tprint(out)\n\t\t\nif __name__ == '__main__':\n\tmain()\n"}
{"label": 75, "index": 9690, "code": "s=input()\n\nL=len(s)-2\nM=str(L)\n\nA=s[0]+M+s[-1]\nprint(A)"}
{"label": 75, "index": 9691, "code": "s = input()\nprint(s[0] + str(len(s[1:-1])) + s[-1])"}
{"label": 75, "index": 9692, "code": "def main():\n    s = input()\n    print(\"{}{}{}\".format(s[0], len(s[1:-1]), s[-1]))\n    \n\nif __name__ == \"__main__\":\n    main()"}
{"label": 75, "index": 9693, "code": "S=input()\nprint(S[0]+str(len(S)-2)+S[-1])"}
{"label": 75, "index": 9694, "code": "s=input()\nprint(s[0]+str(len(s)-2)+s[-1])"}
{"label": 75, "index": 9695, "code": "s = input()\nprint (s[0] + str(len(s) - 2) + s[-1])\n"}
{"label": 75, "index": 9696, "code": "temp = input()\nl = len(temp)\nprint(temp[0]+str(l-2)+temp[l-1])"}
{"label": 75, "index": 9697, "code": "a = raw_input()\nprint a[0] + str(len(a)-2) + a[-1]\n"}
{"label": 75, "index": 9698, "code": "def omit(s):\n    \"\"\"\n    @param: \u5143\u306e\u6587\u5b57\u5217\n    @return: \u6700\u521d\u306e\u6587\u5b57 + \u6700\u521d\u306e\u6587\u5b57\u3068\u6700\u5f8c\u306e\u6587\u5b57\u306b\u306f\u3055\u307e\u308c\u305f\u6587\u5b57\u5217\u306e\u6d41\u3055\n    + \u6700\u5f8c\u306e\u6587\u5b57\n\n    >>> omit(\"internationalization\")\n    'i18n'\n\n    >>> omit(\"smiles\")\n    's4s'\n\n    >>> omit(\"xyz\")\n    'x1z'\n    \"\"\"\n\n    s2 = list(s)\n\n    (first,last) = (s2.pop(0), s2.pop(-1))\n    return first + str(len(s2)) + last\n\nprint(omit(input()))\n"}
{"label": 75, "index": 9699, "code": "s=input()\nprint(s[0]+str(len(s)-2)+s[-1])\n"}
{"label": 75, "index": 9700, "code": "word = input()\nlists = list(word)\na = int(len(lists) -1)\nprint(lists[0]+str((int(len(lists))-2))+lists[a])"}
{"label": 75, "index": 9701, "code": "# -*- coding: utf-8 -*-\nS = input()\nlength = len(S)\nst = length - 2\nprint(S[0:1] + str(st) + S[-1])"}
{"label": 75, "index": 9702, "code": "s=input()\nn=len(s)\nans=s[0]+str(n-2)+s[n-1]\nprint(ans)"}
{"label": 75, "index": 9703, "code": "s = list(raw_input())\nprint s[0] + str(len(s) - 2) + s[len(s) - 1]"}
{"label": 75, "index": 9704, "code": "S=input ()\np=S[0]\np+=str(len(S)-2)\np+=S[-1]\nprint (p)"}
{"label": 75, "index": 9705, "code": "x = input()\nb = len(x) - 2\nn =x[0] + str(b) + x[b+1]\nprint (n)\n"}
{"label": 75, "index": 9706, "code": "s=str(input())\nprint(str(s[0])+str(len(s)-2)+str(s[-1]))"}
{"label": 75, "index": 9707, "code": "s = input()\nprint(s[0] + str(len(s)-2) + s[-1])"}
{"label": 75, "index": 9708, "code": "s = input()\nprint( s[0]+ str(len(s)-2) + s[-1])\n"}
{"label": 75, "index": 9709, "code": "chr = input()\nchr_list = list(chr)\nlength = len(chr_list)\n\na, z =  chr_list[0], chr_list[length - 1]\n\nprint(a, length - 2, z, sep = '')"}
{"label": 75, "index": 9710, "code": "s = str(input())\nprint(s[0] + str(len(s) - 2) + str(s[len(s) - 1]))\n"}
{"label": 75, "index": 9711, "code": "s = input()\nprint(s[0]+str(len(s)-2)+s[-1])"}
{"label": 75, "index": 9712, "code": "S = input()\nmemo = S[1:-1]\nprint(S[0],end = \"\")\nprint(len(memo),end = \"\")\nprint(S[-1])"}
{"label": 75, "index": 9713, "code": "s = input()\nprint(\"{0}{1}{2}\".format(s[0],len(s) - 2,s[-1]))"}
{"label": 75, "index": 9714, "code": "if __name__ == '__main__':\n    s = input()\n    print(s[0] + str(len(s)-2) + s[-1])\n"}
{"label": 75, "index": 9715, "code": "from collections import defaultdict\nfrom itertools import product, groupby\nfrom math import pi\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right\nINF = 10 ** 10\n\n\ndef main():\n    s = input()\n    print(s[0] + str(len(s) - 2) + s[-1])\n\n\nif __name__ == '__main__':\n    main()\n"}
{"label": 75, "index": 9716, "code": "s = raw_input().rstrip()\nprint s[0] + str(len(s)-2)+s[-1]"}
{"label": 75, "index": 9717, "code": "a=input()\nprint('%s%d%s'%(a[0],len(a)-2,a[-1]))"}
{"label": 75, "index": 9718, "code": "# i18n\ns = input()\n\nprint(s[0]+ str(len(s)-2) +s[-1] )"}
{"label": 75, "index": 9719, "code": "a=input()\nb=str(len(a[1:-1]))\nc=str(a[:1])\nd=str(a[-1])\nprint(c+b+d)"}
{"label": 75, "index": 9720, "code": "s = raw_input()\nprint \"%s%d%s\" % (s[0], (len(s)-2), s[-1])"}
{"label": 75, "index": 9721, "code": "S = input()\nprint(S[0]+str(len(S[1:-1]))+S[-1])"}
{"label": 75, "index": 9722, "code": "s=input()\nl=len(s)\nanser=s[0]+str(l-2)+s[l-1]\nprint(anser)"}
{"label": 75, "index": 9723, "code": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\ns = raw_input()\nans = s[0] + str(len(s)-2) + s[-1]\nprint ans\n"}
{"label": 75, "index": 9724, "code": "words = input()\nl = len(words)\noutput = words[0] + str(l-2) + words[l-1]\nprint(output)\n"}
{"label": 75, "index": 9725, "code": "s = input()\nans = s[0] + str(len(s)-2) + s[-1]\nprint(ans)"}
{"label": 75, "index": 9726, "code": "s = raw_input()\n\nprint s[0]+str(len(s)-2)+s[-1]"}
{"label": 75, "index": 9727, "code": "s = input()\n\nout = s[0]\nout += str(s.__len__()-2)\nout += s[s.__len__()-1]\n\nprint(out)\n"}
{"label": 75, "index": 9728, "code": "s = input()\nw = s[0]+str(len(s[:-2]))+s[-1]\nprint(w)"}
{"label": 75, "index": 9729, "code": "a=input().split()\nb=list(a[0])\nc=b[0]\nd=b[-1]\nl=len(b)-2\nl=str(l)\nprint(c+l+d)"}
{"label": 75, "index": 9730, "code": "def b():\n    s = input()\n    print(s[0] + str(len(s) - 2) + s[-1])\n\nb()\n"}
{"label": 75, "index": 9731, "code": "word = raw_input().strip()\nprint word[0] + str(len(word)-2) + word[-1]"}
{"label": 75, "index": 9732, "code": "# coding: utf-8\n\ns = input()\nprint(s[0] + str(len(s) - 2) + s[-1])\n"}
{"label": 75, "index": 9733, "code": "#! /usr/bin/env python3\n\nS = input()\nprint(S[0] + str(len(S)-2) + S[-1])\n"}
{"label": 75, "index": 9734, "code": "s = raw_input()\ns = s[0] + str(len(s)-2) + s[-1]\nprint(s)"}
{"label": 75, "index": 9735, "code": "s=input()\nprint(s[0]+str(len(s)-2)+s[-1])"}
{"label": 75, "index": 9736, "code": "def main():\n    s = input()\n    print(s[0] + str(len(s) - 2) + s[-1])\n\nif __name__ == '__main__':\n    main()\n"}
{"label": 75, "index": 9737, "code": "S = raw_input()\n\nprint \"{}{}{}\".format(S[0], len(S)-2, S[-1])\n"}
{"label": 75, "index": 9738, "code": "s = str(input())\n\nprint( s[0] + str(len(s)-2) + s[-1] )\n"}
{"label": 75, "index": 9739, "code": "S = input()\n\nS_list = list(S)\nLen= len(S)\nqueue = []\n\nqueue.append(S_list[0])\nqueue.append(str(Len-2))\nqueue.append(S_list[Len-1])\n\nprint(\"\".join(queue))\n"}
{"label": 75, "index": 9740, "code": "s = input()\nprint(s[0] + str(len(s)-2) + s[-1])"}
{"label": 75, "index": 9741, "code": "a = input()\nprint (a[0] + str((len(a) - 2)) + a[len(a) - 1])\n"}
{"label": 75, "index": 9742, "code": "#!/usr/bin/py\n\ns = input()\nfirst = s[0]\nlast = s[-1]\nnum = str(len(s[1:-1]))\n\nprint(first+num+last)\n"}
{"label": 75, "index": 9743, "code": "s = input()\nprint(s[0] + str(len(s) - 2) + s[-1])"}
{"label": 75, "index": 9744, "code": "temp= input()\nl = len(temp)\nsrted = temp[0] + str(len(temp)-2) +temp[-1]\nprint(srted)\n"}
{"label": 75, "index": 9745, "code": "S = input()\nans = \"\"\nans += S[0]\nans += str(len(S[1:-1]))\nans += S[-1]\nprint(ans)"}
{"label": 75, "index": 9746, "code": "string=input('')\nfirst=string[0]\nlast=string[len(string)-1]\nmid=str(len(string[1:len(string)-1]))\nprint(first+mid+last)"}
{"label": 75, "index": 9747, "code": "s = input().rstrip()\nprint(s[0] + str(len(s) - 2) + s[-1])"}
{"label": 75, "index": 9748, "code": "s = input()\n\nprint( s[0] + str(len(s[1:-1])) + s[-1] )\n"}
{"label": 75, "index": 9749, "code": "# coding: utf-8\n\ns = raw_input()\nprint s[0] + str(len(s[1:-1])) + s[-1]"}
{"label": 76, "index": 9750, "code": "N = input()\nif N == N[-1::-1]:\n    print('Yes')\nelse:\n    print('No')\n    "}
{"label": 76, "index": 9751, "code": "N = input()\nif N[0] == N[2]:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}
{"label": 76, "index": 9752, "code": "num = input()\nif num[0] == num[2]:\n    print('Yes')\nelse:\n    print('No')"}
{"label": 76, "index": 9753, "code": "N = int(input())\nn100 = int(N/100)\nn1 = N - int(N/10) * 10\nif n100 == n1:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"}
{"label": 76, "index": 9754, "code": "n = input()\nif(n[0]==n[2]):\n    print(\"Yes\")\nelse :\n    print(\"No\")"}
{"label": 76, "index": 9755, "code": "N = input()\nif N == N[::-1]:\n    print('Yes')\nelse:\n    print('No')\n"}
{"label": 76, "index": 9756, "code": "n = input()\n\nif n == n[::-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}
{"label": 76, "index": 9757, "code": "N=input()\na=list(N)\nb=[]\nn=len(a)\nfor i in range(n):\n b.append(0)\ncount=0\n\nfor i in range(n):\n  b[i]=a[n-1-i]\n\nfor i in range(n):\n  if(a[i]==b[i]):\n    count +=1\n\nif(count==n):\n  print(\"Yes\")\nelse:\n  print(\"No\")\n  "}
{"label": 76, "index": 9758, "code": "n = list(input())\nr = n[::-1]\n\nif(n==r):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"}
{"label": 76, "index": 9759, "code": "a = raw_input()\nprint \"Yes\" if a == a[-1:-1-len(a):-1] else \"No\""}
{"label": 76, "index": 9760, "code": "def getInput():\n    separator = ' '\n    ret_array = []\n    while True:\n        try:\n            row = input().split(sep=separator)\n            ret_array.append(row)\n        except EOFError:\n            break\n    return ret_array\n\n\ninp = getInput()\ni = inp[0][0]\n\nif i[0] == i[2]:\n    print('Yes')\nelse:\n    print('No')\n"}
{"label": 76, "index": 9761, "code": "n=list(input())\nif n[::-1]==n:\n print(\"Yes\")\nelse:\n print(\"No\")"}
{"label": 76, "index": 9762, "code": "n = input()\ns = []\nfor i in range(len(n)):\n    s.append(n[len(n)-1-i])\nif(n==\"\".join(s)):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"}
{"label": 76, "index": 9763, "code": "N=input()\nif N[0]==N[2]:print('Yes')\nelse:\n  print('No')"}
{"label": 76, "index": 9764, "code": "N = raw_input()\n\nif N == N[::-1]:\n    print \"Yes\"\nelse:\n    print \"No\""}
{"label": 76, "index": 9765, "code": "n = input()\nif n == n[::-1]:\n    print('Yes')\nelse:\n    print('No')\n"}
{"label": 76, "index": 9766, "code": "n = input().rstrip()\nif n[0]==n[2]:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")"}
{"label": 76, "index": 9767, "code": "s = input()\nif(s == s[::-1]) :\n\tprint('Yes')\nelse:\n\tprint('No')\n"}
{"label": 76, "index": 9768, "code": "l = list(map(int, input().split()))\n\nif l[0]//100 == l[0]%10:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}
{"label": 76, "index": 9769, "code": "kaibun = input()\nif \"\".join(reversed(kaibun)) == kaibun:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}
{"label": 76, "index": 9770, "code": "S = input()\nprint('Yes' if S == S[::-1] else 'No')"}
{"label": 76, "index": 9771, "code": "S=input()\nprint('Yes' if S[0]==S[2] else 'No')"}
{"label": 76, "index": 9772, "code": "if __name__ == '__main__':\n    STR = input()\n    if STR[0:1] == STR[2:3]:\n        print('Yes')\n    else:\n        print('No')\n"}
{"label": 76, "index": 9773, "code": "def kaibun(s):\n    for i in range((len(s)+1)//2):\n        if s[i] != s[-(i+1)]:\n            return \"No\"\n    return \"Yes\"\n\n\ns = input()\nprint(kaibun(s))\n"}
{"label": 76, "index": 9774, "code": "N = input()\n\nif N[0] == N[2]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"}
{"label": 76, "index": 9775, "code": "a=input()\nif a[:1]==a[-1]:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")"}
{"label": 76, "index": 9776, "code": "N = input()\nif N[0] == N[2]:\n    print ('Yes')\nelse:\n    print ('No')"}
{"label": 76, "index": 9777, "code": "N = input()\nif N[0] == N[-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}
{"label": 76, "index": 9778, "code": "N = str(input())\n\nif N == N[::-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}
{"label": 76, "index": 9779, "code": "\n\ndef isPal(n):\n    sum = 0\n    while(n>0):\n        rem = n % 10\n        sum = (sum * 10) + rem\n        n = n//10\n\n    return sum\n\nn = int(input().strip())\n\nif(n == isPal(n)):print('Yes')\nelse:print('No')\n    \n"}
{"label": 76, "index": 9780, "code": "x=str(int(input()))\nif x[0]==x[-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n\n    \n"}
{"label": 76, "index": 9781, "code": "s = raw_input()\nif s[0] == s[2]:\n  print 'Yes'\nelse:\n  print 'No'"}
{"label": 76, "index": 9782, "code": "#ABC070A\n\nn=raw_input()\nif n[0]==n[-1]:\n print 'Yes'\nelse:\n print 'No'\n"}
{"label": 76, "index": 9783, "code": "N = input()\n\nfor i in range(int(len(N) / 2 + 1)):\n    if N[i] != N[len(N) - 1 - i]:\n        print('No')\n        exit()\n\nprint('Yes')\n"}
{"label": 76, "index": 9784, "code": "\na=input()\nif a[0]==a[2]:\n    print(\"Yes\")\nelse:print(\"No\")\n"}
{"label": 76, "index": 9785, "code": "def Q1(x):\n    value_reverse = int(str(x)[::-1])\n    if x == value_reverse:\n        return 'Yes'\n    else:\n        return 'No'\n      \nx=int(input())\nprint(Q1(x))"}
{"label": 76, "index": 9786, "code": "n = input()\nmsg = \"Yes\" if n == n[::-1] else \"No\"\nprint(msg)\n"}
{"label": 76, "index": 9787, "code": "a = list(input())\nrev_a = list(a)\nrev_a.reverse()\n\nif a == rev_a:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}
{"label": 76, "index": 9788, "code": "N = input()\nif N == N[::-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"}
{"label": 76, "index": 9789, "code": "n = input()\nif n == n[::-1]:\n    print('Yes')\nelse:\n    print('No')\n"}
{"label": 76, "index": 9790, "code": "N = input()\nn=int(N)\nn2=(n%10)*100\nn2+=(n%100)-n%10\nn2+=(n-n%100)/100\nif n==n2 :\n\tprint('Yes\\n')\nelse:\n\tprint('No\\n')\nquit()\n"}
{"label": 76, "index": 9791, "code": "if __name__ == '__main__':\n    N = int(input())\n    if N % 10 == int((N - (N % 100))/100):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n"}
{"label": 76, "index": 9792, "code": "# -*- coding:utf-8 -*-\n\nA = int(input())\n\nif(int(A/100) == int(A%10)):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"}
{"label": 76, "index": 9793, "code": "n = input()\nprint(\"Yes\" if n[0] == n[2] else \"No\")"}
{"label": 76, "index": 9794, "code": "n = []\nmsg = \"Yes\"\nn += input()\nfor i in range(len(n)//2):\n  if n[i] != n[-(i+1)]:\n    msg = \"No\"\n    break\nprint(msg)"}
{"label": 76, "index": 9795, "code": "n = input()\nif n == n[::-1]:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n\t"}
{"label": 76, "index": 9796, "code": "N = input()\nrev_N = list(N)[::-1]\nif N == \"\".join(rev_N):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"}
{"label": 76, "index": 9797, "code": "#!usr/bim/python\n#! -*- coding: utf-8 -*-\n\nn = raw_input()\n\nlength = len(n)\n\nstatus = 0\n\nfor i in range(length/2):\n    if n[i] == n[length-1-i]:\n        pass\n    else:\n        status = 1\n        break\n\nif status == 0:\n    print 'Yes'\nelse:\n    print 'No'\n    \n"}
{"label": 76, "index": 9798, "code": "n = str(int(input()))\n\nprint(\"Yes\" if n == n[::-1] else \"No\")"}
{"label": 76, "index": 9799, "code": "def main():\n\tn = int(input())\n\ta = n // 100\n\tb = n - (n // 10) * 10\n\tif a == b:\n\t\tprint(\"Yes\")\n\telse:\n\t\tprint(\"No\")\n \nif __name__ == '__main__':\n\tmain()"}
{"label": 76, "index": 9800, "code": "def ri(): return int(input())\ndef rli(): return list(map(int, input().split()))\ndef rls(): return list(input())\ndef pli(a): return \"\".join(list(map(str, a)))\ndef plis(a): return \" \".join(list(map(str, a)))\n\nN = input()\nif(N[0] == N[2]):\n    print(\"Yes\")\nelse:\n    print(\"No\")"}
{"label": 76, "index": 9801, "code": "num=list(raw_input())\n#print num\n#print num[::-1]\nif num==num[::-1]:\n    print \"Yes\"\nelse:\n    print \"No\"\n"}
{"label": 76, "index": 9802, "code": "n = int(input())\nif (n//10//10) == (n%10%10):\n    print('Yes')\nelse:\n    print('No')\n"}
{"label": 76, "index": 9803, "code": "n = str(input())\nprint(\"Yes\" if n == n[::-1] else \"No\")\n"}
{"label": 76, "index": 9804, "code": "n = input()\nm = int(str(n)[::-1])\nif(n == m):\n  print 'Yes'\nelse:\n  print 'No'"}
{"label": 76, "index": 9805, "code": "N = input()\nif N[0] == N[2]:\n    print('Yes')\nelse:\n    print('No')"}
{"label": 76, "index": 9806, "code": "n = input()\nprint(\"Yes\" if n[0] == n[2] else \"No\")"}
{"label": 76, "index": 9807, "code": "s = str(input())\nif s == s[::-1]:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")"}
{"label": 76, "index": 9808, "code": "s = str(input())\nif s == s[::-1]:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")"}
{"label": 76, "index": 9809, "code": "s = input()\nprint((\"No\", \"Yes\")[s[0]==s[2]])"}
{"label": 76, "index": 9810, "code": "def main():\n    N_str = input().strip()\n    if N_str == N_str[::-1]:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == '__main__':\n    main()\n"}
{"label": 76, "index": 9811, "code": "\ns=raw_input()\nprint 'Yes' if s==s[::-1] else 'No'"}
{"label": 76, "index": 9812, "code": "N = input()\nif N[0] == N[2]:\n    print('Yes')\nelse:\n    print('No')\n"}
{"label": 76, "index": 9813, "code": "a = input()\nprint('Yes' if a[0]==a[2] else 'No')"}
{"label": 76, "index": 9814, "code": "n = input()\nprint(\"Yes\" if n[0] == n[2] else \"No\")"}
{"label": 76, "index": 9815, "code": "d = input()\nprint('Yes' if d == d[::-1] else 'No')"}
{"label": 76, "index": 9816, "code": "N = input()\nif N[0] == N[-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}
{"label": 76, "index": 9817, "code": "import sys\n\n# sys.stdin = open('a1.in')\n\n\ndef read_int_list():\n    return list(map(int, input().split()))\n\n\ndef read_str_list():\n    return input().split()\n\n\ndef read_int():\n    return int(input())\n\n\ndef read_str():\n    return input()\n\n\ndef main():\n    n = read_int()\n    if str(n)[0] == str(n)[-1]:\n        res = 'Yes'\n    else:\n        res = 'No'\n    print(res)\n\n\nmain()\n"}
{"label": 76, "index": 9818, "code": "str=input()\nif str[0]==str[2]:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}
{"label": 76, "index": 9819, "code": "\n\ndef main():\n    n = int(input())\n\n    if n // 100 == n % 10:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == \"__main__\":\n    main()"}
{"label": 76, "index": 9820, "code": "n = input()\n\na = [i for i in n]\nb = [i for i in reversed(n)]\n\nif a == b:\n    print('Yes')\nelse:\n    print('No')\n\n"}
{"label": 76, "index": 9821, "code": "n = input()\nif n[0] == n[-1]:\n    print('Yes')\nelse:\n    print('No')\n"}
{"label": 76, "index": 9822, "code": "import sys\nimport scipy as sp\nimport numpy\n\nN = input()\n\na=N/100\na1=N%100\nb=a1/10\nc=a1%10\n\nif(a==c):\n    print \"Yes\"\nelse:\n    print \"No\"\n"}
{"label": 76, "index": 9823, "code": "# -*- coding: utf-8 -*-\ns = input()\n\nprint(\"Yes\" if s[0] == s[2] else \"No\")\n"}
{"label": 76, "index": 9824, "code": "S=list(map(int, input()))\n\nif S[0]==S[2]:\n    print('Yes')\nelse:\n    print('No')"}
{"label": 76, "index": 9825, "code": "import sys\n\nN = int(sys.stdin.readline())\n\nfirstD = N / 100\nlastD = N % 10\nif firstD == lastD:\n\tprint 'Yes'\nelse:\n\tprint 'No'"}
{"label": 76, "index": 9826, "code": "N = input()\n\nif N[0] == N[2]:\n    print('Yes')\nelse:\n    print('No')"}
{"label": 76, "index": 9827, "code": "N = int(input())\na=N//100\nb=(N-a*100)//10\nc=N-a*100-b*10\nif a == c:\n    print(\"Yes\\n\")\nelse:\n    print(\"No\\n\")"}
{"label": 76, "index": 9828, "code": "num = input()\nif num == num[::-1]:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")"}
{"label": 76, "index": 9829, "code": "N = input()\nif N[:1] == N[-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}
{"label": 76, "index": 9830, "code": "s = input()\nif s[0] == s[2]:\n    print('Yes')\nelse:\n    print('No')\n"}
{"label": 76, "index": 9831, "code": "N = input()\n\nif N[0] == N[-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}
{"label": 76, "index": 9832, "code": "N = input()\nrevN = N[::-1]\n\nif int(N) == int(revN):\n    print(\"Yes\")\nelse:\n    print(\"No\")"}
{"label": 76, "index": 9833, "code": "N=input()\nprint('Yes' if N==N[::-1] else 'No')\n\n"}
{"label": 76, "index": 9834, "code": "N = input()\nif N == N[::-1]:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")"}
{"label": 76, "index": 9835, "code": "n = str(input())\nprint(\"Yes\" if n == n[::-1] else \"No\")\n"}
{"label": 76, "index": 9836, "code": "n = input()\nprint(\"Yes\" if n[0] == n[2] else \"No\")"}
{"label": 76, "index": 9837, "code": "n = str(input())\nif n[0] == n[2]:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}
{"label": 76, "index": 9838, "code": "N = input()\nif N[0] == N[-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}
{"label": 76, "index": 9839, "code": "N =input('')\n\nif (N % 10) == (N / 100):\n\tprint 'Yes'\nelse:\n\tprint 'No'"}
{"label": 76, "index": 9840, "code": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport sys\nimport re\nimport math\nimport collections\nimport itertools\nimport functools\n\nDEBUG = True\nDEBUG = False\n\ndef dbg(*args):\n    if DEBUG:\n        print(\"DBG: \", file=sys.stderr, end=\"\")\n        print(*args, file=sys.stderr)\n\n\n\ndef main():\n    N = int(input())\n    s = str(N)\n    print(\"Yes\" if s == \"\".join(reversed(s)) else \"No\")\n\nif __name__ == \"__main__\": main()\n"}
{"label": 76, "index": 9841, "code": "\ns=raw_input()\nfor i in range(len(s)/2):\n    if s[i]!=s[len(s)-i-1]:\n        print \"No\"\n        exit()\nprint \"Yes\"\n\nprint"}
{"label": 76, "index": 9842, "code": "import sys\n\nfor inp in map(str, [line.strip() for line in sys.stdin]):\n\tlenip = len(inp)\n\tif lenip%2==0:\n\t\tprint \"Yes\" if inp[:lenip/2] == inp[lenip/2:][::-1] else \"No\"\n\telse:\n\t\tprint \"Yes\" if inp[:lenip/2] == inp[(lenip+1)/2:][::-1] else \"No\""}
{"label": 76, "index": 9843, "code": "import sys\n\n# sys.stdin = open('a1.in')\n\n\ndef read_int_list():\n    return list(map(int, input().split()))\n\n\ndef read_str_list():\n    return input().split()\n\n\ndef read_int():\n    return int(input())\n\n\ndef read_str():\n    return input()\n\n\ndef main():\n    n = read_str()\n    if n == ''.join(list(reversed(n))):\n        res = 'Yes'\n    else:\n        res = 'No'\n    print(res)\n\n\nmain()\n"}
{"label": 76, "index": 9844, "code": "N = input()\nA = int(N[0])\nB = int(N[1])\nC = int(N[2])\nif A==C:\n print(\"Yes\")\nelse:\n print(\"No\")"}
{"label": 76, "index": 9845, "code": "s=input()\nif s==s[::-1]:\n  print(\"Yes\")\nelse:\n  print(\"No\")"}
{"label": 76, "index": 9846, "code": "a=input()\nb=''.join(reversed(a))\nif(a==b):\n  print('Yes')\nelse:\n  print('No')\n"}
{"label": 76, "index": 9847, "code": "n = int(input())\nif n//100 == n%10:\n    print('Yes')\nelse:\n    print('No')"}
{"label": 76, "index": 9848, "code": "N=raw_input()\nif N[0]==N[-1] :\n    print 'Yes'\nelse :\n    print 'No'"}
{"label": 76, "index": 9849, "code": "n = list(input())\n\nif n==n[::-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"}
{"label": 76, "index": 9850, "code": "def f():\n    n=(input())\n    if (n[0]==n[2]):    \n        print(\"Yes\")\n    else:\n        print('No')\nf()"}
{"label": 76, "index": 9851, "code": "s = input()\nif s[0:1] == s[2:3]:\n    print('Yes')\nelse:\n    print('No')\n"}
{"label": 76, "index": 9852, "code": "import sys\n\nN = input()\n\nfor i in range(len(N)):\n  if N[i] != N[len(N)-1-i]:\n    print(\"No\")\n    sys.exit()\n\nprint(\"Yes\")"}
{"label": 76, "index": 9853, "code": "N = str(input())\nM = N[::-1]\n\nif N == M:\n    print('Yes')\nelse:\n    print('No')\n"}
{"label": 76, "index": 9854, "code": "# coding: utf-8\ndef II(): return int(input())\ndef ILI(): return list(map(int, input().split()))\n\n\ndef read():\n    N = input()\n    return (N, )\n\n\ndef solve(N):\n    rev = str(int(\"\".join(reversed(N))))\n    if N == rev:\n        ans = \"Yes\"\n    else:\n        ans = \"No\"\n    return ans\n\n\ndef main():\n    params = read()\n    print(solve(*params))\n\n\nif __name__ == \"__main__\":\n    main()\n"}
{"label": 76, "index": 9855, "code": "N = raw_input()\nprint \"Yes\" if N==N[::-1] else \"No\"\n"}
{"label": 76, "index": 9856, "code": "n = input()\nr = n[::-1]\nif n == r:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}
{"label": 76, "index": 9857, "code": "nm = int(input())\nif str(nm) == str(nm)[::-1]:\n    print('Yes')\nelse:\n    print('No')\n"}
{"label": 76, "index": 9858, "code": "n = list(input())\nif n[0]==n[2]:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}
{"label": 76, "index": 9859, "code": "N = input()\n\nn = len(N)\nresult=\"Yes\"\n\nfor i in range(n//2):\n    if N[i] != N[n-i-1]:\n        result=\"No\"\n        break\n\nprint(result)\n"}
{"label": 76, "index": 9860, "code": "k = int(input())\nif int(k / 100) == k % 10:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}
{"label": 76, "index": 9861, "code": "n = int(raw_input())\nif n / 100 == n % 10:\n    print 'Yes'\nelse:\n    print 'No'\n"}
{"label": 76, "index": 9862, "code": "a = raw_input()\nif a[0] == a[2]:\n\tprint('Yes')\nelse:\n\tprint(\"No\")"}
{"label": 76, "index": 9863, "code": "a = input()\nb = a[::-1]\n\nif a == b:\n\tprint(\"Yes\")\nelse :\n\tprint(\"No\")"}
{"label": 76, "index": 9864, "code": "num = input()\n\nprint ('Yes' if num[0:1]==num[2:3] else 'No')"}
{"label": 76, "index": 9865, "code": "#Palindromic Number\n\nN = int(input())\n\nif ( N == int(str(N)[::-1]) ):\n    print(\"Yes\")\nelse:\n    print(\"No\")"}
{"label": 76, "index": 9866, "code": "n = raw_input()\nif n[0] == n[2]: print \"Yes\"\nelse: print \"No\""}
{"label": 76, "index": 9867, "code": "n = input()\nif n[0] == n[2]:\n    print('Yes')\nelse:\n    print('No')"}
{"label": 76, "index": 9868, "code": "# -*- coding:utf-8 -*-\nN = list(input())\nif ''.join(N) == ''.join(reversed(N)):\n    print('Yes')\nelse:\n    print('No')"}
{"label": 76, "index": 9869, "code": "def main():\n    a = input()\n\n    for i in range(len(a)//2):\n        if a[i] != a[-i-1]:\n            print('No')\n            return\n    print('Yes')\n    return\n\n\nif __name__ == '__main__':\n    main()\n"}
{"label": 76, "index": 9870, "code": "# coding: utf-8\n# Here your code !\nimport sys\na=input()\nif a==a[::-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"}
{"label": 76, "index": 9871, "code": "n = int(input())\na = 0\nfor i in range(1,10):\n\tif 100 * i <= n:\n\t\ta += 1\nif a == n % 10:\n\tprint('Yes')\nelse:\n\tprint('No')"}
{"label": 76, "index": 9872, "code": "na = list(input())\nnb = na[:]\nnb.reverse()\nif na == nb:\n    print('Yes')\nelse:\n    print('No')\n"}
{"label": 76, "index": 9873, "code": "# coding: utf-8\n\nn = raw_input()\n\nif n[0] == n[-1]:\n    print \"Yes\"\nelse:\n    print \"No\"\n"}
{"label": 76, "index": 9874, "code": "s = raw_input()\nprint \"Yes\" if s == s[::-1] else \"No\"\n"}
{"label": 76, "index": 9875, "code": "def main():\n    N = input()\n\n    if N == N[::-1]:\n        ans = 'Yes'\n    else:\n        ans = 'No'\n\n    print(ans)\n\nmain()\n"}
{"label": 76, "index": 9876, "code": "n = input()\nif n == n[::-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}
{"label": 76, "index": 9877, "code": "N=str(input())\nif N[0]==N[2]:\n  print(\"Yes\")\nelse:\n  print(\"No\")"}
{"label": 76, "index": 9878, "code": "def main():\n    n = input()\n\n    flag = True\n    s, e = 0, len(n)\n    while (s < e//2):\n        if n[s] != n[e-s-1]:\n            flag=False\n            break\n        s += 1\n    if flag:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n        \n\nif __name__ == \"__main__\":\n    main()"}
{"label": 76, "index": 9879, "code": "N=input()\nif N==N[::-1]:\n print('Yes')\nelse:\n print('No')"}
{"label": 77, "index": 9880, "code": "a = map(int,raw_input().split())\ncount = 0\nfor i in range(0,101):\n if a[0] <= i and i < a[1] and a[2] <= i and i < a[3]:\n  count += 1\nprint count\n"}
{"label": 77, "index": 9881, "code": "# Two Switches\n\nA,B,C,D = list(map(int, input().split()))\n\nif (A>C):\n    A,B,C,D = C,D,A,B\n\nif ( C<B ):\n    print( min(B-C, D-C) )\nelse:\n    print(0)"}
{"label": 77, "index": 9882, "code": "A, B, C, D = map(int, input().split())\nans = min(B,D) - max(A,C)\n \nif ans > 0:\n    print(ans)\nelse:\n    print(0)"}
{"label": 77, "index": 9883, "code": "a, b, c, d = map(int, input().split())\nif b <= c or d <= a:\n\tprint(0)\nelif b <= d:\n\tif a <= c:\n\t\tprint(b - c)\n\telse:\n\t\tprint(b - a)\n\t\nelse:\n\tif a <= c:\n\t\tprint(d - c)\n\telse:\n\t\tprint(d - a)\n"}
{"label": 77, "index": 9884, "code": "a, b, c, d = map(int, input().split())\nif a>=c:\n    if b>=d:\n        if d<=a:\n            print(0)\n        else:\n            print(d-a)\n    else:\n        print(b-a)\nelif a<c:\n    if b>=d:\n        print(d-c)\n    elif b<=c:\n        print(0)\n    else:\n        print(b-c)"}
{"label": 77, "index": 9885, "code": "a, b, c, d = map(int, input().split())\nr = min(b, d) - max(a, c)\nif r < 0:\n    print(0)\nelse:\n    print(r)\n"}
{"label": 77, "index": 9886, "code": "a, b, c, d = map(int, raw_input().split())\nprint max(0, min(b, d) - max(a, c))   \n"}
{"label": 77, "index": 9887, "code": "def solve():\n    a, b, c, d = map(int, input().split())\n    ans = [0] * 101\n    for i in range(a, b):\n        ans[i] += 1\n    for i in range(c, d):\n        ans[i] += 1\n    print(ans.count(2))\n\nif __name__==\"__main__\":\n    solve()"}
{"label": 77, "index": 9888, "code": "a,b,c,d = map(int,input().split())\nans =min(b,d)-max(a,c)\nprint(0 if ans<0 else ans)\n"}
{"label": 77, "index": 9889, "code": "timestr = input().split()\ntime = []\nfor x in timestr:\n    time.append(int(x))\nl = min([time[1], time[3]])\ns = max([time[0], time[2]])\nd = l - s\nif d < 0:\n    print(0)\nelse:\n    print(d)"}
{"label": 77, "index": 9890, "code": "a, b, c, d = map(int, input().split())\nprint(max(0, min(b, d) - max(a, c)))\n"}
{"label": 77, "index": 9891, "code": "a = map(int, raw_input().strip().split())\nb = max(a[0],a[2])\nc = min(a[1],a[3])\nif c > b:\n\tans = c-b\nelse:\n\tans = 0\nprint(ans)"}
{"label": 77, "index": 9892, "code": "A, B, C, D = map(int, input().split())\nt = 0\nif A > C:\n    A, B, C, D = C, D, A, B\nif B <= C:\n    print(t)\nelse:\n    t = min(B, D) - C\n    print(t)\n"}
{"label": 77, "index": 9893, "code": "A, B, C, D = input().split()\nA = int(A)\nB = int(B)\nC = int(C)\nD = int(D)\n\n\ndef solve(A, B, C, D):\n    if A < C:\n        if B < C:\n            return 0\n        elif A <= C and D <= B:\n            return (D - C)\n        else:\n            return (B - C)\n    else:\n        if D < A:\n            return 0\n        elif C <= A and B <= D:\n            return (B - A)\n        else:\n            return (D - A)\n\nprint(solve(A, B, C, D))\n"}
{"label": 77, "index": 9894, "code": "a,b,c,d=map(int,input().split())\n\nif c>b  or a>d:\n    print(\"0\")\nelse:\n    print(b+d-a-c-(max(a,b,c,d)-min(a,b,c,d)))\n"}
{"label": 77, "index": 9895, "code": "a, b, c, d= [int(i) for i in input().strip().split(' ')]\nif c>=b or d<=a:\n  print(0)\nelif c>=a and c<=b:\n  if d<=b:\n    print(d-c)\n  else:\n    print(b-c)\nelif d>=a:\n  if d<=b:\n    print(d-a)\n  else:\n      print(b-a)"}
{"label": 77, "index": 9896, "code": "A, B, C, D = list(map(int, input().split()))\n\nf = set([i for i in range(A, B)])\ng = set([i for i in range(C, D)])\nprint(len(list(f.intersection(g))))\n"}
{"label": 77, "index": 9897, "code": "a, b, c, d = map(int, raw_input().split())\n\ns = 0\non_a = 0\non_b = 0\nfor i in range(101):\n    if i == a:\n        on_a = 1\n    if i == b:\n        on_a = 0\n    if i == c:\n        on_b = 1\n    if i == d:\n        on_b = 0\n#    print(i, on_a, on_b)\n    if on_a and on_b:\n        s += 1\n\nprint(s)\n"}
{"label": 77, "index": 9898, "code": "a,b,c,d=map(int,input().split());print(max(0,min(b,d)-max(a,c)))"}
{"label": 77, "index": 9899, "code": "a, b, c, d = map(int, input().split())\nt = min(b, d) - max(a, c)\nprint(t if t > 0 else 0)\n"}
{"label": 77, "index": 9900, "code": "a_s, a_f, b_s, b_f = [int(x) for x in input().rstrip().split()]\nresult = min(a_f, b_f) - max(a_s, b_s)\nif result > 0:\n\tprint(result)\nelse:\n\tprint(\"0\")"}
{"label": 77, "index": 9901, "code": "a = input().split()\nast = int(a[0])\naen = int(a[1])\nbst = int(a[2])\nben = int(a[3])\nif ast > ben or bst > aen:\n    print(\"0\")\nelif ast < bst and aen < ben:\n    print(aen - bst)\nelif ast < bst and aen > ben:\n    print(ben - bst)\nelif bst < ast and ben < aen:\n    print(ben - ast)\nelif bst < ast and ben > aen:\n    print(aen - ast)\nelif ast == bst and aen < ben:\n    print(aen - ast)\nelif ast == bst and aen > ben:\n    print(ben - ast)\nelif ast < bst and aen == ben:\n    print(ben - bst)\nelif ast > bst and aen == ben:\n    print(aen - ast)\nelif ast == bst and aen == ben:\n    print(aen - ast)\nelse:\n    print(\"0\")\n"}
{"label": 77, "index": 9902, "code": "\n\ndef main():\n    a, b, c, d = [int(x) for x in input().split()]\n\n    xs = [0] * 101\n    xs[a] += 1\n    xs[b] -= 1\n    xs[c] += 1\n    xs[d] -= 1\n\n    cursum = 0\n    t = 0\n    for x in xs:\n        cursum += x\n        if cursum == 2:\n            t += 1\n\n    print(t)\n\n\nif __name__ == \"__main__\":\n    main()"}
{"label": 77, "index": 9903, "code": "[A, B, C, D] = map(int, input().split())\nX = max(A, C)\nY = min(B, D)\nif Y-X >= 0:\n    print(Y-X)\nelse:\n    print(0)"}
{"label": 77, "index": 9904, "code": "sp=list(map(int,input().split()))\ntime=min(sp[1],sp[3])-max(sp[0],sp[2])\nif time >= 0:\n\tprint(time)\nelse:\n\tprint(0)"}
{"label": 77, "index": 9905, "code": "\nA, B, C, D = map(int, input().split())\nans = min(B,D) - max(A,C)\n\nif ans > 0:\n    print(ans)\nelse:\n    print(0)\n"}
{"label": 77, "index": 9906, "code": "a, b, c, d = map(int, input().split())\nprint(max(0, min(b, d) - max(a, c)))\n"}
{"label": 77, "index": 9907, "code": "line = raw_input()\nA, B, C, D = line.split()\nA = int(A)\nB = int(B)\nC = int(C)\nD = int(D)\n\n\nif C > B:\n    print 0\nelif A > D:\n    print 0\nelif A > C:\n    if B > D:\n        print D - A\n    else:\n        print B - A\nelse:\n    if B > D:\n        print D - C\n    else:\n        print B - C \n"}
{"label": 77, "index": 9908, "code": "import sys\n\nN = sys.stdin.readline()\n\nN = N.split()\nN = map(int, N)\n\nif N[2] > N[1] or N[0] > N[3]:\n\tprint 0\n\nelse:\n\tleast = max(N[0], N[2])\n\tmost = min(N[1], N[3])\n\t\n\tprint abs(most- least)"}
{"label": 77, "index": 9909, "code": "A, B, C, D = map(int, input().split())\nif A > C:\n    tmpA = A\n    tmpB = B\n    A = C\n    B = D\n    C = tmpA\n    D = tmpB\nif D > B:\n    if C > B:\n        print(0)\n    else:\n        print(B-C)\nelse:\n    print(D-C)\n"}
{"label": 77, "index": 9910, "code": "A, B, C, D = map(int, input().split())\n\nprint(max(0, min(B, D) - max(A, C)))"}
{"label": 77, "index": 9911, "code": "def f(a, b, c, d):\n    if a <= c:\n        if b <= c:\n            return 0\n        if b <= d:\n            return b - c\n        else:\n            return d - c\n    else:\n        return f(c, d, a, b)\n\na, b, c, d = [int(x) for x in input().strip().split()]\nprint(f(a, b, c, d))\n"}
{"label": 77, "index": 9912, "code": "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\n\nsys.setrecursionlimit(10**7)\ninf = 10**1\ngosa = 1.0 / 10**9\nmod = 10**9 + 7\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\n\n\ndef main():\n    a,b,c,d = LI()\n    t = min(b,d) - max(a,c)\n    if t > 0:\n        return t\n\n    return 0\n\n\n\nprint(main())\n\n"}
{"label": 77, "index": 9913, "code": "# coding: utf-8\na, b, c, d = list(map(int, input().split()))\ns1 = set([x for x in range(a, b + 1)])\ns2 = set([x for x in range(c, d + 1)])\nprint(max(len(s1 & s2) - 1, 0))"}
{"label": 77, "index": 9914, "code": "a, b, c, d = map(int, input().split())\nans = 0\nfor i in range(101):\n    if a <= i < b and c <= i < d:\n        ans += 1\nprint(ans)\n"}
{"label": 77, "index": 9915, "code": "A,B,C,D = map(int, input().split())\nif B <= C:\n    print(\"0\")\nelse:\n    print(max(0, min(B,D) - max(A,C)))\n"}
{"label": 77, "index": 9916, "code": "A, B, C, D = map(int, raw_input().split())\n\nprint max(min(B, D) - max(A, C), 0)\n"}
{"label": 77, "index": 9917, "code": "A, B, C, D = [int(n) for n in input().split()]\n\nend = min(B, D)\nstart = max(A, C)\nprint (max(0,end-start))"}
{"label": 77, "index": 9918, "code": "a,b,c,d=map(int,input().split())\ns=max(a,c)\nf=min(b,d)\nif f-s<=0:\n    print(0)\nelse:\n    print(f-s)"}
{"label": 77, "index": 9919, "code": "A, B, C, D = list(map(int, input().split(\" \")))\n\nprint(max(min(B, D) - max(A, C), 0))\n"}
{"label": 77, "index": 9920, "code": "A, B, C, D = map(int, input().split())\n\nst = max(A, C)\ned = min(B, D)\n\nprint(max(ed - st, 0)) "}
{"label": 77, "index": 9921, "code": "\n\n\na,b,c,d = map(int,input().split())\n\nif(b<c or d<a):print(0)\n##elif(b==c or d==a):\n##    if(b == 0 or d==0):print(0)\n##    else:print(1)\nelse:\n    start = a if a>c else c\n    end = b if b<d else d\n    print(end - start)\n\n"}
{"label": 77, "index": 9922, "code": "a,b,c,d=map(int,input().split())\ncount=0\nfor i in range(101):\n    if i>=a and i<=b and i>= c and i<=d:\n        count +=1\n\n\nprint(max(0,count-1))"}
{"label": 77, "index": 9923, "code": "(a, b, c, d) = tuple(map(int, input().split(\" \")))\n\nmm = max(a, c)\nnn = min(b, d)\n\nprint(max(0, nn - mm))"}
{"label": 77, "index": 9924, "code": "def compute(a, b, c, d):\n    return max(0, min(b, d) - max(c, a))\n\n\ndef main():\n    a, b, c, d = (int(x) for x in input().split())\n    print(compute(a, b, c, d))\n\n\nif __name__ == '__main__':\n    main()\n"}
{"label": 77, "index": 9925, "code": "a,b,c,d = map(int,raw_input().split())\nt = [0 for _ in xrange(101)]\nt[a] += 1\nt[b] -= 1\nt[c] += 1\nt[d] -= 1\nfor i in xrange(len(t)):\n  if(i > 0): t[i] += t[i-1]\ncount = 0\nfor i in xrange(len(t)):\n  if(t[i] == 2): count += 1\nprint count"}
{"label": 77, "index": 9926, "code": "\n\na,b,c,d=[int(i) for i in input().strip().split(' ')]\n\n'''\n\u5165\u529b\u306f\u4ed6\u306e\u4eba\u306e\u3092\u898b\u305f\n'''\n\nmax=0\nmin=0\n\nif a < c :\n    max=c\nelse :\n    max=a\n    \nif b > d :\n    min=d\nelse :\n    min=b\nif ( min - max ) > 0 :\n    print( min - max )\nelse :\n    print(0)\n\n"}
{"label": 77, "index": 9927, "code": "A, B, C, D = map(int, input().split(' '))\ni = (B - A + D - C - abs(D-A))\nif A<C and D<B:\n    print(abs(D-C))\nelif C<A and B<D:\n    print(abs(B-A))\nelif A<=C and C <=B:\n    print(B-C)\nelif C <= A and A<=D:\n    print(D-A)    \nelse:\n    print(0)\n"}
{"label": 77, "index": 9928, "code": "a, b, c, d = map(int, input().split())\nif b <= c or d <= a:\n    print('0')\nelse:\n    if a < c:\n            print(min(b-c, d-c))\n    else:\n        print(min(d-a, b-a))"}
{"label": 77, "index": 9929, "code": "A,B,C,D = map(int,input().split())\nlower = max(A,C)\nupper = min(B,D)\n\nprint(max(0,upper-lower))"}
{"label": 77, "index": 9930, "code": "a, b, c, d = map(int, input().split())\nprint(max(0, min(b, d) - max(a, c)))\n"}
{"label": 77, "index": 9931, "code": "A, B, C, D = map(int, raw_input().split(\" \"))\n\nanswer = 0\nfor i in xrange(101):\n  if A <= i < B and C <= i < D:\n    answer += 1\n\nprint answer"}
{"label": 77, "index": 9932, "code": "arr=[int(x) for x in input().split()]\nif(arr[0]< arr[2]):\n    if(arr[2]<=arr[1]<=arr[3]):\n        print(arr[1]-arr[2])\n    elif(arr[1]<arr[2]):\n        print('0')\n    else:\n        print(arr[3]-arr[2])\nelse:\n    if(arr[0]<=arr[3]<=arr[1] ):\n        print(arr[3]-arr[0])\n    elif(arr[3]<arr[0]):\n        print('0')\n    else:\n        print(arr[1]-arr[0])\n"}
{"label": 77, "index": 9933, "code": "A,B,C,D = map(int,input().split())\nprint(max(0,min(D,B)-max(C,A)))"}
{"label": 77, "index": 9934, "code": "A,B,C,D = map(int, raw_input().split())\n\nstart=max(A,C)\nend=min(B,D)\n\nsec=end-start\n\nif sec<0:\n  print 0\nelse:\n  print sec"}
{"label": 77, "index": 9935, "code": "a,b,c,d = map(int,input().split())\nif a <= c <= b <= d:\n    print(b - c)\nelif c <= a <= d <= b:\n    print(d - a)\nelif a <= c <= d <= b:\n    print(d - c)\nelif c <= a <= b <= d:\n    print(b - a)\nelse:\n#elif b <= c or d <= a:\n    print(0)"}
{"label": 77, "index": 9936, "code": "A,B,C,D = list(map(int,input().split()))\n\n\nif A < C:\n  a = C\nelse:\n  a = A\n\nif B < D:\n  b = B\nelse:\n  b = D\n  \nif B <= C or D <= A:\n  res = 0\nelse:\n  res = (b-a)\n  \nprint(res)\n\n"}
{"label": 77, "index": 9937, "code": "\n\ndef main():\n    lst = list(map(int, input().split(' ')))\n    left = max(lst[0], lst[2])\n    right = min(lst[1], lst[3])\n    print(max(right-left, 0))\n\n\nif __name__ == '__main__':\n    main()\n"}
{"label": 77, "index": 9938, "code": "def main():\n    A, B, C, D = map(int, input().split())\n\n    sw = [0] * 101\n    sw[A] = 1\n    sw[B] = -1\n    sw[C] += 1\n    sw[D] += -1\n    for i in range(1, 101):\n        sw[i] = sw[i-1] + sw[i]\n\n    ans = sw.count(2)\n    print(ans)\n\nmain()\n"}
{"label": 77, "index": 9939, "code": "[a,b,c,d]=[int(i) for i in input().split()]\nif a<c:\n  x1=a\n  x2=c\n  y1=b\n  y2=d\nelse:\n  x1=c\n  x2=a\n  y1=d\n  y2=b\nif y1<x2:\n   c=0\nelif x2<=y1<=y2:\n   c=y1-x2\nelse:\n   c=y2-x2\nprint(c)"}
{"label": 77, "index": 9940, "code": "# -*- coding:utf-8 -*-\na,b,c,d = map(int, input().split())\nif min(b,d) >= max(a,c):\n    print(min(b,d)-max(a,c))\nelse:\n    print(0)"}
{"label": 77, "index": 9941, "code": "a, b, c, d = map(int,input().split())\nprint(max(0, min(b, d)-max(a, c)))"}
{"label": 77, "index": 9942, "code": "#ABC070B\n\na,b,c,d=map(int,raw_input().split())\nif a<=c<=b<=d:\n print b-c\nelif c<=a<=d<=b:\n print d-a\nelif a<=c<=d<=b:\n print d-c\nelif c<=a<=b<=d:\n print b-a\nelse:\n print 0\n"}
{"label": 77, "index": 9943, "code": "n = [0] * 100\na, b, c, d = map(int, input().split())\nwhile a < b:\n    n[a] += 1\n    a += 1\nwhile c < d:\n    n[c] += 1\n    c += 1\nprint(n.count(2))\n"}
{"label": 77, "index": 9944, "code": "if __name__ == '__main__':\n    A, B, C, D = map(int, input().split())\n\n    if B <= C or D <= A:\n        print(0)\n    else:\n        if A < C:\n            if B < D:\n                print(B-C)\n            else:\n                print(D-C)\n        elif A > C:\n            if B < D:\n                print(B-A)\n            else:\n                print(D-A)\n        else:\n            if B < D:\n                print(B-A)\n            else:\n                print(D-A)"}
{"label": 77, "index": 9945, "code": "A,B,C,D = map(int,input().split())\n\nif A > C:\n    A,B,C,D = C,D,A,B\n\nif C >= B:\n    print(\"0\")\nelif C < B and D > B:\n    print(B - C)\nelse:\n    print(D - C)\n"}
{"label": 77, "index": 9946, "code": "xa, ya, xb, yb = map(int, input().split())\n\nif xa > xb:\n    x = xa\nelse:\n    x = xb\nif ya > yb:\n    y = yb\nelse:\n    y = ya\nans = y - x\nif ans <= 0:\n    print(0)\nelse:\n    print(ans)\n"}
{"label": 77, "index": 9947, "code": "A,B,C,D = [int(i) for i in input().split()]\nprint(max(0,min(B,D) - max(A,C)))"}
{"label": 77, "index": 9948, "code": "A, B, C, D = input().split(' ')\nA = int(A)\nB = int(B)\nC = int(C)\nD = int(D)\nab = set([ x for x in range(A, B)])\ncd = set([ x for x in range(C, D)])\n#print(ab, cd)\nprint(len(ab & cd))\n#print(A,B,C,D)\n#print(abs((B-A) - C + ( D-C )))\n"}
{"label": 77, "index": 9949, "code": "# -*- coding:utf-8 -*-\n\nA,B,C,D = map(int,input().split())\n\nif(B<C or D<A):\n    print(\"0\")\nelse:\n    if(A>=C):\n        begin = A\n    else:\n        begin = C\n    if(D<=B):\n        end = D\n    else:\n        end = B\n    print(end-begin)\n"}
{"label": 77, "index": 9950, "code": "A,B,C,D = list(map(int, input().split()))\n\nif A > D or C > B:\n    print(0)\nelse:\n    print(min(B,D)-max(A,C))\n\n"}
{"label": 77, "index": 9951, "code": "A,B,C,D = map(int,input().split())\ntmp_A = [i for i in range(A,B)]\ntmp_B = [j for j in range(C,D)]\nprint(len(set(tmp_A)&set(tmp_B)))\n\n"}
{"label": 77, "index": 9952, "code": "def create_set(a, b, out):\n    for i in range(a, b):\n        out.add(i)\n\nparam = input()\na, b, c, d = param.split(' ')\na = int(a)\nb = int(b)\nc = int(c)\nd = int(d)\n\nalice = set()\nbob = set()\ncreate_set(a, b, alice)\ncreate_set(c, d, bob)\n\ntotal = alice & bob\n\ntime_total = 0\nfor i in total:\n    time_total += 1\n\nprint(time_total)\n"}
{"label": 77, "index": 9953, "code": "cnt=0\na,b,c,d=map(int,raw_input().split())\nt=[0 for i in range(101)]\nfor i in range(a,b+1):\n    t[i]=1\nfor j in range(c,d+1):\n    t[j]=t[j]+1\nfor i in range(101):\n    if t[i]==2: cnt=cnt+1\nif cnt==0:\n    print 0\nelse:\n    print cnt-1"}
{"label": 77, "index": 9954, "code": "a,b,c,d=map(int,input().split())\nprint(max(0,min(b,d)-max(a,c)))"}
{"label": 77, "index": 9955, "code": "a, b, c, d = map(int, raw_input().split())\n\nif a >= c:\n    tmpa = a\nelse:\n    tmpa = c\n\nif b >= d:\n    tmpb = d\nelse:\n    tmpb = b\n\nans = tmpb - tmpa\n\nif ans < 0:\n    print 0\nelse:\n    print ans\n\n"}
{"label": 77, "index": 9956, "code": "press = 0\na, b, c, d = map(int,input().split())\nfor i in range(101):\n    if a<=i<b and c<=i<d: press+= 1\nprint(press)"}
{"label": 77, "index": 9957, "code": "import sys\na, b, c, d = (int(i) for i in input().split())\nif b-c<=0 or d-a<=0 or b-a<=0 or d-c<=0:\n    print(0)\n    sys.exit()\nelse:\n    an = min(b-a,d-c,b-c,d-a)\n    print(an)\n"}
{"label": 77, "index": 9958, "code": "a,b,c,d=map(int,input().split())\nprint(max(0,-max(a,c)+min(b,d)))"}
{"label": 77, "index": 9959, "code": "s = raw_input()\nabcd = map(int, s.split())\nif abcd[0] > abcd[2]:\n\tbegin = abcd[0]\nelse:\n\tbegin = abcd[2]\nif abcd[1] > abcd[3]:\n\tend = abcd[3]\nelse:\n\tend = abcd[1]\n\nif (end - begin) >= 0:\n\tprint(end - begin)\nelse:\n\tprint(0)\n"}
{"label": 77, "index": 9960, "code": "a = list(map(int,input().split()))\ncounter = 0\nfor i in range (101):\n  if a[0] <= i <= a[1] and a[2] <= i <= a[3]:\n    counter += 1\nif counter > 0:\n  print ('{0}'.format(counter - 1))\nelse:\n  print ('{0}'.format(0))"}
{"label": 77, "index": 9961, "code": "a,b,c,d = map(int,input().split())\n\ns = max(a,c)\nt = min(b,d)\nd = t-s\nprint(d if d > 0 else 0)"}
{"label": 77, "index": 9962, "code": "a,b,c,d = map(int, input().split())\nif a==c and b==d:\n    print(abs(a-b))\nelif a==d or c==b:\n    print(0)\nelif a==c:\n    print(abs(b-a) if b<d else abs(d-c))\nelif b==d:\n    print(abs(b-a) if a>c else abs(d-c))\nelif a>c:\n    if a>d:\n        print(0)\n    elif a<d<b:\n        print(abs(a-d))\n    else:\n        print(abs(a-b))\nelse:\n    if c>b:\n        print(0)\n    elif c<b<d:\n        print(abs(c-b))\n    else:\n        print(abs(c-d))\n"}
{"label": 77, "index": 9963, "code": "alice = [False for _ in range(100)]\nbob = [False for _ in range(100)]\n\na,b,c,d = map(int,input().split(\" \"))\nfor i in range(a,b):\n    alice[i] = True\n\nfor i in range(c,d):\n    bob[i] = True\n\ncount = 0\nfor i in range(100):\n    if alice[i] and bob[i]:\n        count += 1\n\nprint(count)\n"}
{"label": 77, "index": 9964, "code": "a,b,c,d = map(int, input().split())\nif a < c:\n    start = c\nelse:\n    start = a\nif b < d:\n    end = b\nelse:\n    end = d\nif start >= end:\n    print(0)\nelse:\n    print(end - start)\n\n"}
{"label": 77, "index": 9965, "code": "A,B,C,D = map(int, raw_input().split())\nprint max(0, min(B,D)-max(A,C))\n"}
{"label": 77, "index": 9966, "code": "A, B, C, D = map(int, input().split())\nX = set(range(A, B))\nY = set(range(C, D))\nprint(len(X.intersection(Y)))\n"}
{"label": 77, "index": 9967, "code": "def Q2(x):\n    A, B, C, D = x[0], x[1], x[2], x[3]\n    if B <= C or D <= A:\n        return 0\n    else:\n        if A <= C:\n            return min(B, D) - C\n        else:\n            return min(B, D) - A\n          \nl = [int(i) for i in input().split()]\nprint(Q2(l))"}
{"label": 77, "index": 9968, "code": "A, B, C, D = map(int, raw_input().split())\nprint max(0, min(B,D)-max(A,C))"}
{"label": 77, "index": 9969, "code": "abcd = [int(i) for i in input().split()]\n\ntotal = (abcd[1] - abcd[0]) + (abcd[3] - abcd[2])\ngap = max(abcd) - min(abcd)\n\nif gap>=total:\n\tprint(0)\nelse:\n\tprint(total-gap)\n"}
{"label": 77, "index": 9970, "code": "a, b, c, d = map(int, input().split())\ns = max(a, c)\ne = min(b, d)\nprint(max(e-s, 0))"}
{"label": 77, "index": 9971, "code": "N=input().split()\nA=int(N[0])\nB=int(N[1])\nC=int(N[2])\nD=int(N[3])\n\nt=0\nif(C<A):\n if(D<=A):\n  t=0\n if(A<D<=B):\n  t=D-A\n if(B<D):\n  t=B-A\n\nif(A<C):\n if(B<=C):\n  t=0\n if(C<B<=D):\n  t=B-C\n if(D<B):\n  t=D-C\n\nif(A==C):\n if(B<=D):\n  t=B-A\n else:\n  t=D-A\n  \nprint(t)\n"}
{"label": 77, "index": 9972, "code": "a,b,c,d = map(int,input().split())\ns=0\nfor i in range(a,b):\n    for j in range(c,d):\n        if i == j:\n            s+=1\nprint(s)"}
{"label": 77, "index": 9973, "code": "# your code goes here\nA,B,C,D=(int(i) for i in input().split())\nif A<C:\n    A=C\nif B>D:\n    B=D\nB-=A\nif B<0:\n  print(0)\nelse:\n  print(B)"}
{"label": 77, "index": 9974, "code": "import sys\n\nstdin = sys.stdin\n\nni = lambda: int(ns())\nna = lambda: list(map(int, stdin.readline().split()))\nns = lambda: stdin.readline()\n\na,b,c,d = na()\nprint(max(0,min(b,d)-max(a,c)))\n"}
{"label": 77, "index": 9975, "code": "a, b, c, d = [int(x) for x in input().split()]\n\nres = 0\n\nfor i in range(101) :\n    if (a <= i and i < b) and (c <= i and i < d):\n        res += 1\n\nprint(res)\n    \n\n"}
{"label": 77, "index": 9976, "code": "a,b,c,d = map(int, raw_input().split())\ninit = max(a,c)\nterm = min(b,d)\nif term-init <= 0:\n  print \"0\"\nelse:\n  print (term-init)"}
{"label": 77, "index": 9977, "code": "A, B, C, D = list(map(int, input().split()))\nif A < C:\n    if B < D:\n        if B < C:\n            ans = 0\n        else:\n            ans = B-C\n    else:\n        ans = D-C\nelse:\n    if B < D:\n        ans = B-A\n    else:\n        if A < D:\n            ans = D-A\n        else:\n            ans = 0\nprint(ans)\n"}
{"label": 77, "index": 9978, "code": "a,b,c,d=map(int,input().split())\nif a>=c and b>=d and d>a:\n    print(d-a)\nelif a<=c and b<=d and b>c:\n    print(b-c)\nelif a<c and d<b:\n    print(d-c)\nelif c<a and b<d:\n    print(b-a)\nelse:\n    print(0)"}
{"label": 77, "index": 9979, "code": "a,b,c,d = map(int,input().split())\nif b<=c or d<=a:\n    print(0)\nelse:\n    print(min(b,d)-max(a,c))\n"}
{"label": 77, "index": 9980, "code": "a,b,c,d = map(int, input().split())\nAlice = set(range(a,b))\nBob = set (range(c,d))\nprint(len(Alice & Bob))\n"}
{"label": 77, "index": 9981, "code": "A, B, C, D = [int(i) for i in input().split()]\nprint(max(0, min(B,D) - max(A, C)))"}
{"label": 77, "index": 9982, "code": "a,b,c,d = map(int, input().split())\nAl = list(range(a,b))\nBo = list(range(c,d))\nprint(len(set(Al) & set(Bo)))"}
{"label": 77, "index": 9983, "code": "A,B,C,D=map(int,input().split())\na=[0]*101\nfor i in range(A,B):\n  a[i]+=1\nfor i in range(C,D):\n  a[i]+=1\nprint( sum([ 1 for x in a if x >= 2]) )"}
{"label": 77, "index": 9984, "code": "a, b, c, d = map(int, input().split())\n\nm = [0 for i in range(101)]\nn = [0 for i in range(101)]\n\ni = a\nwhile(True):\n    m[i] = 1\n    if(i == b):\n        break\n    i+=1\ni = c\nwhile(True):\n    n[i] = 1\n    if(i == d):\n        break\n    i+=1\n\nans = 0\nfor i in range(101):\n    if(m[i] * n[i] == 1):\n        ans+=1\n\nif(ans!=0):\n    ans-=1\n\nprint(ans)\n"}
{"label": 77, "index": 9985, "code": "A,B,C,D = map(int,input().split())\nprint(max(0,min(B,D)-max(A,C)))"}
{"label": 77, "index": 9986, "code": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n\n\ndef main():\n    A, B, C, D = map(int, input().split())\n\n    if A <= D and B >= C:\n        print(min(B,D) - max(A,C))\n    else:\n        print(0)\n\nif __name__ == \"__main__\": main()\n"}
{"label": 77, "index": 9987, "code": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport sys\nimport re\nimport math\nimport collections\nimport itertools\nimport functools\n\nDEBUG = True\nDEBUG = False\n\ndef dbg(*args):\n    if DEBUG:\n        print(\"DBG: \", file=sys.stderr, end=\"\")\n        print(*args, file=sys.stderr)\n\n\n\ndef main():\n    A, B, C, D = map(int, input().split())\n\n    alice = [A <= t < B for t in range(100)]\n    bob   = [C <= t < D for t in range(100)]\n\n    cnt = 0\n    for t in range(100):\n        if alice[t] and bob[t]:\n            cnt += 1\n\n    print(cnt)\n\nif __name__ == \"__main__\": main()\n"}
{"label": 77, "index": 9988, "code": "A, B, C, D = map(int, input().split())\nif A > C:\n    start = A\nelse:\n    start = C\nif B < D:\n    end = B\nelse:\n    end = D\nif end - start >= 0:\n    print(end - start)\nelse:\n    print(0)"}
{"label": 77, "index": 9989, "code": "a,b,c,d=map(int, input().split())\nprint(max(0,min(b,d)-max(a,c)))\n"}
{"label": 77, "index": 9990, "code": "A,B,C,D = map(int,input().split())\nprint(max(0, min(B,D) - max(A,C)))\n"}
{"label": 77, "index": 9991, "code": "a,b,c,d=map(int,input().split())\nprint(max(min(b,d)-max(a,c),0))"}
{"label": 77, "index": 9992, "code": "a,b,c,d=map(int,raw_input().split())\na=max(a,c)\nb=min(b,d)\nprint max(0,b-a)"}
{"label": 77, "index": 9993, "code": "#! -*- coding:utf-8 -*-\na,b,c,d = map(int,input().split())\nif d <= a or b <= c:\n    print(0)\nelif c <= a and (a <= d and d <= b):\n    print(d-a)\nelif (a <= c and c <= b) and (a <= d and d <= b):\n    print(d-c)\nelif (a <= c and c <= b) and b <= d:\n    print(b-c)\nelse:\n    print(b-a)\n"}
{"label": 77, "index": 9994, "code": "a,b,c,d = [int(i) for i in input().split()]\n\nans = 0\nfor i in range(101):\n    if i in range(a,b) and i in range(c,d):\n        ans += 1\n\nprint(ans)\n"}
{"label": 77, "index": 9995, "code": "A, B, C, D = map(int,input().split())\n\nif(B < C or D < A):\n\tprint(0)\n\nelse:\n\tif(A > C):\n\t\tE = A\n\telse:\n\t\tE = C\n\n\tif(B > D):\n\t\tF = D\n\telse:\n\t\tF = B\n\n\tprint(F - E)\n"}
{"label": 77, "index": 9996, "code": "nums = [int(x) for x in input().split()]\nnums = [ [nums[0],nums[1]] ,\n         [nums[2],nums[3]] ]\nN = 100\nimos = [0 for i in range(N+2)]\n\nfor num in nums:\n    a,b = num[0],num[1]-1\n    imos[a] += 1\n    imos[b+1] -= 1\n \nans = []\nj = 0\nfor i in imos:\n    ans.append(j+i)\n    j += i\n\nprint(ans.count(2))"}
{"label": 77, "index": 9997, "code": "a, b, c, d = map(int, input().split())\ne = max(a, c)\nf = min(b, d)\nprint(max(f-e,0))"}
{"label": 77, "index": 9998, "code": "a,b,c,d = map(int, raw_input().split())\ns = max(a,c)\ne = min(b,d)\nif s < e:\n    print e-s\nelse:\n    print 0\n"}
{"label": 77, "index": 9999, "code": "a,b,c,d = map(int,input().split())\nans = min(b,d) - max(a,c)\nif ans > 0:\n    print(ans)\nelse:\n    print(\"0\")"}
{"label": 77, "index": 10000, "code": "def ri(): return int(input())\ndef rli(): return list(map(int, input().split()))\ndef rls(): return list(input())\ndef pli(a): return \"\".join(list(map(str, a)))\ndef plis(a): return \" \".join(list(map(str, a)))\n\na, b, c, d = rli()\nprint(max(0, b-c-max(0, a-c) - max(0, b-d)))"}
{"label": 77, "index": 10001, "code": "a,b,c,d = list(map(int, input().split()))\n\nif a < c:\n    if d <= b:\n        print(d - c)\n    elif c <= b:\n        print(b - c)\n    else:\n        print(0)\nelse:\n    if b <= d:\n        print(b - a)\n    elif a <= d:\n        print(d - a)\n    else:\n        print(0)\n"}
{"label": 77, "index": 10002, "code": "a,b,c,d = map(int,input().split())\n\nif a<c:\n    if b>c:\n        if b>d:\n            print(d-c)\n        else:\n            print(b-c)\n    else:\n        print(0)\nelse:\n    if d>a:\n        if d>b:\n            print(b-a)\n        else:\n            print(d-a)\n    else:\n        print(0)\n"}
{"label": 77, "index": 10003, "code": "def Q2(x):\n    A, B, C, D = x[0], x[1], x[2], x[3]\n    time_lower = max(A, C)\n    time_upper = min(B, D)\n    return max(0, time_upper - time_lower)\n\nl = [int(i) for i in input().split()]\nprint(Q2(l))"}
{"label": 77, "index": 10004, "code": "# -*- coding: utf-8 -*-\n\"\"\"\nhttp://abc070.contest.atcoder.jp/tasks/abc070_b\n\"\"\"\n\n\ndef solve(A, B, C, D):\n    start = max(A, C)\n    end = min(B, D)\n    duration = end - start\n    if duration < 0:\n        return 0\n    else:\n        return duration\n\n\ndef main():\n    A, B, C, D = [int(x) for x in input().strip().split(' ')]\n    result = solve(A, B, C, D)\n    print(result)\n\n\nif __name__ == '__main__':\n    main()\n"}
{"label": 77, "index": 10005, "code": "a, b, c, d = map(int,input().split())\nprint(max(0, min(b, d)-max(a, c)))"}
{"label": 77, "index": 10006, "code": "a = list(map(int,input().split()))\nif a[2] < a[0]: a = [a[2], a[3], a[0],a[1]]\n\nif a[2] < a[1]:\n\tif a[3] < a[1]:\n\t\tprint(a[3]-a[2])\n\telse:\n\t\tprint(a[1]-a[2])\nelse:\n\tprint(0)"}
{"label": 77, "index": 10007, "code": "A, B, C, D = map(int, input().split())\nS1 = set()\nS2 = set()\nfor i in range(A, B):\n  S1.add(i)\nfor i in range(C, D):\n  S2.add(i)\nprint(len(S1.intersection(S2)))"}
{"label": 77, "index": 10008, "code": "# encoding:utf-8\n \ndef main():\n\ta, b, c, d = list(map(int, input().split()))\n\tst = max(a, c)\n\ten = min(b, d)\n\tdr = max(en - st, 0) \n\tprint(dr)\n\nif __name__ == '__main__':\n\tmain()\n"}
{"label": 77, "index": 10009, "code": "l=list(map(int,input().strip().split(' ')))\na=l[0]\nb=l[1]\nc=l[2]\nd=l[3]\nl1=[x for x in range(a,b+1)]\nl2=[x for x in range(c,d+1)]\nl3=[]\nans=0\nfor i in l2:\n    if i in l1:\n        ans+=1\nprint(max(0,ans-1))"}
{"label": 78, "index": 10010, "code": "def gcd(a, b):\n    if a < b:\n        a,b = b,a\n    while b > 0:\n        r = a % b\n        a,b = b,r\n    return a\n\ndef lcm(a, b):\n    if a == 0 or b == 0:\n        print(\"Error\")\n        return 0\n    return int(a * b // gcd(a, b))\n\ndef arrlcm(a):\n    alen = len(a)\n    if alen == 3:\n        return lcm(a[0], lcm(a[1], a[2]))\n    elif alen == 2:\n        return lcm(a[0], a[1])\n    elif alen == 1:\n        return a[0] # \u6700\u521d\u304b\u30891\u3064\n    elif alen == 0:\n        return 0\n    else:\n        return lcm(arrlcm(a[:alen//2]), arrlcm(a[alen//2:]))\n\ndef solve():\n    n = int(input())\n    print(arrlcm([int(input()) for _ in range(n)]))\n\n\nif __name__==\"__main__\":\n    solve()"}
{"label": 78, "index": 10011, "code": "N = input();\n\nfrom fractions import gcd\n\nans = 1\nfor i in range(N):\n    t = input()\n    g = gcd(ans, t)\n    ans = (t * ans) / g\n\nprint ans\n"}
{"label": 78, "index": 10012, "code": "import sys\nimport scipy as sp\nimport numpy\nimport math\nfrom fractions import Fraction\nfrom fractions import gcd\n\nN = input()\nt = []\nfor i in range(N):\n    t.append(input())\n\ndef lcm(a, b):\n  return a*b/gcd(a, b)\n\na=1\nfor j in range(N):\n    b=t[j]\n    c=lcm(a,b)\n    a=lcm(c,b)\n\nprint c"}
{"label": 78, "index": 10013, "code": "def gcd(a, b):\n  if b == 0:\n    return a\n  return gcd(b, a % b)   \n\nn=int(input())\np=1\nfor i in range(n):\n  m=int(input())\n  p=p*m//gcd(p,m)\nprint(int(p))"}
{"label": 78, "index": 10014, "code": "def lcm(a, b):\n    ax = a\n    bx = b\n    if a<b:\n        ax, bx = (bx, ax)\n    while True:\n        if ax%bx == 0:\n            gcd = bx\n            break\n        else:\n            c = bx\n            bx = ax%bx\n            ax = c\n    return a*b // gcd\n\nn = int(input())\nlst = []\nlst2 = []\nfor i in range(n):\n    a = int(input())\n    lst.append(a)\n\nwhile True:    \n    if n==1:\n        print(lst[0])\n        break\n    lst2.append(lcm(lst[0], lst[1]))\n    lst.pop(0)\n    lst.pop(0)\n    lst2.extend(lst)\n    if len(lst2)==1:\n        print(lst2[0])\n        break\n    lst.clear()\n        \n    lst.append(lcm(lst2[0], lst2[1]))\n    lst2.pop(0)\n    lst2.pop(0)\n    lst.extend(lst2)\n    if len(lst)==1:\n        print(lst[0])\n        break\n    lst2.clear()"}
{"label": 78, "index": 10015, "code": "#!usr/bim/python\n#! -*- coding: utf-8 -*-\n\nn = raw_input()\nn = int(n)\n\nt = []\n\nfor i in range(n):\n    temp = raw_input()\n    temp = int(temp)\n    t.append(temp)\n\ndef gcd(a,b):\n    r = a % b\n    while not r == 0:\n        a = b\n        b = r\n        r = a % b\n    return(b)\n\nx = 1\nfor i in range(n):\n    y = t[i]\n    gcdxy = gcd(x,y)\n    lcm = x*y/gcdxy\n    x = lcm\n\nprint x\n"}
{"label": 78, "index": 10016, "code": "\ndef gcd(a, b):\n  if b == 0:\n    return a\n  else:\n    return gcd(b, a % b)\n\nN=int(input())\nA = [ int(input()) for _ in range(N) ]\nans = A[0]\nfor x in A[1:]:\n  ans = ans * x // gcd(ans, x)\nprint(ans)\n"}
{"label": 78, "index": 10017, "code": "def HCF(a,b):\n    if a==0:\n        return b\n    return HCF(b%a,a)\nN = long(raw_input())\nx = long(raw_input())\nfor i in range(1,N):\n    y = long(raw_input())\n    x = (x*y)/HCF(x,y)\nprint x\n"}
{"label": 78, "index": 10018, "code": "def gcd(a,b):\n    if a > b:\n        t = a\n        a = b\n        b = t\n    if b % a == 0:\n        return a\n    else:\n        return gcd(b % a, a)\n\ndef lcm(a,b):\n    return a*b/gcd(a,b)\n\nn = int(raw_input())\nl = [int(raw_input()) for _ in range(n)]\nprint reduce(lcm, l)\n"}
{"label": 78, "index": 10019, "code": "def gcd(a,b):\n   while b:\n      a,b = b,a%b\n   return a\n\nr = 1\nnbClock = int(input())\nfor i in range(nbClock):\n   c = int(input())\n   g = gcd(r,c)\n   r = r * (c//g)\nprint(r)"}
{"label": 78, "index": 10020, "code": "def ri(): return int(input())\ndef rli(): return list(map(int, input().split()))\ndef rls(): return list(input())\ndef pli(a): return \"\".join(list(map(str, a)))\ndef plis(a): return \" \".join(list(map(str, a)))\n\nimport fractions\n\n\ndef lcm(a, b):\n  return (a * b) // fractions.gcd(a, b)\n\nN = ri()\nt = ri()\nfor i in range(N-1):\n  t = lcm(t, ri())\nprint(t)\n"}
{"label": 78, "index": 10021, "code": "def gcd(a, b):\n  if b == 0:\n    return a\n  else:\n    return gcd(b, a % b)\n \nN=int(input())\nA = [ int(input()) for _ in range(N) ]\nans = A[0]\nfor x in A[1:]:\n  ans = ans * x // gcd(ans, x)\nprint(ans)"}
{"label": 78, "index": 10022, "code": "N = input()\nT = [input() for _ in range(N)]\n\ndef gcd(a, b):\n    if b==0:\n        return a\n    else:\n        return gcd(b, a%b)\n\ndef lcm(a, b):\n    return a*b/gcd(a,b)\n\nans = 1\nfor t in T:\n    ans = lcm(ans, t)\nprint ans\n"}
{"label": 78, "index": 10023, "code": "def gcd(a,b):\n    #a=min(a,b)\n    #b=max(a,b)\n    while b:\n        a,b= b, a%b\n    return a\n\ndef lcm(a,b):\n    return a*b//gcd(a,b)\nT=[]\nN=int(input())\nfor i in range(N):\n    T.append(int(input()))\n\nans=1\nfor t in T:\n    ans=lcm(ans, t)\n\nprint(int(ans))"}
{"label": 78, "index": 10024, "code": "# encoding:utf-8\nfrom functools import reduce\n\ndef gcd(a, b):\n\twhile b:\n\t\ta, b = b, a % b\n\treturn a\n\ndef lcm(a, b):\n\treturn a * b // gcd(a, b)\n\ndef main():\n\tn = int(input())\n\tnums = [int(input()) for _ in range(n)]\n\n\tout = reduce(lcm, nums)\n\tprint(out)\n\nif __name__ == '__main__':\n\tmain()"}
{"label": 78, "index": 10025, "code": "def gcd(a,b):\n    while True:\n        r=a%b\n        if r==0:\n            return b\n        a, b = b, r\n\ndef gcf(a,b):\n    return a*b//gcd(a,b)\n\nN=int(input())\nans=1\nfor _ in range(N):\n    t=int(input())\n    ans=gcf(ans,t)\nprint(ans)\n\n"}
{"label": 78, "index": 10026, "code": "N = int(input())\n \na_list = []\nfor _ in range(N):\n    a_list.append(int(input()))\n \ndef gcd(a, b):\n    if a < b:\n        a, b = b, a\n    if b == 0:\n        return a\n    c = a % b\n    return gcd(b, c)\n \nres = 1\nfor i in range(N):\n    d = gcd(res, a_list[i])\n    res = res // d\n    res = res * a_list[i]\n \nprint(res) "}
{"label": 78, "index": 10027, "code": "def gcd(a, b):\n\twhile b:\n\t\ta, b = b, a % b\n\treturn a\n\ndef lcm(a, b):\n\treturn a * b // gcd (a, b)\n\n\nN = int(input())\t\t\t\t\t\t# 5\n\na = int(input())\nfor _ in range(N-1):\n\ta = lcm(a, int(input()))\n\n\nprint(a)\n"}
{"label": 78, "index": 10028, "code": "import sys\n\ndef gcd(a,b):\n    while b:\n        a,b=b,a%b\n    return a\n\ndef lcm(a,b):\n    return a*b // gcd(a,b)\n\nN = int(input())\nif(N==1):\n    print(int(input()))\n    sys.exit()\n\nT=[]\nT.append(int(input()))\n\nfor i in range(N-1):\n    T.append(int(input()))\n    T[i+1]=lcm(T[i+1],T[i])\nprint(T[N-1])\n\n"}
{"label": 78, "index": 10029, "code": "from fractions import gcd\ndef lcm(a, b):\n    return a * b // gcd (a, b)\ndef f():\n    n = int(input())\n    a=[]\n    l=1\n    for i in range(n):\n        s=(int(input()))\n        l=lcm(l,s)\n    print(l)\nf()"}
{"label": 78, "index": 10030, "code": "def gcd(a,b):\n    if b==0:\n        return a\n    return gcd(b,a%b)\n\ndef getlcm(a,b):\n    return (a*b)/gcd(a,b)\n    \nn=int(raw_input(''))\nx=int(raw_input(''))\nlcm=x\n\nfor i in range(1,n,1):\n    x=int(raw_input(''))\n    lcm=getlcm(lcm,x)\nprint lcm"}
{"label": 78, "index": 10031, "code": "N = int(input())\nt_list = [int(input()) for i in range(N)]\n\ndef gcd(a,b):\n\twhile b:\n\t\ta,b = b, a%b\n\treturn a\n\na = t_list[0]\nfor c in range(N-1):\n\tb = t_list[c+1]\n\ta =a*b//gcd(a,b)\n\nprint(a)"}
{"label": 78, "index": 10032, "code": "def GCD(a, b):\n    if a > b:\n        A = a\n        B = b\n    elif b > a:\n        A = b\n        B = a\n    else:\n        return a\n\n    r = A % B\n    while r != 0:\n        A = B\n        B = r\n        r = A % B\n\n    return B\n\n\ndef LCM(a, b):\n    g = GCD(a, b)\n    return a*b // g\n\n\ndef solve(): # ABC070C- Multiple Clocks\n    while 1:\n        try:\n            n = int(input())\n            T = []\n            for _ in range(n):\n                T.append(int(input()))\n\n            l = T[0]\n            for i in range(1, n):\n                l = LCM(l, T[i])\n\n            print(l)\n        except:\n            break\n            \n            \nsolve()"}
{"label": 78, "index": 10033, "code": "import fractions\nn = int(input())\nt = [int(input()) for i in range(n)]\n\nfor i in range(n - 1):\n    t[i + 1] = t[i] * t[i + 1] // fractions.gcd(t[i], t[i + 1])\n\nprint(t[n - 1])\n"}
{"label": 78, "index": 10034, "code": "n = int(input())\nT = []\nfor i in range(n):\n    T.append(int(input()))\n\nT = sorted(T)\ndef gcd(a, b):\n    while b > 0:\n        t = a\n        a = b\n        b = t%b\n    return(a)\n\ndef lcm(a, b):\n    return(int(a / int(gcd(a, b))) * b)\n\nLCM = T[0]\nfor i in range(n-1):\n    LCM = lcm(LCM, T[i+1])\n\nprint(LCM)\n"}
{"label": 78, "index": 10035, "code": "n=int(raw_input())\ndef gcd(a,b):\n  if b==0 :\n    return a\n  return gcd(b,a%b)\ny=1\nfor i in range(n) :\n  x=int(raw_input())\n  z=gcd(x,y)\n  y=x*y/z\nprint y"}
{"label": 78, "index": 10036, "code": "def gcd(a, b):\n    if a < b: b, a = a, b\n    if b == 0: return a\n    return gcd(b, a % b)\n\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\n\nN = int(input())\n\nret = 1\n\nfor _ in range(N):\n    ret = lcm(ret, int(input()))\n\nprint(ret)\n"}
{"label": 78, "index": 10037, "code": "def gcd(x, y):\n    y, x = sorted([x, y])\n    while y > 0:\n        t = y\n        y = x % y\n        x = t\n    return x\n\nn = int(input())\nt = [int(input()) for i in range(n)]\n\nlcm = 1\nfor i in range(n):\n    lcm = lcm * t[i] // gcd(lcm, t[i])\n\nprint(lcm)\n"}
{"label": 78, "index": 10038, "code": "import fractions\nimport functools\n\ndef lcm(a,b):\n\treturn a*b//fractions.gcd(a,b)\n\nn=int(input())\nt=[]\nfor i in range(n):\n\tt.append(int(input()))\nans=functools.reduce(lcm,t)\nprint(ans)"}
{"label": 78, "index": 10039, "code": "def gcd(a, b):\n    \"\"\"Return greatest common divisor using Euclid's Algorithm.\"\"\"\n    while b:      \n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    \"\"\"Return lowest common multiple.\"\"\"\n    return a * b // gcd(a, b)\n\nN = int(input())\nT = int(input())\nfor i in range(1, N):\n    T = lcm(int(input()), T)\nprint(T)"}
{"label": 78, "index": 10040, "code": "def gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n    \ndef lcm(a, b):\n    return a * b // gcd(a, b)\n    \ndef main():\n    N = int(input())\n    T = []\n\n    for i in range(N):\n        T.append(int(input()))\n    \n    while len(T) > 1:\n        T_tmp = []\n        for i in range(1, len(T)):\n            tmp = lcm(T[i-1], T[i])\n            T_tmp.append(tmp)\n        T = T_tmp\n    \n    print(T[0])\n    \nif __name__==\"__main__\":\n    main()"}
{"label": 78, "index": 10041, "code": "N = int(input())\nTs = [int(input()) for i in range(N)]\n \n# \u6700\u5927\u516c\u7d04\u6570\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n \n# \u6700\u5927\u516c\u500d\u6570\ndef lcm(a, b):\n    return a * b // gcd (a, b)\n \ndef solve(Ts):\n    if len(Ts) == 1:\n        print(Ts[0])\n    \n    else:\n        Ts_temp = []\n        for i in range(len(Ts)-1):\n            Ts_temp.append(lcm(Ts[i], Ts[i+1]))\n        solve(Ts_temp)\n \nsolve(Ts)"}
{"label": 78, "index": 10042, "code": "def gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\nn = int(input())\n\nres = 1\nfor i in range(n):\n    a = int(input())\n    g = gcd(res, a)\n    res = (res // g) * a\n\nprint(res)\n"}
{"label": 78, "index": 10043, "code": "import fractions;n=int(input());g=int(input())\nfor i in range(n-1):t=int(input());g=g*t//fractions.gcd(g,t)\nprint(g)"}
{"label": 78, "index": 10044, "code": "def gcd(a,b) :\n\tif a % b == 0 :\n\t\treturn b\n\treturn gcd(b,a%b)\n\ndef lcm(a,b) :\n\treturn a // gcd(a,b) * b\n\nN = int(input())\nres = 1\nfor i in range(N) :\n\tres = lcm(res, int(input()))\nprint(res)\n"}
{"label": 78, "index": 10045, "code": "import fractions\n\nN = int(raw_input())\nT = [int(raw_input()) for _ in xrange(N)]\n\nans = 1\n\nfor i in T:\n    ans = ans / fractions.gcd(ans, i) * i\n\nprint ans"}
{"label": 78, "index": 10046, "code": "from collections import defaultdict\nfrom itertools import product, groupby\nfrom math import pi\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right\nINF = 10 ** 10\n\n\n# a\u3068b\u306e\u6700\u5927\u516c\u7d04\u6570\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\n\n# a\u3068b\u306e\u6700\u5c0f\u516c\u500d\u6570\ndef lcm(a, b):\n    g = gcd(a, b)\n    return a // g * b\n\n\ndef main():\n    N = int(input())\n    t_list = list(sorted([int(input()) for _ in range(N)]))\n    ans = 1\n    for t in t_list:\n        ans = lcm(ans, t)\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"}
{"label": 78, "index": 10047, "code": "#! /usr/bin/env python3\n\n\ndef gcd(a, b):\n    if a < b : return gcd(b, a)\n    while b != 0:\n        t = a % b\n        a = b\n        b = t\n    return a\n\nN = int(input())\nT = sorted(set([int(input()) for x in range(N)]))\na = T[-1]\nfor i in T[:-1]:\n    a = (a * i) // gcd(a, i)\n\nprint(a)"}
{"label": 78, "index": 10048, "code": "N = int(input())\nresult = 1\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\n\nfor i in range(0, N):\n    num = int(input())\n    result = lcm(result, num)\nprint(int(result))\n"}
{"label": 78, "index": 10049, "code": "from fractions import gcd\nn = int(raw_input())\na = []\nfor i in range(n):\n    a.append(int(raw_input()))\nresult = a[0]\nfor i in range(1, n):\n    result = result * a[i] / gcd(result, a[i])\nprint result\n"}
{"label": 78, "index": 10050, "code": "n = int(input().strip())\nts = []\nfor _ in range(n):\n    ts.append(int(input().strip()))\n\ndef gcd(m, n):\n    while 1:\n        mod = m % n\n        if mod == 0:\n            return n\n        m, n = n, mod\n\ndef lcm(m, n):\n    return m * n // gcd(m, n)\n\nfrom functools import reduce\n\nprint(reduce(lcm, ts))\n\n"}
{"label": 78, "index": 10051, "code": "def gcd(a, b):\n\tif b == 0:\n\t\treturn a\n\treturn gcd(b, a % b)\nn = int(input())\na = [int(input()) for i in range(n)]\nans = 1\nfor i in a:\n\tans = ans * i // gcd(ans, i)\nprint(ans)\n\n"}
{"label": 78, "index": 10052, "code": "def gcd(a, b):\n    \"\"\"\u6700\u5927\u516c\u7d04\u6570(Greatest Common divisor)\u3092\u6c42\u3081\u308b.\n\n    \u30e6\u30fc\u30af\u30ea\u30c3\u30c9\u306e\u4e92\u9664\u6cd5\u306e\u5b9f\u88c5.\n    \u3042\u3042\u3042\u3042\n\n    Parameters\n    ----------\n    a : int\n        \u81ea\u7136\u6570.\n    b : int\n        \u81ea\u7136\u6570.\n\n    Returns\n    -------\n    int\n        \u6700\u5927\u516c\u7d04\u6570\n    \"\"\"\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    \"\"\"\u6700\u5c0f\u516c\u7d04\u6570(least common multiple)\u3092\u6c42\u3081\u308b.\n\n    Parameters\n    ----------\n    a : int\n        \u81ea\u7136\u6570.\n    b : int\n        \u81ea\u7136\u6570.\n\n    Returns\n    -------\n    int\n        \u6700\u5c0f\u516c\u500d\u6570\n    \"\"\"\n    return a * b // gcd(a, b)\n\nN = int(input())\nT = []\nfor i in range(N):\n    T.append(int(input()))\nans = 1\nfor t in T:\n    ans = lcm(ans, t)\nprint(ans)"}
{"label": 78, "index": 10053, "code": "# -*- coding: utf-8 -*-\n\"\"\"\n\"\"\"\n# \n\ndef gcd(x, y):\n    if x < y:\n        temp = x\n        x = y\n        y = temp\n    while y > 0:\n        r = x % y\n        x = y\n        y = r\n    return x\n\n\ndef lcm(x, y):\n    return x * y // gcd(x, y)\n\n\ndef solve(clocks):\n    temp_lcm = clocks[0]\n    for n in clocks[1:]:\n        temp_lcm = lcm(temp_lcm, n)\n    return temp_lcm\n\n\ndef main():\n    N = int(input())\n    clocks = [int(input()) for _ in range(N)]\n    result = solve(clocks)\n    print(result)\n\n\nif __name__ == '__main__':\n    main()\n    \n"}
{"label": 78, "index": 10054, "code": "from fractions import gcd\n\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\n\nn = int(input())\nts = {int(input()) for _ in range(n)}\na = ts.pop()\nfor b in ts:\n    a = lcm(a, b)\nprint(a)\n"}
{"label": 78, "index": 10055, "code": "# -*- coding: utf-8 -*-\n\n\ndef gcd(m, n):\n    return m if n == 0 else gcd(n, m % n)\n\n\ndef lcm(m, n):\n    return m * n // gcd(m,n)\n\n\ndef main():\n    n = int(input())\n    t = []\n    for i in range(n):\n        tmp = int(input())\n        t.append(tmp)\n    ans = t[0]\n    for i in t:\n        ans = lcm(ans, i)\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n"}
{"label": 78, "index": 10056, "code": "def lcm(a, b):\n    import fractions\n    return a * b // fractions.gcd(a, b)\n\ntotal = int(input())\nparam_list = [int(input()) for i in range(total)]\n\nresult = param_list[0]\nfor i in range(1, total):\n    result = lcm(result, param_list[i])\n\nprint(result)"}
{"label": 78, "index": 10057, "code": "#! -*- coding:utf-8 -*-\ndef gcd(a, b):\n    while b > 0:\n        a, b = b, a % b\n    return a\n \ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\nk = []\nfor i in range(n):\n    k.append(int(input()))\n\nif n == 1:\n    print(k[0])\nelse:\n    p = lcm(k[0],k[1])\n    for i in range(n):\n        p = lcm(p,k[i])\n    print(int(p))\n"}
{"label": 78, "index": 10058, "code": "def func(a,b):\n    return a if b==0 else func(b,a%b)\nn = int(input())\nnum = int(input())\nfor i in range(n-1):\n    d = int(input())\n    num = num*d//func(num,d)\nprint(num)"}
{"label": 78, "index": 10059, "code": "N=input()\nT = [input() for i in range(N)]\n#print T\n\ndef gcd(a, b):\n\twhile b:\n\t\ta, b = b, a % b\n\treturn a\n\n\ndef lcm(a, b):\n\treturn a * b // gcd (a, b)\n\n\nans=1\nfor i in range(len(T)):\n\tans=lcm(ans,T[i])\n\t#print \"ans::\"+str(ans)\n\nprint ans"}
{"label": 78, "index": 10060, "code": "n = int(input())\n\nlcm = 0\ngcd = 0\n\nfor i in range(n):\n    t = int(input())\n    if(i == 0):\n        lcm, gcd = t, t\n        continue\n    lcm = t\n    r = gcd % t\n    while(r!=0):\n        lcm = r\n        r = t % r\n    gcd *= t\n    gcd //= lcm\nprint(gcd)\n"}
{"label": 78, "index": 10061, "code": "n = int(input())\n\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\n\na, b = 1, 1\nfor i in range(n):\n    a = b\n    b = lcm(a, int(input()))\nprint(b)\n"}
{"label": 78, "index": 10062, "code": "import fractions\nN = int(input())\nlcm = 1\nfor i in range(N):\n    t = int(input())\n    lcm = lcm * t // fractions.gcd(lcm,t)\nprint(lcm)\n"}
{"label": 78, "index": 10063, "code": "from fractions import gcd\nfrom functools import reduce\n\ndef lcm(a, b):\n    return a*b // gcd(a, b)\n\nN = int(input())\nT = []\nfor _ in range(N):\n    T.append(int(input()))\nprint(reduce(lcm, T))"}
{"label": 78, "index": 10064, "code": "\nn = int(input())\nt = [ int(input()) for i in range(n)]\ndef gcd(a,b):\n    if a<b:a,b = b,a \n    if b==0:return a\n    else : return gcd(b,a%b)    \n\ndef lc(a,b):\n    return a //gcd(a,b) * b\n\ndef lcm(b):\n    ans = b[0]\n    for i in b:\n        ans = lc(ans,i)\n    return ans\nprint(lcm(t))\n\n"}
{"label": 78, "index": 10065, "code": "def gcd(a, b):\n\twhile b:\n\t\ta, b = b, a % b\n\treturn a\n\ndef lcm(a, b):\n\treturn a * b // gcd (a, b)\n\nnow = 0\ntime = int(input())\nfi = 1\nans = 1\nwhile now < time:\n    thi = int(input())\n    ans = lcm(ans, thi)\n    now += 1\nprint(ans)"}
{"label": 78, "index": 10066, "code": "def gcd(x, y):\n    if y==0:\n        return x\n    else:\n        return gcd(y, x%y)\n\ndef lcm(x, y):\n    return (x * y) // gcd(x, y)\n\nn = int(input())\na = [int(input()) for i in range(n)]\nr = 1\nfor i in a:\n    r = lcm(r, i)\nprint(r)\n"}
{"label": 78, "index": 10067, "code": "from sys import stdin\n\ndef gcd(a, b):\n  return a if b == 0 else gcd(b, a % b)\n  \ndef lcm(a, b):\n  return a * b // gcd(a,b)\n  \nN = int(input())\nT = [int(t) for t in stdin]\n\nanswer = 1\nfor t in T:\n  answer = lcm(answer, t)\n  \nprint(answer)"}
{"label": 78, "index": 10068, "code": "#coding=UTF-8\n#import math\nimport fractions\n\nN=int(input())\nans=1\nfor idx in range(0,N,1):\n    T=int(input())\n    ans=ans*T// fractions.gcd(ans,T)\n\nprint(ans)\n"}
{"label": 78, "index": 10069, "code": "def gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\n\ndef lcm(a, b):\n    return a * b // gcd (a, b)\n\n\nif __name__ == '__main__':\n    N = int(input())\n    T = []\n    for i in range(N):\n        T.append(int(input()))\n    tmp = T[0]\n    for j in range(N - 1):\n        tmp = lcm(tmp, T[j+1])\n    print(tmp)\n"}
{"label": 78, "index": 10070, "code": "def gcd(x,y):\n    a=max(x,y)\n    b=min(x,y)\n    return b if a%b==0 else gcd(b,a%b)\ndef lcm(x,y):\n    return x*y//gcd(x,y)\n\nN=int(input())\nans=1\nfor _ in range(N):\n    ans=lcm(ans,int(input()))\nprint (ans)"}
{"label": 78, "index": 10071, "code": "def gcd(x,y):\n    if y==0:\n        return x\n    return gcd(y, x % y)\ng = 1\nfor i in xrange(int(raw_input())):\n    w = int(raw_input())\n    g = g * w / gcd(g, w)\nprint g\n"}
{"label": 78, "index": 10072, "code": "def euclid(a,b):\n\tif b == 0:\n\t\treturn a\n\telse:\n\t\treturn euclid(b,a % b)\n\t\t\nn = int(input())\nt = []\nfor i in range(n):\n\tx = int(input())\n\tt.append(x)\n\nfor i in range(0,n-1):\n\tt[i+1] = t[i] * t[i+1] // euclid(t[i],t[i+1])\n\nprint(int(t[n-1]))"}
{"label": 78, "index": 10073, "code": "def gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nN = int(input())\n\nans = 1\nfor i in range(N):\n    ans = lcm(ans, int(input()))\n\nprint(ans)\n"}
{"label": 78, "index": 10074, "code": "n=input()\n\na=[0 for i in range(n)]\ndef gcd(num1,num2):\n    if num2 == 0:\n        return num1\n    else:\n        return gcd(num2,num1%num2)\n\ndef lcm(num1,num2):\n    tmp = gcd(num1,num2)\n    return num1*num2/tmp\n\nfor i in range(n):\n    a[i]=input()\nans=a[0]\nfor i in range(1,n):\n    ans=lcm(ans,a[i])\nprint ans"}
{"label": 78, "index": 10075, "code": "import math as m\nfrom functools import reduce\nn,T= int(input()),[]\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\nfor i in range(n):\n    T.append(int(input()))\ntmp = max(T)\nfor i in range(n):\n    if tmp % T[i] != 0:\n        tmp = T[i]//gcd(tmp, T[i])*tmp\n\nprint(tmp)\n\n"}
{"label": 78, "index": 10076, "code": "n = int(input())\nli = []\n\nfor i in range(n):\n    a = int(input())\n    li.append(a)\n    \ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\nwhile len(li) > 1:\n    a = li[0]\n    b = li[1]\n    li.pop(1)\n    li.pop(0)\n    ans = a * b // gcd(a, b)\n    li.append(ans)\n\nprint(li[0])\n"}
{"label": 78, "index": 10077, "code": "#!/usr/local/bin/python3.5 -tt\n\nimport fractions\nimport random\nimport sys\n\nif __name__ == '__main__':\n    def _(f):\n        for l in f:\n            for i in l.split():\n                yield int(i)\n\n    g = _(sys.stdin)\n\n    N = next(g)\n\n    lcm = 1\n\n    for i in range(N):\n        T = next(g)\n\n        lcm = lcm * T // fractions.gcd(lcm, T)\n\n    print(lcm)\n"}
{"label": 78, "index": 10078, "code": "def gcd(a,b):\n\tif b==0:return a\n\treturn gcd(b,a%b)\nans=1\t\nfor i in range(int(input())):\n\th=int(input())\n\tans = ans*h // gcd(ans,h)\t\nprint(ans)\t"}
{"label": 78, "index": 10079, "code": "def __gcd(x,y):\n    while(y!=0):\n        x,y=y,x%y\n    return x\n\ndef __lcm(x,y):\n    g = __gcd(x,y)\n    return (x//g)*y\n\n\nn = int(input())\nL = []\nfor i in range(n):\n    L.append(int(input()))\n\n#print(L)\na = L[0]\nfor i in range(1,n):\n    a = __lcm(a,L[i])\n\nprint(a)\n"}
{"label": 78, "index": 10080, "code": "def gcd(a,b):\n    if(a == 0):\n        return b\n    else:\n        return gcd(b % a, a)\n    \ndef lcmm(l,m):\n\n    prod = l * m\n\n    gcD = gcd(l,m)\n\n    return (prod // gcD)\n\nn = int(input().strip())\n\nlcm = 1\nfor i in range(n):\n    num = int(input().strip())\n    lcm = lcmm(lcm,num)\n    #print(lcm)\n\nprint(lcm)\n    \n"}
{"label": 78, "index": 10081, "code": "def gcd(a, b):\n    return b if a % b == 0 else gcd(b, a % b)\n\nN = input()\nT = [input() for i in range(N)]\nans = 1\nfor i in range(N):\n    v = gcd(max(ans, T[i]), min(ans, T[i]))\n    ans = ans * (T[i] / v)\nprint ans"}
{"label": 78, "index": 10082, "code": "def gcd(a, b):\n  while b:\n    a, b = b, a % b\n  return a\ndef lcm(a,b):\n  return a*b//gcd(a,b)\n\nN=int(input())\nT=[int(input()) for i in range(N)]\nT.sort()\nG=T[0]\nfor i in range(N):\n  G=lcm(G,T[i])\nprint(G)"}
{"label": 78, "index": 10083, "code": "# -*- coding: utf-8 -*-       \n\nn = int(input())\nt = [int(input()) for i in range(n)]\n\n\ndef gcd(a, b):\n\twhile b:\n\t\ta, b = b, a % b\n\treturn a\n\ndef lcm(a, b):\n\treturn a * b // gcd (a, b)\n\ntmplcm = t[0]\nfor i in range(1,n):\n    tmplcm = lcm(tmplcm,t[i])\nprint(tmplcm)"}
{"label": 78, "index": 10084, "code": "def gcd(a, b):\n    while b > 0:\n        a, b = b, a % b\n    return a\n\n\ndef lcm(a, b):\n    return a*b//gcd(a, b)\n\n\nN = int(input())\nT = [int(input()) for i in range(N)]\n\nT.sort(reverse=True)\nans = 1\nfor i in T:\n    ans = lcm(ans, i)\nprint(ans)\n"}
{"label": 78, "index": 10085, "code": "from fractions import gcd\n\nN = int(input())\nT = []\nfor i in range(N):\n  T.append(int(input()))\n\nres = 1\nfor t in T:\n  res = res // gcd(res, t) * t\nprint(res)"}
{"label": 78, "index": 10086, "code": "def gcd(a,b):\n    if b==0:return a\n    return gcd(b,a%b)\ndef lcm(a,b):\n    return a*b/gcd(a,b)\nn=int(raw_input())\nans=-1\nwhile n>0:\n    n-=1\n    if ans==-1:\n        ans=int(raw_input())\n    else:\n        x=int(raw_input())\n        ans=lcm(ans,x)\nprint ans\n"}
{"label": 78, "index": 10087, "code": "from functools import reduce\n\n#def gcd(a, b):\n#    while b:\n#        a, b = b, a % b\n#    return a\n\ndef gcd(m, n):\n    r = m % n\n    return gcd(n, r) if r else n\n\ndef lcm(a, b):\n    return a * b // gcd(a,b)\n\nN = int(input())\nTs = []\nc = 1\nfor i in range(N):\n    c = lcm(c, int(input()))\n\nprint(int(c))\n"}
{"label": 78, "index": 10088, "code": "def main():\n    N = int(input())\n    T = tuple(int(input()) for _ in range(N))\n\n    lcm_ = T[0]\n    for i in T:\n        lcm_ = lcm(i, lcm_)\n\n    print(lcm_)\n\ndef gcd(a, b):\n    if a < b:\n        a, b = b, a\n    r = a % b\n    if r == 0:\n        return b\n    else:\n        a = b\n        b = r\n        return gcd(a, b)\n\ndef lcm(a, b):\n    c = gcd(a, b)\n    return a * b // c\n\nmain()\n"}
{"label": 78, "index": 10089, "code": "def gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\n#def gcd(m, n):\n#    r = m % n\n#    return gcd(n, r) if r else n\n\ndef lcm(a, b):\n    return a * b // gcd(a,b)\n\nN = int(input())\nTs = []\nc = 1\nfor i in range(N):\n    c = lcm(c, int(input()))\n\nprint(int(c))\n"}
{"label": 78, "index": 10090, "code": "def gcd(m,n):\n  if n == 0:\n    return m\n  else:\n    r = m % n\n    return gcd(n,r)\n  \ndef LCM(num1,num2):\n  return (num1/gcd(num2,num1))*num2\n\nN = input()\nl = []\nfor i in range(N):\n  l.append(input())\nl.sort()\nlcm = l[N-1]\nfor i in range(N-1):\n  lcm = LCM(l[N-2-i],lcm)\nprint lcm"}
{"label": 78, "index": 10091, "code": "def gcd(a, b):\n\twhile b:\n\t\ta, b = b, a%b\n\treturn a\ndef lcm(a, b):\n\treturn a*b // gcd(a, b)\nn = int(input())\nls = []\nfor i in range(n):\n    ls.append(int(input()))\nresult = ls[0]\nfor i in ls[1:]:\n    result = lcm(i,result)\nprint(result)\n\n"}
{"label": 78, "index": 10092, "code": "def Q3(x):\n    def gcd(a, b):\n        if b > a:\n            a, b = b, a\n        while b > 0:\n            a, b = b, a % b\n        return a\n\n    def lcm(a, b):\n        return (a * b) // gcd(a, b)\n\n    N = x[0]\n    lst = x[1:]\n    if N == 1:\n        return lst[0]\n    else:\n        l = lcm(lst[0], lst[1])\n        for x in lst:\n            l = lcm(l, x)\n        return l\n\nn = int(input())\nt = [int(input()) for i in range(n)]\nt.insert(0,n)\nprint(Q3(t))"}
{"label": 78, "index": 10093, "code": "from fractions import gcd\n\nN = int(input())\nT = []\nfor i in range(N):\n    T.append(int(input()))\n# \u6700\u5c0f\u516c\u500d\u6570\u304c\u6b32\u3057\u3044\nans = 1\nfor i in T:\n    ans = int(ans * i //gcd(ans, i))\nprint(ans)\n"}
{"label": 78, "index": 10094, "code": "import fractions\n\ndef lcm(x,y):\n    return x*y//fractions.gcd(x,y);\n\nn = int(input())\nans = 1\nfor _ in range(n):\n    t = int(input())\n    ans = lcm(ans,t)\n\nprint(ans)\n"}
{"label": 78, "index": 10095, "code": "N=int(input())\nT=[]\nfor i in range(N):\n    T.append(int(input()))\ndef gcd(a,b):\n    if b>a:\n        a,b=b,a\n    while b>0:\n        a,b=b,a%b\n    return a\ndef lcm(a,b):\n    return a*b//gcd(a,b)\nif N==1:\n    print(T[0])\nelif N==2:\n    print(lcm(T[0],T[1]))\nelse:\n    l=[T[0]]\n    for i in range(N-1):\n      l.append(lcm(l[i],T[i+1]))\n    print(l[-1])"}
{"label": 78, "index": 10096, "code": "\ndef gcd(a, b):\n    if a < b:\n        c = a\n        a = b\n        b = c\n\n    r = a % b\n\n    while r > 0:\n        a = b\n        b = r\n        r = a % b\n\n    return b\n\n    # ll gcd(ll a, ll b) {\n    #   if (a < b)\n    #     swap(a, b);\n    #   ll r = a % b;\n    #\n    #   while (r) {\n    #     a = b;\n    #     b = r;\n    #     r = a % b;\n    #   }\n    #\n    #   return b;\n    # }\n\n\nN = int(input())\na = []\nfor i in range(N):\n    a.append(int(input()))\n# a = list(map(int, input().split()))\n\nans = a[0]\n\nfor i in range(N):\n    if i == 0:\n        continue\n\n    g = gcd(ans, a[i])\n    ans = ans * a[i] // g\n\nprint(ans)\n"}
{"label": 78, "index": 10097, "code": "\nfrom functools import reduce\n\n\ndef gcd(a, b):\n    while b != 0:\n        a, b = b, a % b\n\n    return a\n\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\n\ndef main():\n    n = int(input())\n\n    ts = []\n    for _ in range(n):\n        ts.append(int(input()))\n\n    print(reduce(lcm, ts))\n\n\nif __name__ == \"__main__\":\n    main()\n"}
{"label": 78, "index": 10098, "code": "# -*- coding: utf-8 -*-\nfrom functools import reduce\nN = int(input())\nary = []\nfor i in range(N):\n    tmp = input()\n    ary.append(int(tmp))\n\n\ndef GCD(a, b):\n    if a < b:\n        a, b = b, a\n\n    while b > 0:\n        a, b = b, a % b\n    return a\n\n\ndef LCM(a, b):\n    return a * b // GCD(a, b)\n\n\nprint(reduce(LCM, ary))\n"}
{"label": 78, "index": 10099, "code": "def gcd(a, b):\n\twhile b:\n\t\ta, b = b, a % b\n\treturn a\n\ndef lcm(a, b):\n\treturn a * b // gcd (a, b)\n\nn = int(input())\nl = int(input())\n\ni = 1\n\nwhile i < n:\n    l = lcm(l, int(input()))\n    i = i + 1\n\nprint(l)\n"}
{"label": 78, "index": 10100, "code": "from functools import reduce\n\ndef gcd(a, b):\n  if b == 0:\n    return a\n  return gcd(b, a%b)\n\ndef lcm(a, b):\n  return a * b // gcd(a, b)\n\nn = int(input())\nt = [int(input()) for i in range(n)]\n\nans = reduce(lcm, t)\nprint(ans)"}
{"label": 78, "index": 10101, "code": "def calc(A,B):\n    C = A * B\n    while B != 0:\n        A,B = B, A % B\n    return C // A\n    \nN = int(input())\nans = 1\nfor i in range(N):\n    ans = calc(ans, int(input()))\nprint(ans)\n\n"}
{"label": 78, "index": 10102, "code": "def pgcd(a,b):\n  while b:\n    a,b = b,a%b\n  return a\n\nret = 1\nN = int(input())\nfor _ in range(N):\n  T = int(input())\n  p = pgcd(ret,T)\n  ret *= (T//p)\n\nprint(ret)"}
{"label": 78, "index": 10103, "code": "import sys\n\nstdin = sys.stdin\n\nni = lambda: int(ns())\nna = lambda: list(map(int, stdin.readline().split()))\nns = lambda: stdin.readline()\n\ndef gcd(a, b):\n    while(b > 0):\n        c = a % b\n        a = b; b = c\n    return a\n\nn = ni()\ng = 0\nfor i in range(n):\n    v = ni()\n    if g == 0:\n        g = v\n    else:\n        g = g//gcd(g,v)*v\nprint(g)"}
{"label": 78, "index": 10104, "code": "n = int(input())\n\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a%b\n    return a\n\ndef lcm(a, b):\n    return a*b // gcd(a, b)\n\nans = 1\n\nfor _ in range(n):\n    ans = lcm(ans, int(input()))\n\nprint(ans)\n"}
{"label": 78, "index": 10105, "code": "def gcd(*numbers):\n    \"\"\"Return the greatest common divisor of the given integers\"\"\"\n    from fractions import gcd\n    return reduce(gcd, numbers)\n\n# Least common multiple is not in standard libraries? It's in gmpy, but this is simple enough:\n\ndef lcm(*numbers):\n    \"\"\"Return lowest common multiple.\"\"\"    \n    def lcm(a, b):\n        return (a * b) // gcd(a, b)\n    return reduce(lcm, numbers, 1)\nl = []\nfor x in range(int(raw_input())):\n\tl.append(int(raw_input()))\nans = 1\nfor x in l:\n\tans = lcm(ans,x)\nprint(ans)"}
{"label": 78, "index": 10106, "code": "import sys\nfrom collections import deque\nimport copy\n\nfrom math import *\ndef get_read_func(fileobject):\n    if fileobject == None :\n        return raw_input\n    else:\n        return fileobject.readline\n\ndef gcd(a, b):\n    if a < b:\n        z = a\n        a = b\n        b = z\n    while b:\n\t\ta, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd (a, b)\n\ndef main():\n    if len(sys.argv) > 1:\n        f = open(sys.argv[1])\n    else:\n        f = None\n    read_func = get_read_func(f);\n    input_raw = read_func().strip().split()\n    [N] = [int(input_raw[0])]\n    T = []\n    for i in range(N):\n        input_raw = read_func().strip().split()\n        T.append(int(input_raw[0]))\n\n    T.sort()\n\n    lcm_data = T[0]\n    for i in range(1, N):\n        lcm_data = lcm(lcm_data, T[i])\n    print lcm_data\n\n\nif __name__ == '__main__':\n    main()\n"}
{"label": 78, "index": 10107, "code": "N = int(input())\n\ndef lcm(x, y):\n    M = x * y\n    if x < y:\n        x, y = y, x\n    while y > 0:\n        x, y = y, x % y\n    return M // x\nnum = []\nfor _ in range(N):\n    num.append(int(input()))\nM = num[0]\nfor i in range(N):\n    M = lcm(M, num[i])\nprint(M)\n"}
{"label": 78, "index": 10108, "code": "def gcd(a,b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n    \nN = int(input())\n \na = int(input())\nb = 0\nfor i in range(N-1):\n    b = int(input())\n    a = (a*b) // gcd(a,b)\n    \nprint(a)"}
{"label": 78, "index": 10109, "code": "N = int(input())\nfrom fractions import gcd\nfrom functools import reduce\n\ndef lcm(a, b): \n    return abs(a * b) // gcd(a,b)\nI = [int(input()) for n in range(N)]\nprint(int(reduce(lcm, I, 1)))"}
{"label": 78, "index": 10110, "code": "def gcd(m, n):\n    r = m % n\n    return gcd(n, r) if r else n\ndef lcm(m, n):\n    return m*n//gcd(m, n)\nn = int(input())\nans = 1\nfor i in range(n):\n    ans = lcm(ans, int(input()))\nprint(\"%d\" % ans)\n"}
{"label": 78, "index": 10111, "code": "def gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\n\nn = int(input())\nn_set = set([])\n\nfor i in range(n):\n    tmp = int(input())\n    n_set.add(tmp)\n\nans = 1\nfor i in range(len(list(n_set))):\n    ans = lcm(ans, list(n_set)[i])\n\nprint(ans)\n"}
{"label": 78, "index": 10112, "code": "def gcd(a,b):\n    if b==0:\n        return(a)\n    else:\n        return(gcd(b,a%b)) \ndef lcm(a,b):\n    return a*b//gcd(a,b)\n\nn=int(input())\ncur=0\nif n==1:\n    cur=int(input())\nelse:\n    cur=lcm(int(input()),int(input()))\n    for _ in range(n-2):\n        cur = lcm(int(input()),cur)\nprint(cur)\n"}
{"label": 78, "index": 10113, "code": "\ndef gcd(x, y):\n    while y != 0:\n        x, y = y, x % y\n    return x\n\nN = int(input())\nT = []\nfor i in range(N):\n    T.append(int(input()))\n\nS = set(T)\nres = 1\nfor j in S:\n    res = res * j // gcd(res, j)\n    \nprint(int(res))\n"}
{"label": 78, "index": 10114, "code": "#Multiple Clocks\nN = int(input())\n\nT = []\nfor i in range(N):\n    T.append(int(input()))\n\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a    \n\ndef lcm(a, b):\n    return a * b // gcd (a, b)\n\na = T[0]\n\nfor Ti in T[1:]:\n    a = lcm(a, Ti)\n\nprint(a)\n    "}
{"label": 78, "index": 10115, "code": "#ABC070C\n\ndef gcd(a, b):\n while b:\n  a, b = b, a % b\n return a\n\ndef lcm(a, b):\n return a * b // gcd (a, b)\n\nn=int(raw_input())\nres=1\nfor i in xrange(n):\n temp=int(raw_input())\n res=lcm(res,temp)\nprint res\n"}
{"label": 78, "index": 10116, "code": "import decimal\n\n\ndef euclid(a, b):\n    if b == 0:\n        return a\n    else:\n        return euclid(b, a % b)\n\n\ndef lcm(a, b):\n    g = euclid(a, b)\n    # print(g)\n    # print(a * b)\n\n    return a * b // g\n\n\nif __name__ == '__main__':\n    N = int(input())\n    ans = 1\n    for i in range(N):\n        T = int(input())\n        ans = lcm(ans, T)\n\n    print(ans)\n"}
{"label": 78, "index": 10117, "code": "from fractions import gcd\ndef lcm(a,b): return a*b//gcd(a,b)\n\nn = int(input())\nres = 1\nfor i in range(n):\n    t = int(input())\n    res = lcm(res, t)\nprint(res)"}
{"label": 78, "index": 10118, "code": "def gcd(x, y):\n    while y != 0:\n        x, y = y, x%y\n    return x\n    \ndef lcm(x, y):\n    return x * y // gcd(x, y)\n    \nN = int(input())\nT = []\nfor i in range(N):\n    T.append(int(input()))\ntemp = T[0]\nfor i in range(N-1):\n    temp = lcm(temp, T[i+1])\nprint(temp)"}
{"label": 78, "index": 10119, "code": "n = int(input())\nli = []\n \nfor i in range(n):\n    a = int(input())\n    li.append(a)\n    \ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n \nwhile len(li) > 1:\n    a = li[0]\n    b = li[1]\n    li.pop(1)\n    li.pop(0)\n    ans = a * b // gcd(a, b)\n    li.append(ans)\n \nprint(li[0])"}
{"label": 78, "index": 10120, "code": "def gcd(a,b):\n    while b > 0:\n        r = a % b\n        a = b\n        b = r\n    return a\n\nn = int(input())\nx = int(input())\nfor _ in range(n-1):\n    i = int(input())\n    x = (x * i) // gcd(x,i)\n\nprint(x)\n"}
{"label": 78, "index": 10121, "code": "N = int(raw_input())\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\nT = int(raw_input())\nif N == 1:\n    print T\nelse:\n    f = T\n    for i in xrange(1, N):\n        T = int(raw_input())\n        g = gcd(f, T)\n        f = f / g * T\n    print f"}
{"label": 78, "index": 10122, "code": "def gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\nn = int(input())\nt = [int(input()) for i in range(n)]\n\n\nfor i in range(n - 1):\n    t[i + 1] = t[i] * t[i + 1] // gcd(t[i], t[i + 1])\n\nprint(t[n - 1])\n"}
{"label": 78, "index": 10123, "code": "N=int(input())\narr=[]\nfor a in range(N):\n    a=int(input())\n    if a in arr:\n        continue\n    arr.append(a)\n\ndef gcf(a,b):\n    if b==0:return a\n    return gcf(b,a%b)\ndef lcm(a,b):\n    return a*b//gcf(a,b)\n\ntemp=1\nfor i in range(len(arr)):\n    temp=lcm(temp,arr[i])\nprint(temp)"}
{"label": 78, "index": 10124, "code": "\ndef ggt(a, b):\n    if b == 0:\n        return a\n\n    return ggt(b, a % b)\n\nN = int(input())\n\nerg = int(input())\n\nfor i in range(N-1):\n    t = int(input())\n\n    g = ggt(erg, t)\n    erg = (erg // g) * t\n\nprint(erg)"}
{"label": 78, "index": 10125, "code": "def gcd(a,b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b,a%b)\n\ndef lcm(a,b):\n    g = gcd(a,b)\n    return (a * b) // g\n\nN = int(input())\n\nresult = 1\nfor i in range(N):\n    result = lcm(result,int(input()))\n\nprint(result)\n"}
{"label": 78, "index": 10126, "code": "def gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n \ndef lcm(a, b):\n    return a * b // gcd(a,b)\nN=int(input())\nTs=[]\nc=1\nfor i in range(N):\n c=lcm(c,int(input()))\nprint(int(c))"}
{"label": 78, "index": 10127, "code": "N = int(input())\nT = []\nfor _ in range(N):\n    T.append(int(input()))\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a%b\n    return a\n\ntmp = max(T)\nfor i in range(N):\n    if tmp % T[i] != 0:\n        tmp = T[i]//gcd(tmp, T[i])*tmp\n\nprint(int(tmp))"}
{"label": 78, "index": 10128, "code": "import fractions\n\ndef lcm(a,b):\n    g = fractions.gcd(a,b)\n    return (a * b)//g\n\nn = int(input())\n\nans = 1\nfor i in range(n):\n    t = int(input())\n    ans = lcm(ans,t)\n\nprint(ans)"}
{"label": 78, "index": 10129, "code": "def gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n \ndef lcm(a, b):\n    return a * b // gcd(a,b)\n \nN = int(input())\nTs = []\nc = 1\nfor i in range(N):\n    c = lcm(c, int(input()))\n \nprint(int(c))\n"}
{"label": 78, "index": 10130, "code": "def gcd(a, b):\n    while b:\n        a, b = b, a%b\n    return a\n\ndef lcm(a, b):\n    return a*b/gcd(a, b)\n\nN = int(raw_input())\nT = [int(raw_input()) for i in xrange(N)]\n\nprint reduce(lcm, T)\n"}
{"label": 78, "index": 10131, "code": "import fractions\n        \ndef lcm(a, b):\n    return a * b // fractions.gcd(a, b)\n\nn = int(input())\n\nans = 1\nfor i in range(n):\n    ans = lcm(ans, int(input()))\n\nprint(ans)"}
{"label": 78, "index": 10132, "code": "N = int(input())\nT = [int(input()) for _ in range(N)]\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nl = 1\n\nfor i in T:\n    l = lcm(l, i)\n\nprint(l)"}
{"label": 78, "index": 10133, "code": "\nN = int(input())\nTs = [int(input()) for i in range(N)]\n\n# \u6700\u5927\u516c\u7d04\u6570\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\n# \u6700\u5927\u516c\u500d\u6570\ndef lcm(a, b):\n    return a * b // gcd (a, b)\n\ndef solve(Ts):\n    if len(Ts) == 1:\n        print(Ts[0])\n    \n    else:\n        Ts_temp = []\n        for i in range(len(Ts)-1):\n            Ts_temp.append(lcm(Ts[i], Ts[i+1]))\n        solve(Ts_temp)\n\nsolve(Ts)"}
{"label": 78, "index": 10134, "code": "from fractions import gcd\n \ndef lcm(a, b):\n    return a * b // gcd (a, b)\n\ndef nlcm(nums):\n    d = 1\n    for num in nums:\n        d = lcm(d,num)\n    return d\n \nif __name__ == '__main__':\n    N = int(input())\n    nums = []\n    for i in range(N):\n        nums.append(int(input()))\n \n    print(nlcm(nums))"}
{"label": 78, "index": 10135, "code": "import sys\n\ndef scp(a, b):\n    if b > a:\n        tmp_a = a\n        a = b\n        b = tmp_a\n    while b:\n        r = a % b\n        a = b\n        b = r\n    return a\n    #for i in xrange(100000, 2, -1):\n    #    if a % i == b % i == 0:\n    #        return a * b / i\n    #return a * b\n\nN = int(raw_input())\narray = []\nfor i in range(N):\n    array.append(int(raw_input()))\n\narray.sort()\n\n#if array[-1] > pow(10, 9):\n#    print array[-1]\n#    sys.exit(0)\n\nresult = array[0]\nfor i in array[1:]:\n    result = result / scp(result, i) * i\nprint result"}
{"label": 78, "index": 10136, "code": "# -*- coding:utf-8 -*-\ndef euc(a,b):\n    if b == 0:\n        return a\n    else:\n        return euc(b, a%b)\n\nN = int(input())\nT = [ int(input()) for tmp in range(N) ]\nif len(T) > 1:\n    a = T.pop()\n    b = T.pop()\n    lcm = a*b//euc(a,b)\n    for tmp in T:\n        lcm = tmp*lcm//euc(tmp,lcm)\n    print(lcm)\nelse:\n    print(T.pop())"}
{"label": 78, "index": 10137, "code": "n = int(input())\nres = 1\ndef gcd(x, y):\n    if x % y == 0:\n        return y\n    return gcd(y, x %y)\nfor i in range(n):\n    x = int(input())\n    res = res * x // gcd(res, x)\nprint(res)\n"}
{"label": 78, "index": 10138, "code": "from fractions import gcd\nn = int(input())\nx = 1\n\nfor i in range(n):\n  t = int(input())\n  g = gcd(t,x)\n  t //= g\n  x *= t\n\nprint(x)"}
{"label": 78, "index": 10139, "code": "import fractions\nn = int(raw_input())\nt = list()\nfor _ in range(n):\n    t.append(int(raw_input()))\nresult = t[0]\nfor i in range(1, n):\n    result = ((t[i] * result) / fractions.gcd(t[i], result))\nprint(result)\n"}
{"label": 79, "index": 10140, "code": "import math\nx,a,b = map(int,input().split())\nif (abs(x-a)>abs(x-b)):\n    print(\"B\")\nelse:\n    print(\"A\")\n\n"}
{"label": 79, "index": 10141, "code": "x, a, b = [int(x) for x in input().split()]\n\nif abs(x-a) < abs(x-b):\n    print('A')\nelse:\n    print('B')\n"}
{"label": 79, "index": 10142, "code": "x,a,b = map(int, raw_input().split())\nif abs(x-a) < abs(x-b):\n    print 'A'\nelse:\n    print 'B'\n"}
{"label": 79, "index": 10143, "code": "location_list = list(map(int, input().split()))\n\nax_length = abs(location_list[0] - location_list[1])\nbx_length = abs(location_list[0] - location_list[2])\n\nif ax_length < bx_length:\n    print('A')\nelse:\n    print('B')\n"}
{"label": 79, "index": 10144, "code": "import math\n\n\nx = list(map(int, input().split()))\n\nif(math.fabs(x[1]-x[0])-math.fabs(x[2]-x[0]) > 0):\n    print('B')\n    quit()\nelse:\n    print('A')\n    quit()\n\n\nquit()"}
{"label": 79, "index": 10145, "code": "\nx,a,b = list(map(int,input().strip().split()))\n\n\ndisA = abs(x-a)\ndisB = abs(x-b)\n\nres = 'A' if disA<disB else 'B'\nprint(res)\n"}
{"label": 79, "index": 10146, "code": "import numpy as np\n\nl = map(int, raw_input().split())\nx=l[0]\na=l[1]\nb=l[2]\n\np=abs(x-a)\nq=abs(x-b)\n\nif(p<=q):\n    print \"A\"\nelse:\n    print \"B\"\n\n"}
{"label": 79, "index": 10147, "code": "x, a, b = (int(i) for i in input().split())\nif abs(x-a) < abs(x-b):\n    print('A')\nelse:\n    print('B')"}
{"label": 79, "index": 10148, "code": "x,a,b=map(int,input().split())\nA=abs(x-a)\nB=abs(x-b)\nif A<B: print(\"A\")\nelse: print(\"B\")"}
{"label": 79, "index": 10149, "code": "x, a, b = map(int, input().split())\nprint('A' if abs(x-a)<abs(x-b) else 'B')"}
{"label": 79, "index": 10150, "code": "x, a, b = map(int, input().split())\nif abs(a-x) < abs(x-b):\n\tprint(\"A\")\nelse:\n\tprint(\"B\")\n"}
{"label": 79, "index": 10151, "code": "x, a, b = map(int, input().split())\nprint('A' if abs(x-a)<abs(x-b) else 'B')\n"}
{"label": 79, "index": 10152, "code": "x, a, b = map(int, input().split(' '))\n\nprint(\"A\" if abs(a-x) < abs(b-x) else \"B\")\n"}
{"label": 79, "index": 10153, "code": "x, a, b = map(int, input().split())\nprint(\"A\" if abs(x-a) < abs(x-b) else \"B\")\n"}
{"label": 79, "index": 10154, "code": "x, a, b = map(int, input().split())\nif (abs(a - x) < abs(b - x)):\n    print(\"A\")\nelse:\n    print(\"B\")\n"}
{"label": 79, "index": 10155, "code": "# -*- coding:utf-8 -*-\n\nx,a,b = map(float,input().split())\n\nif(abs(x-a)<abs(x-b)):\n    print(\"A\")\nelse:\n    print(\"B\")\n\n"}
{"label": 79, "index": 10156, "code": "x, a, b = [int(x) for x in input().strip().split()]\n\nif abs(x-a) < abs(x-b):\n    print(\"A\")\nelse:\n    print(\"B\")"}
{"label": 79, "index": 10157, "code": "def main():\n    x, a, b = map(int, input().split())\n    if abs(x - a) < abs(x - b):\n        print(\"A\")\n    else:\n        print(\"B\")\n\nif __name__ == '__main__':\n    main()\n"}
{"label": 79, "index": 10158, "code": "\nx,a,b = map(float, input().split())\n\nprint(\"AB\"[abs(x-a) > abs(x-b)])\n"}
{"label": 79, "index": 10159, "code": "x, a, b = map(int, input().split())\nif abs(x - a) < abs(x - b):\n    print (\"A\")\nelse:\n    print (\"B\")\n"}
{"label": 79, "index": 10160, "code": "x,a,b = map(int, input().split())\na=abs(x-a)\nb=abs(b-x)\nprint(\"A\" if a < b else \"B\")"}
{"label": 79, "index": 10161, "code": "# -*- coding: utf-8 -*-\n\"\"\"\n\"\"\"\n# \n\n\ndef main():\n    x, a, b = [int(x) for x in input().split(' ')]\n    dist_A = abs(x - a)\n    dist_B = abs(x - b)\n    if dist_A > dist_B:\n        print('B')\n    else:\n        print('A')\n\n\nif __name__ == '__main__':\n    main()\n    "}
{"label": 79, "index": 10162, "code": "X,A,B = [int(i) for i in input().split()]\nif abs(A-X) <= abs(B-X):\n    print(\"A\")\nelse:\n    print(\"B\")\n"}
{"label": 79, "index": 10163, "code": "import math\n\nx,a,b=list(map(int,input().split()))\nif(math.fabs(x-a)>math.fabs(x-b)):\n    print(\"B\")\nelse:\n    print(\"A\")"}
{"label": 79, "index": 10164, "code": "print((lambda x:\"A\" if abs(x[0]-x[2]) > abs(x[0]-x[1]) else \"B\")([int(i) for i in input().split()]))"}
{"label": 79, "index": 10165, "code": "x,a,b = map(int,input().split())\nif abs(x - a) < abs(x - b):\n    print(\"A\")\nelse:\n    print(\"B\")"}
{"label": 79, "index": 10166, "code": "x,a,b=map(int,input().split())\na=abs(x-a)\nb=abs(x-b)\nif a>b: print(\"B\")\nelse: print(\"A\")"}
{"label": 79, "index": 10167, "code": "x, a, b = map(int, input().split())\nif (x-a)**2 > (x-b)**2:\n  print(\"B\")\nelse:\n  print(\"A\")"}
{"label": 79, "index": 10168, "code": "x, a, b = map(int, input().split())\nif abs(x - a) < abs(x - b):\n    print(\"A\")\nelif abs(x - a) > abs(x - b):\n    print(\"B\")\n"}
{"label": 79, "index": 10169, "code": "xab=(input()).split(' ')\nprint('A' if abs((int)(xab[0])-(int)(xab[1]))< abs((int)(xab[0])-(int)(xab[2]))else 'B')"}
{"label": 79, "index": 10170, "code": "x,a,b=map(int,input().split());print('AB'[(2*x>a+b)^(a>b)])"}
{"label": 79, "index": 10171, "code": "x, a, b = map(int, input().split())\t\t# 5 7 2\n\n\nif abs(a-x) < abs(b-x):\n\tprint(\"A\")\nelse:\n\tprint(\"B\")\n"}
{"label": 79, "index": 10172, "code": "def read_line(*types): return [f(a) for a, f in zip(input().split(), types)]\n\nx, a, b = read_line(int, int, int)\n\nprint('A' if abs(x - a) < abs(x - b) else 'B')\n"}
{"label": 79, "index": 10173, "code": "a = list(map(int, input().split()))\nif abs(a[0] - a[1]) > abs(a[0] - a[2]):\n    print(\"B\")\nelse:\n  \tprint(\"A\")"}
{"label": 79, "index": 10174, "code": "x,a,b=[int(x) for x in input().split()]\nif abs(a-x) > abs(b-x):\n\tprint(\"B\")\nelse:\n\tprint('A')"}
{"label": 79, "index": 10175, "code": "x,a,b=map(int,input().split())\nprint('AB'[abs(x-a)>abs(x-b)])"}
{"label": 79, "index": 10176, "code": "x,a,b = map(int,input().split())\n\nif abs(x-a) > abs(x-b):\n    print(\"B\")\nelse:\n    print(\"A\")\n"}
{"label": 79, "index": 10177, "code": "x,a,b= map(int, input().split())\nif abs(x-a) < abs(x-b):\n    print(\"A\")\nelse:\n    print(\"B\")"}
{"label": 79, "index": 10178, "code": "# -*- coding: utf-8 -*-\nx, a, b = map(int, input().split(' '))\n\nif abs(x - a) < abs(x - b):\n    print(\"A\")\nelse:\n    print(\"B\")"}
{"label": 79, "index": 10179, "code": "# Meal Delivery\nx,a,b, = list(map(int, input().split()))\n\nif ( abs(a-x) < abs(b-x) ):\n    print(\"A\")\nelse:\n    print(\"B\")"}
{"label": 79, "index": 10180, "code": "x, a, b = map(int, input().split())\nif abs(x - a) < abs(x - b):\n    print('A')\nelse:print('B')\n"}
{"label": 79, "index": 10181, "code": "import math\n#x a b\u3092\u8a2d\u5b9a\u3059\u308b\nx,a,b = map(int,input().split())\n#x \u304b\u3089a\u307e\u3067\u306e\u8ddd\u96e2\u3068x\u304b\u3089b\u307e\u3067\u306e\u8ddd\u96e2\u3092\u8a08\u7b97\u3059\u308b\n\na_distant = a - x\nb_distant = b - x\nif a_distant < 0:\n    a_distant = a_distant*(-1)\nif b_distant < 0:\n    b_distant = b_distant*(-1)\n#a\u307e\u3067\u3068b\u307e\u3067\u3092\u6bd4\u8f03\u3057\u3066\u77ed\u3044\u65b9\u3092\u51fa\u529b\u3059\u308b\nif a_distant > b_distant:\n    print(\"B\")\nelse:\n    print(\"A\")"}
{"label": 79, "index": 10182, "code": "x, a, b = [int(i) for i in input().split()]\nif abs(a-x) < abs(b-x):\n  print(\"A\")\nelse:\n  print(\"B\")"}
{"label": 79, "index": 10183, "code": "x,a,b=list(map(int,input().split()))\nif abs(x-a) > abs(x-b):\n    print(\"B\")\nelse:\n    print(\"A\")"}
{"label": 79, "index": 10184, "code": "x,a,b = map(int,input().split(' '))\n\nif abs(x-a) > abs(x-b):\n    print('B')\nelse:\n    print('A')"}
{"label": 79, "index": 10185, "code": "def solve(): # 071A - Meal Delivery\n    x, A, B = list(map(int, input().split(\" \")))\n    da = abs(x - A)\n    db = abs(x - B)\n    if da > db:\n        print(\"B\")\n    else:\n        print(\"A\")\n\n\nsolve()"}
{"label": 79, "index": 10186, "code": "x,a,b = list(map(int, input().split()))\nif abs(x - a) > abs(x - b):\n    print (\"B\")\nelse:\n    print (\"A\")\n"}
{"label": 79, "index": 10187, "code": "x, a, b = map(int, input().split())\nif x < a and x < b:\n    if a < b:\n        print(\"A\")\n    else:\n        print(\"B\")\nelif x > a and x > b:\n    if a > b:\n        print(\"A\")\n    else:\n        print(\"B\")\nelse:\n    if abs(x - a) < abs(x - b):\n        print(\"A\")\n    else:\n        print(\"B\")"}
{"label": 79, "index": 10188, "code": "x, a, b = list(map(int, input().split()))\nif abs(x-a) < abs(x-b):\n    print('A')\nelse:\n    print('B')"}
{"label": 79, "index": 10189, "code": "import sys\ninp = lambda t: t(sys.stdin.readline().strip())\ninpm = lambda t: map(t, sys.stdin.readline().split())\ninpl = lambda t: list(map(t, sys.stdin.readline().split()))\nprint = lambda x, end='\\n': sys.stdout.write(str(x) + end)\n\nx, a, b = inpm(int)\nif abs(a - x) < abs(b - x):\n\tprint('A')\nelse:\n\tprint('B')"}
{"label": 79, "index": 10190, "code": "x,a,b = map(int,input().split())\nansa = (abs(x-a)< abs(x-b))\nprint(\"A\" if ansa  else \"B\")"}
{"label": 79, "index": 10191, "code": "if __name__ == '__main__':\n    x, a, b = map(int, input().split())\n    if abs(x-a) < abs(x-b):\n        print('A')\n    else:\n        print('B')"}
{"label": 79, "index": 10192, "code": "x,a,b = map(int, input().split())\nans = 'A' if abs(a-x) < abs(b-x) else 'B'\nprint(ans)\n"}
{"label": 79, "index": 10193, "code": "x,a,b = [int(i) for i in input().split()]\nif (x-a)**2 < (x-b)**2:\n\tprint(\"A\")\nelse:\n\tprint(\"B\")\n"}
{"label": 79, "index": 10194, "code": "x,a,b = (int(i) for i in input().split())\n\na = a-x if a>x else x-a\nb = b-x if b>x else x-b\n\nans = \"A\" if a<b else \"B\"\n\nprint(ans)"}
{"label": 79, "index": 10195, "code": "l = input().split()\nx = float(l[0])\na = float(l[1])\nb = float(l[2])\n\n\nif abs(x-a) < abs(x-b):\n\tprint(\"A\")\nelse:\n\tprint(\"B\")"}
{"label": 79, "index": 10196, "code": "l = list(map(int, input().split()))\na = abs(l[0] - l[1])\nb = abs(l[0] - l[2])\n\nif a<b:\n    print('A')\nelse:\n    print('B')\n"}
{"label": 79, "index": 10197, "code": "#! -*- coding:utf-8 -*-\nx,a,b = map(int,input().split())\nimport math\n\nif(math.copysign(x-a,0) < math.copysign(x-b,0)):\n    print('A')\nelse:\n    print('B')\n"}
{"label": 79, "index": 10198, "code": "x, a, b = map(int, raw_input().split())\n\nif abs(x - a) < abs (x - b):\n    print \"A\"\nelse:\n    print \"B\""}
{"label": 79, "index": 10199, "code": "lst = list(map(int, input().split()))\n\nx = lst[0]\na = lst[1]\nb = lst[2]\n\nif abs(b-x) > abs(a-x):\n    print(\"A\")\nelse:\n    print(\"B\")"}
{"label": 79, "index": 10200, "code": "a = input().split()\nif (max(int(a[0]), int(a[1])) - min(int(a[0]), int(a[1]))) > (max(int(a[0]), int(a[2])) - min(int(a[0]), int(a[2]))):\n    print(\"B\")\nelif (max(int(a[0]), int(a[1])) - min(int(a[0]), int(a[1]))) < (max(int(a[0]), int(a[2])) - min(int(a[0]), int(a[2]))):\n    print(\"A\")\n"}
{"label": 79, "index": 10201, "code": "from collections import defaultdict\nfrom itertools import product, groupby\nfrom math import pi\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right\nINF = 10 ** 10\n\n\ndef main():\n    x, a, b = map(int, input().split())\n    print(\"A\" if abs(x - a) < abs(x - b) else \"B\")\n\n\nif __name__ == '__main__':\n    main()\n"}
{"label": 79, "index": 10202, "code": "def A_MealDelivery(lst):\n    x, a, b = lst[0], lst[1], lst[2]\n    if abs(x - a) < abs(x - b):\n        return 'A'\n    else:\n        return 'B'\n\nl = [int(i) for i in input().split()]\nprint(A_MealDelivery(l))"}
{"label": 79, "index": 10203, "code": "import math\nx,a,b = map(int,input().split())\nif abs(x-a)<abs(x-b):\n    print(\"A\")\nelse:\n    print(\"B\")\n\n"}
{"label": 79, "index": 10204, "code": "x,a,b = [int(i) for i in input().split()]\nif abs(x-a) < abs(x-b):\n\tprint(\"A\")\nelse:\n\tprint(\"B\")"}
{"label": 79, "index": 10205, "code": "x,a,b = [int(x) for x in input().split()]\nif abs(x-a)<abs(x-b):\n    print(\"A\")\nelse:\n    print(\"B\")\n"}
{"label": 79, "index": 10206, "code": "x, a, b = map(int,input().split())\nif abs(x - a) < abs(x - b):\n    print('A')\nelse:\n    print('B')"}
{"label": 79, "index": 10207, "code": "x, a, b = map(int, input().split())\n \nif abs(x-a) > abs(x-b):\n  print(\"B\")\nelse:\n  print(\"A\")"}
{"label": 79, "index": 10208, "code": "x,a,b=map(int, input().split())\nif abs(a-x)>abs(b-x):\n print('B')\nelse:\n print('A')\n"}
{"label": 79, "index": 10209, "code": "def main():\n    x, a, b = [int(i) for i in input().split()]\n\n    if(abs(x-a) < abs(x-b)):\n        print(\"A\")\n    else:\n        print(\"B\")\n        \nif __name__==\"__main__\":\n    main()"}
{"label": 79, "index": 10210, "code": "a,b,c=map(int,raw_input().split())\nprint \"A\" if abs(b-a)<=abs(c-a) else \"B\""}
{"label": 79, "index": 10211, "code": "a = map(int, raw_input().strip().split())\nda = max(a[1],a[0])-min(a[1],a[0])\ndb = max(a[0],a[2])-min(a[0],a[2])\nif da > db:\n\tprint('B')\nelse:\n\tprint('A')"}
{"label": 79, "index": 10212, "code": "line = raw_input()\nx, a, b = line.split()\nx = int(x)\na = int(a)\nb = int(b)\n\nif abs(x-a) < abs(x-b):\n    print 'A'\nelse:\n    print 'B'"}
{"label": 79, "index": 10213, "code": "x,a,b=map(float,raw_input().split())\nAX=abs(a-x)\nBX=abs(b-x)\nif AX>BX:\n    print \"B\"\nelse:\n    print \"A\""}
{"label": 79, "index": 10214, "code": "x, a, b = map(int, input().split())\n\nif abs(a-x) > abs(b-x):\n    print(\"B\")\nelse:\n    print(\"A\")"}
{"label": 79, "index": 10215, "code": "x,a,b = map(int, input().split())\na=abs(x-a)\nb=abs(b-x)\nprint(\"A\" if a < b else \"B\")"}
{"label": 79, "index": 10216, "code": "x, a, b = list(map(int, input().split()))\n\nif abs(x - a) < abs(x - b):\n    print(\"A\")\nelse:\n    print(\"B\")\n"}
{"label": 79, "index": 10217, "code": "#from time import time\n#t = time()\nnvm = input().split(' ')\nif abs(int(nvm[0]) - int(nvm[1])) < abs(int(nvm[0]) - int(nvm[2])):\n    print('A')\nelse:\n    print('B')\n\n#print(mn[0] * mm[1])\n#tt= time()\n#print(tt-t)\n    "}
{"label": 79, "index": 10218, "code": "x, a, b = map(int, input().split())\n\nif abs(x-a) <= abs(x-b):\n    print(\"A\")\nelse:\n    print(\"B\")\n"}
{"label": 79, "index": 10219, "code": "from collections import defaultdict\nfrom itertools import product, groupby\nfrom math import pi\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right\nINF = 10 ** 10\n \n \ndef main():\n    x, a, b = map(int, input().split())\n    print(\"A\" if abs(x - a) < abs(x - b) else \"B\")\n \n \nif __name__ == '__main__':\n    main()"}
{"label": 79, "index": 10220, "code": "x, a, b = [int(i) for  i in input().split()]\nif abs(x-a) < abs(x-b):\n    print('A')\nelse:\n    print('B')"}
{"label": 79, "index": 10221, "code": "#!usr/bim/python\n#! -*- coding: utf-8 -*-\n\nnab = raw_input()\nnab = nab.split()\nn,a,b = map(int,nab)\n\nif abs(n-a) < abs(n-b):\n    print 'A'\nelse:\n    print 'B'\n"}
{"label": 79, "index": 10222, "code": "\nl = list(map(int, input().split()))\n\na = l[1] - l[0]\nb = l[2] - l[0]\nlist = []\nlist.append(abs(a))\nlist.append(abs(b))\nif list[0] > list[1]:\n    print(\"B\")\nelse:\n    print(\"A\")"}
{"label": 79, "index": 10223, "code": "x, a, b = map(int, input().split())\nif abs(x-a) > abs(x-b):\n    print(\"B\")\nelse:\n    print(\"A\")"}
{"label": 79, "index": 10224, "code": "n = input().split()\nxab = []\nfor i in n:\n    xab.append(int(i))\nxa = abs(xab[0] - xab[1])\nxb = abs(xab[0] - xab[2])\nif xa < xb:\n    print('A')\nelif xa > xb:\n    print('B')"}
{"label": 79, "index": 10225, "code": "x, a, b = [int(n) for n in input().split()]\nif abs(x-a) < abs(x-b):\n  print (\"A\")\nelse:\n  print(\"B\")\n\n   "}
{"label": 79, "index": 10226, "code": "x, a, b = map(int, input().split())\nif abs(x-a) < abs(x-b):\n  print(\"A\")\nelse:\n  print(\"B\")\n"}
{"label": 79, "index": 10227, "code": "x,a,b = input().split()\nx = int(x)\na = int(a)\nb = int(b)\n\nif (x-a)**2 >(x-b)**2:\n    print(\"B\")\nelse:\n    print(\"A\")\n    "}
{"label": 79, "index": 10228, "code": "def abs(x):\n\tif x >= 0:\n\t\treturn x\n\telse:\n\t\treturn -1 * x\n\t\t\nls = list(map(int,input().split()))\nif abs(ls[0] - ls[1]) < abs(ls[0] - ls[2]):\n\tprint ('A')\nelse:\n\tprint ('B')"}
{"label": 79, "index": 10229, "code": "x,a,b = map(int,input().split())\nprint('A' if abs(x-a)<abs(x-b) else 'B')\n"}
{"label": 79, "index": 10230, "code": "x, a, b = map(int, input().split(\" \"))\n\nif abs(x - a) < abs(x - b):\n    print(\"A\")\nelse:\n    print(\"B\")"}
{"label": 79, "index": 10231, "code": "x, a, b = map(int, input().split())\nif abs(a-x) < abs(b-x):\n    print(\"A\")\nelse:\n    print(\"B\")"}
{"label": 79, "index": 10232, "code": "x,a,b = map(int,input().split(' '))\nc = a-x\nd = b-x\n\nif c<0:\n\te = -c\nelse:\n\te = c\n\nif d<0:\n\tf = -d\nelse:\n\tf = d\n\n\nif e<f:\n\tprint('A')\nelse:\n\tprint('B')\n"}
{"label": 79, "index": 10233, "code": "import math\nx,a,b = input().split()\nx = int(x,10)\na = int(a,10)\nb = int(b,10)\n\nalpha = math.fabs(x-a)\nbeta = math.fabs(x-b)\n\nif alpha>beta:\n\tprint('B')\nelse:\n\tprint('A')\n"}
{"label": 79, "index": 10234, "code": "x, a, b = map(int, raw_input().split()) \nprint \"A\" if abs(a - x) < abs(b - x) else \"B\"\n"}
{"label": 79, "index": 10235, "code": "#ABC071A\n\nx,a,b=map(int,raw_input().split())\nif abs(a-x)>=abs(b-x):\n print 'B'\nelse:\n print 'A'\n"}
{"label": 79, "index": 10236, "code": "x, a, b = map(int,raw_input().split())\nif abs(x-a)>abs(x-b):\n    print \"B\"\nif abs(x-a)<abs(x-b):\n    print \"A\""}
{"label": 79, "index": 10237, "code": "x, a, b = map(int, input().split())\ndisA = abs(x-a)\ndisB = abs(x-b)\nif disA < disB:\n    print(\"A\")\nelse:\n    print(\"B\")\n"}
{"label": 79, "index": 10238, "code": "x, a, b = map(int, input().split())\nif abs(x-a)<abs(x-b): print(\"A\")\nelse: print(\"B\")\n"}
{"label": 79, "index": 10239, "code": "n,a,b = map(int,input().split())\na=abs(n-a)\nb=abs(n-b)\nprint(\"A\" if a<b else \"B\")"}
{"label": 79, "index": 10240, "code": "L=list(map(int, input().split()))\na=abs(L[1]-L[0])\nb=abs(L[2]-L[0])\nif a>b:\n    print(\"B\")\nelse:\n    print(\"A\")"}
{"label": 79, "index": 10241, "code": "import math\n\nx, a, b = map(int, input().split())\n\nif math.fabs(x-a) < math.fabs(x-b):\n    print('A')\nelse:\n    print('B')"}
{"label": 79, "index": 10242, "code": "x, a, b = map(int, input().split())\n\nif abs(x - a) < abs(x - b):\n    print('A')\nelse:\n    print('B')\n"}
{"label": 79, "index": 10243, "code": "x, a, b=map(int,input().split())\n\nif abs(a-x)  > abs(b-x):\n    print('B')\nelse:\n    print('A')\n"}
{"label": 79, "index": 10244, "code": "x,a,b=map(int, input().split())\nif abs(x-b) > abs(x-a):\n  print('A')\nelse:\n  print('B')"}
{"label": 79, "index": 10245, "code": "x, A, B = map(int, input().split())\nif abs(x - A) < abs(x - B):\n    print('A')\nelse:\n    print('B')"}
{"label": 79, "index": 10246, "code": "def read_int_list():\n    return (int(i) for i in input().split())\nx,a,b = read_int_list()\nif abs(x-a) < abs(x-b):\n    print(\"A\")\nelse:\n    print(\"B\")"}
{"label": 79, "index": 10247, "code": "if __name__ == '__main__':\n    X, A, B = [int(i) for i in input().split()]\n    if abs(X - A) < abs(X - B):\n        print('A')\n    else:\n        print('B')\n"}
{"label": 79, "index": 10248, "code": "x, a, b = map(int, input().split())\n\nif abs(x - a) < abs(x - b):\n    print(\"A\")\nelse:\n    print(\"B\")\n"}
{"label": 79, "index": 10249, "code": "import sys\n\n# sys.stdin = open('a1.in')\n\n\ndef read_int_list():\n    return list(map(int, input().split()))\n\n\ndef read_str_list():\n    return input().split()\n\n\ndef read_int():\n    return int(input())\n\n\ndef read_str():\n    return input()\n\n\ndef main():\n    x, a, b = read_int_list()\n    if abs(a - x) < abs(b - x):\n        print('A')\n    else:\n        print('B')\n\n\nmain()\n"}
{"label": 79, "index": 10250, "code": "import math\nx,a,b = list(map(int, input().split()))\nprint('A' if math.fabs(x-a) < math.fabs(x-b) else 'B')"}
{"label": 79, "index": 10251, "code": "#! /bin/python\n# coding:utf-8\n\n(x, a, b) = map(int, raw_input().split())\n\nif (abs(x - a) < abs(x - b)):\n\tprint \"A\"\nelse:\n\tprint \"B\""}
{"label": 79, "index": 10252, "code": "\nx, a, b = list(map(int, input().split()))\n\nif abs(x-a) > abs(x-b):\n    print('B')\nelse:\n    print('A')\n"}
{"label": 79, "index": 10253, "code": "x, a, b = map(int, input().split())\n\nif abs(x-a) > abs(x-b):\n    print('B')\nelse:\n    print('A')"}
{"label": 79, "index": 10254, "code": "# -*- coding: utf-8 -*-\n\ntmp = input()\nx, a, b = [int(a) for a in tmp.split()]\n\nd1 = abs(x - a)\nd2 = abs(x - b)\n\nprint(\"A\" if d1 < d2 else \"B\")\n"}
{"label": 79, "index": 10255, "code": "place = map(int, input().split())\n\nX, A, B = [i for i in place]\n\nX_A = abs(X - A)\nX_B = abs(X - B)\n\nif X_A <= X_B:\n  print('A')\nelse:\n  print('B')"}
{"label": 79, "index": 10256, "code": "import sys\n\nx, a, b = map(int, sys.stdin.readline().strip().split(\" \"))\n\nif abs(x-a) < abs(x-b):\n    print(\"A\")\nelse:\n    print(\"B\")"}
{"label": 79, "index": 10257, "code": "# coding: utf-8\nx,a,b=map(int,input().split())\nprint('A' if abs(x-a)<abs(x-b) else 'B')"}
{"label": 79, "index": 10258, "code": "x, a, b = map(int, raw_input().split())\nprint \"A\" if abs(x-a) < abs(x-b) else \"B\""}
{"label": 79, "index": 10259, "code": "x, a, b = [int(i) for i in input().split(' ')]\nprint('A' if abs(x-a) < abs(x-b) else 'B')"}
{"label": 79, "index": 10260, "code": "x, a, b = map(int, input().split())\nprint(\"A\" if abs(x - a) < abs(x - b) else \"B\")\n"}
{"label": 79, "index": 10261, "code": "x,a,b=map(int,raw_input().split())\na=abs(x-a)\nb=abs(x-b)\nif a<b :\n    print 'A'\nelse :\n    print 'B'"}
{"label": 79, "index": 10262, "code": "x, a, b = map(int, input().split())\n\nA = abs(x-a)\nB = abs(x-b)\nif A < B:\n    print(\"A\")\nelse:\n    print(\"B\")\n"}
{"label": 79, "index": 10263, "code": "x,a,b = map(int,input().split())\n\nif abs(a-x) < abs(b-x):\n    print(\"A\")\nelse:\n    print(\"B\")"}
{"label": 79, "index": 10264, "code": "x, a, b = input().split()\nx, a, b = int(x), int(a), int(b)\n\ndis_a = abs(x - a)\ndis_b = abs(x - b)\n\nif dis_a < dis_b:\n    print(\"A\")\nelse:\n    print(\"B\")"}
{"label": 79, "index": 10265, "code": "x, a, b = list(map(int, input().split()))\n\nif abs(x-a) < abs(x-b):\n    print('A')\nelse:\n    print('B')\n"}
{"label": 79, "index": 10266, "code": "x,a,b = [int(i) for i in input().split()]\nif abs(x-a) < abs(x-b):\n    print(\"A\")\nelse:\n    print(\"B\")"}
{"label": 79, "index": 10267, "code": "input_value = input().split()\nx = int(input_value[0])\na = int(input_value[1])\nb = int(input_value[2])\n\ndistance_from_x_to_a = abs(x-a)\ndistance_from_x_to_b = abs(x-b)\n\nif distance_from_x_to_a < distance_from_x_to_b:\n\tprint(\"A\")\nelse:\n\tprint(\"B\")\n"}
{"label": 79, "index": 10268, "code": "x,a,b = map(int, input().split())\nif abs(x-a) < abs(x-b):\n    print('A')\nelse :\n    print('B')"}
{"label": 79, "index": 10269, "code": "x, a, b = map(int, input().split())\nif abs(x-a) > abs(x-b):\n    print('B')\nelse:\n    print('A')\n"}
{"label": 80, "index": 10270, "code": "#Not Found\ns = list(input())\n\nc = [chr(i) for i in range(97, 97+26)]\nans = \"None\"\nfor ci in c:\n    if( ci not in list(s) ):\n        ans = ci\n        break\nprint(ans)"}
{"label": 80, "index": 10271, "code": "import string\ns = list(input())\nflag = 0\n\nfor a in string.ascii_lowercase:\n    if a not in s:\n        print(a)\n        flag = 1\n        break\n\nif flag == 0:\n    print(\"None\")\n"}
{"label": 80, "index": 10272, "code": "S = str(input())\nalpha = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\n\nn = 0\n\nfor i in range(26):\n\n\tif alpha[n] not in S:\n\t\tprint(alpha[n])\n\t\tbreak\n\tif n == 25:\n\t\tprint(\"None\")\n\t\tbreak\n\t\t\n\tn += 1\n"}
{"label": 80, "index": 10273, "code": "S = input()\n\nX = 'abcdefghijklmnopqrstuvwxyz'\n\nfor x in X:\n    if x not in S:\n        print(x)\n        exit()\n\nprint('None')\n"}
{"label": 80, "index": 10274, "code": "S = list(input())\n\nalphabets = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\",\n\"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\",\"q\", \"r\", \"s\",\n\"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n\ni = 0\nwhile i in range(len(alphabets)):\n    if alphabets[i] in S:\n        i += 1\n    else:\n        print(alphabets[i])\n        break\nelse:\n    print (\"None\")\n"}
{"label": 80, "index": 10275, "code": "alphabet_list = [0 for x in range(ord('a'),ord('z')+1)]\n\nS = list(raw_input())\n\nfor x in S:\n    alphabet_list[ord(x) - ord('a')] += 1\n\nprint_flag = False\nfor index in range(0,ord('z')-ord('a')+1):\n    if alphabet_list[index] == 0:\n        print(chr(index+ord('a')))\n        print_flag = True\n        break\n\nif not(print_flag):\n    print('None')\n"}
{"label": 80, "index": 10276, "code": "S = input()\nalf = \"abcdefghijklmnopqrstuvwxyz\"\nli = []\n\nfor x in alf:\n    if (x in S) == False:\n      li.append(x)\n      break\n\nif len(li) != 0:\n    print(li[0])\nelse:\n    print(\"None\")"}
{"label": 80, "index": 10277, "code": "S = input()\nL = [chr(i) for i in range(97,97+26)]\n\nfor c in L:\n    if c in S:\n        if c == 'z':\n            print('None')\n        continue\n    else:\n        print(c)\n        break"}
{"label": 80, "index": 10278, "code": "import sys\nline = raw_input()\nres = dict()\nfor i in line:\n    res[i] = 1\n    if len(res) == 26:\n        print 'None'\n        sys.exit(0)\nfor i in 'abcdefghijklmnopqrstuvwxyz':\n    if res.get(i, None) is None:\n        print i\n        sys.exit(0)\n"}
{"label": 80, "index": 10279, "code": "all_char = map(chr,range(97,123))\nall_set = set(all_char)\ninput_set = set(input())\nprint(min(all_set-input_set or{\"None\"}))"}
{"label": 80, "index": 10280, "code": "S = input()\nx = [chr(i) for i in range(ord(\"a\"),ord(\"z\")+1)]\nfor i in x:\n  if i not in S:\n    print(i)\n    break\n  if i == x[-1]:\n    print(\"None\")\n    break"}
{"label": 80, "index": 10281, "code": "S = list(input())\n\nT = list('abcdefghijklmnopqrstuvwxyz')\n\nsub = [c for c in T if c not in S]\nif len(sub) != 0:\n    print(sub[0])\nelse:\n    print('None')\n    \n"}
{"label": 80, "index": 10282, "code": "s=raw_input()\na=[0 for i in range(26)]\np=-1\nfor i in range(len(s)):\n    a[ord(s[i])-97]=1\nfor i in range(26):\n    if a[i]==0:\n        print chr(i+97)\n        exit()\nprint \"None\"\n"}
{"label": 80, "index": 10283, "code": "import string\nimport sys\nfrom collections import Counter\n\n# sys.stdin = open('b1.in')\n\n\ndef read_int_list():\n    return list(map(int, input().split()))\n\n\ndef read_str_list():\n    return input().split()\n\n\ndef read_int():\n    return int(input())\n\n\ndef read_str():\n    return input()\n\n\ndef main():\n    a = list(string.ascii_lowercase)\n    res = None\n    s = read_str_list()\n    l = list(s)\n    l.sort()\n    s = ''.join(l)\n\n    c = Counter(s)\n    for i in a:\n        if c[i] == 0:\n            res = i\n            break\n\n    print(res)\n\n\nmain()\n"}
{"label": 80, "index": 10284, "code": "S = input()\nl = 'abcdefghijklmnopqrstuvwxyz'\n\nfor x in l:\n    if not x in S:\n        print(x)\n        exit()\n        \nprint('None')"}
{"label": 80, "index": 10285, "code": "n = input()\nfor i in range(26):\n    c = chr(i+ord(\"a\"))\n    if not c in n: print(c); break\nelse: print(\"None\")"}
{"label": 80, "index": 10286, "code": "S = input()\na = [chr(i) for i in range(97, 97+26)]\nfor s in S:\n    if s in a:\n        a.remove(s)\nif len(a) == 0:\n    print('None')\nelse:\n    print(a[0])\n"}
{"label": 80, "index": 10287, "code": "S = str(input())\nlist_S = []\n\nfor i in range(len(S)):\n\n    list_S.append(S[i:i+1])\n\n\n\nalf = 'abcdefghijklmnopqrstuvwxyz'\nlist_alf = []\nfor i in range(len(alf)):\n    list_alf.append(alf[i:i+1])\n\ncount = 0\nconti = 0\n\nfor i in range(len(alf)):\n    count = list_S.count(list_alf[i])\n    if count == 0:\n        print (list_alf[i])\n        break\n    conti += 1\n\n\nif conti >= 26:\n    print ('None')"}
{"label": 80, "index": 10288, "code": "#coding=UTF-8\n\nS=input()\nans='None'\nfor chr_num in range(ord('a'),ord('z')+1,1):\n    mozi=chr(chr_num)\n    if not(mozi in S):\n        ans=mozi\n        break\n\nprint(ans)\n"}
{"label": 80, "index": 10289, "code": "import string\nS = input()\nfor a in string.ascii_lowercase:\n    if a not in S:\n        print(a)\n        exit(0)\nprint('None')\n"}
{"label": 80, "index": 10290, "code": "print((lambda x:\"None\" if not x else x[0])(sorted(set(chr(97+i) for i in range(26))-set(list(input())))))"}
{"label": 80, "index": 10291, "code": "# coding: utf-8\n# Here your code !\ns = set(input())\nab = {chr(i) for i in range(97,97+26)}\nab -= s\nif len(ab) == 0:\n    print(\"None\")\nelse:\n    print(min(ab))"}
{"label": 80, "index": 10292, "code": "s=set(input())\nfor c in range(ord('a'),ord('z')+1):\n    c=chr(c)\n    if c not in s:\n        print(c)\n        break\nelse:\n    print(None)"}
{"label": 80, "index": 10293, "code": "import string\n\nS = input()\n\nX = set(string.ascii_lowercase) - set(S)\nif X:\n    print(sorted(list(X))[0])\nelse:\n    print(None)\n"}
{"label": 80, "index": 10294, "code": "print((lambda s:next((chr(i)for i in range(97,123)if chr(i)not in s),\"None\"))(input()))"}
{"label": 80, "index": 10295, "code": "hoge = [0] * 26\na = ord('a')\nstring = input()\nfor i in range(len(string)):\n    hoge[ord(string[i])-a] = 1\n\nfor i in range(26):\n    if hoge[i] == 0:\n        print(chr(i+a))\n        break\n    if i == 25:\n        print('None')"}
{"label": 80, "index": 10296, "code": "s = input()\narr = \"abcdefghijklmnopqrstuvwxyz\"\nans = []\nfor word in arr:\n    if word in s:\n        pass\n    else:\n        ans.append(word)\nif len(ans) == 0:\n    print(\"None\")\nelse:\n    print(ans[0])"}
{"label": 80, "index": 10297, "code": "def main():\n    S = input()\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    #print(alphabet)\n    #com = S + alphabet\n    #print(sorted(set(com), key=com.index))\n    dic = str.maketrans(\"\", \"\", S)\n    ans = alphabet.translate(dic)\n    if(len(ans) > 0):\n        print(ans[0])\n    else:\n        print(\"None\")\n    \n    \nif __name__==\"__main__\":\n    main()"}
{"label": 80, "index": 10298, "code": "#from time import time\n#t = time()\nn = input()\nd=[]\nabc =[chr(x) for x in range(97, 123)]\nfor i in abc:\n    if i not in  n:\n        d.append(i)\nif d != []:\n    print(sorted(d)[0])\nelse:\n    print('None')\n\n#print(mn[0] * mm[1])\n#tt= time()\n#print(tt-t)\n    \n                \n"}
{"label": 80, "index": 10299, "code": "S = raw_input()\nfor c in [chr(ord(\"a\") + i) for i in xrange(26)]:\n    if c in S:\n        continue\n    else:\n        print c\n        break\nelse:\n    print \"None\"\n"}
{"label": 80, "index": 10300, "code": "x=sorted(set(chr(97+i) for i in range(26))-set(input()))\nprint(\"None\" if not x else x[0])"}
{"label": 80, "index": 10301, "code": "import string\nS = input()\ndiff = set(string.ascii_lowercase) - set(S)\ndiff = sorted(list(diff))\nif len(diff) == 0:\n    print('None')\nelse:\n    print(diff[0])\n"}
{"label": 80, "index": 10302, "code": "S = input()\n\nfor i in \"abcdefghijklmnopqrstuvwxyz\":\n    if S.replace(i,\"\") == S:\n        print(i)\n        break\nelse:\n    print(\"None\")\n"}
{"label": 80, "index": 10303, "code": "def search(code):\n    for i in range(len(code)):\n        if code[i] == 0:\n            return i\n    else:\n        return -1\n\ns = raw_input()\n\ncode = [0 for i in range(26)]\n\nfor i in range(len(s)):\n    key = ord(s[i]) - 97\n    code[key] += 1\n\nrt = search(code)\n\nif rt >= 0:\n    print chr(rt + 97)\nelse:\n    print \"None\""}
{"label": 80, "index": 10304, "code": "x = str(input())\n\nfor i in range(97,123):\n    if(x.find(chr(i))==-1):\n        print(chr(i))\n        quit()\n\nprint('None')\n\n\nquit()"}
{"label": 80, "index": 10305, "code": "s = input()\nab_list = [True]*26\nfor i in s:\n  ab_list[ord(i)-97] = False\nfor i in range(len(ab_list)):\n  if ab_list[i]:\n    print(chr(i+97))\n    exit()\nprint(\"None\")\n    "}
{"label": 80, "index": 10306, "code": "a_list=(\"abcdefghijklmnopqrstuvwxyz\")\nword=(raw_input())\nflag=0\nout=\"None\"\nfor i in a_list:\n    for n,k in enumerate(word):\n        if i==k:\n            break\n        if n==len(word)-1:\n            out=i\n            flag=1\n    if flag==1:\n        break\nprint(out)"}
{"label": 80, "index": 10307, "code": "S = input()\n\na = 0\nfor i in range(97, 97 + 26):\n    if chr(i) not in S:\n        print(chr(i))\n        a = 1\n        break\n\nif a == 0:\n    print('None')\n"}
{"label": 80, "index": 10308, "code": "from collections import defaultdict\nfrom itertools import product, groupby\nfrom math import pi\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right\nfrom string import ascii_lowercase\nINF = 10 ** 10\n\n\ndef main():\n    S = input()\n    for c in ascii_lowercase:\n        if c not in S:\n            print(c)\n            return\n    else:\n        print(\"None\")\n\n\n\nif __name__ == '__main__':\n    main()\n"}
{"label": 80, "index": 10309, "code": "s=list(input())\nL=[]\nfor t in range(0,26):\n    if chr(97+t) not in s:\n        a=chr(97+t)\n        L.append(a)\n        \nif not L:\n    print(\"None\")\nelse:\n    print(L[0])\n            "}
{"label": 80, "index": 10310, "code": "a = raw_input().strip()\nal = 'abcdefghijklmnopqrstuvwxyz'\nfor x in al:\n\ttry:\n\t\ti = a.index(x)\n\texcept :\n\t\tprint(x)\n\t\texit()\nprint('None')"}
{"label": 80, "index": 10311, "code": "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\ngosa = 1.0 / 10**10\nmod = 10**9 + 7\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\n\n\ndef main():\n    c = collections.Counter(S())\n    for k in string.ascii_lowercase:\n        if c[k] == 0:\n            return k\n    return 'None'\n\nprint(main())\n\n"}
{"label": 80, "index": 10312, "code": "S=input()\n\nsorted(S)\n\nif 'a' not in S:\n    print('a')\nelif 'b' not in S:\n    print('b')\nelif 'c' not in S:\n    print('c')\nelif 'd' not in S:\n    print('d')\nelif 'e' not in S:\n    print('e')\nelif 'f' not in S:\n    print('f')\nelif 'g' not in S:\n    print('g')\nelif 'h' not in S:\n    print('h')\nelif 'i' not in S:\n    print('i')\nelif 'j' not in S:\n    print('j')\nelif 'k' not in S:\n    print('k')\nelif 'l' not in S:\n    print('l')\nelif 'm' not in S:\n    print('m')\nelif 'n' not in S:\n    print('n')\nelif 'o' not in S:\n    print('o')\nelif 'p' not in S:\n    print('p')\nelif 'q' not in S:\n    print('q')\nelif 'r' not in S:\n    print('r')\nelif 's' not in S:\n    print('s')\nelif 't' not in S:\n    print('t')\nelif 'u' not in S:\n    print('u')\nelif 'v' not in S:\n    print('v')\nelif 'w' not in S:\n    print('w')\nelif 'x' not in S:\n    print('x')\nelif 'y' not in S:\n    print('y')\nelif 'z' not in S:\n    print('z')\nelse:\n    print('None')"}
{"label": 80, "index": 10313, "code": "string = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\n\ns =[d for d in input()]\nfind = 0\ni=0\nfound = False\nwhile i<26 and not found:\n    if string[i] in s :\n        found= False\n    else:\n        find =string[i]\n        found=True\n    i +=1\n\nif found:\n    print(find)\nelse:\n    print('None')\n    \n        "}
{"label": 80, "index": 10314, "code": "s=set(input())\neng = [chr(i) for i in range(97,123)]\nfor i in eng:\n    if i not in s:\n        print(i)\n        break\nelse:\n    print(\"None\")"}
{"label": 80, "index": 10315, "code": "S = input()\nalphabet = \"abcdefghijklmnopqrstuvwxyz\"\nfound = [i for i in alphabet if i not in S]\nfound.sort()\nif len(found) == 0:\n  print('None')\nelse:\n  print(found[0])"}
{"label": 80, "index": 10316, "code": "S=list(str(input()))\n\na=list('abcdefghijklmnopqrstuvwxyz')\n\nfor i in a:\n    if i not in S:\n        print(i)\n        exit()\nelse:\n    print('None')"}
{"label": 80, "index": 10317, "code": "abc='abcdefghijklmnopqrstuvwxyz'\ns=raw_input().strip()\nisi=set()\nfor l in s:\n    if l not in isi:\n        isi.add(l)\nfor l in abc:\n    if l not in isi:\n        print l\n        break\nelse:\n    print 'None'"}
{"label": 80, "index": 10318, "code": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport string\n\ndef main():\n    S = set(input())\n    T = set(string.ascii_lowercase)\n\n    T -= S\n    if not T:\n        print(\"None\")\n    else:\n        print(sorted(T)[0])\n\nif __name__ == \"__main__\": main()\n"}
{"label": 80, "index": 10319, "code": "s = list(input().strip())\ns.sort()\ni = 0\nfor c in \"abcdefghijklmnopqrstuvwxyz!\":\n    if i < len(s) and s[i] == c:\n        while i < len(s) and s[i] == c:\n            i += 1\n    else:\n        if c != \"!\":\n            print(c)\n        else:\n            print(\"None\")\n        raise SystemExit"}
{"label": 80, "index": 10320, "code": "\ns=input()\ns=list(s)\nnums=[]\nfor i in s: nums.append(ord(i))\n\nflag=True\nfor i in range(97,123):\n    if i in nums: pass\n    else: print(chr(i));flag=False; break\nif flag: print(\"None\")"}
{"label": 80, "index": 10321, "code": "s = list(set(input()))\nabc = \"abcdefghijklmnopqrstuvwxyz\"\ns.sort()\nif len(s)==26: print(\"None\")\nelse:\n  for a in abc:\n    if not(a in s):\n      print(a)\n      break\n"}
{"label": 80, "index": 10322, "code": "import sys\n\nalphabet = \"abcdefghijklmnopqrstuvwxyz\"\nword = raw_input()\nfound = 0\n\nfor letter in alphabet:\n    if letter not in word:\n        print letter\n        found = 1\n        break\n\nif found == 0:\n    print \"None\""}
{"label": 80, "index": 10323, "code": "s = input()\n\nalp = [chr(i) for i in range(97, 97+26)]\n\nflag = [False for i in range(26)]\n\nfor c in s:\n    flag[ord(c) - ord(\"a\")] = True\n\n\ndef pr():\n    for i in range(26):\n        if not flag[i]:\n            print(alp[i])\n            return\n\n    print('None')\n    return\n\npr()\n"}
{"label": 80, "index": 10324, "code": "import string\n\nstandard_let = string.ascii_lowercase\n\ns = input()\nfor i in standard_let:\n    if i not in s:\n        print(i)\n        break\nelse:\n    print('None')"}
{"label": 80, "index": 10325, "code": "# coding: utf-8\ntxt = input()\nfor c in 'abcdefghijklmnopqrstuvwxyz':\n    if c not in txt:\n        print(c)\n        break\nelse:\n    print('None')"}
{"label": 80, "index": 10326, "code": "d = raw_input()\n\nd_list = []\nfor i in range(len(d)):\n    d_list.append(ord(d[i]))\n\nans = ord('a')\nwhile True:\n    if ans not in d_list:\n        break\n    if ans > ord('a')+122:\n        break\n    ans += 1\n\nif ans > 122:\n    print 'None'\nelse:\n    print chr(ans)\n"}
{"label": 80, "index": 10327, "code": "S = set(map(ord,input()))\nalphabet = set(map(ord,'abcdefghijklmnopqrstuvwxyz'))\n\nx = alphabet - S\ntry:\n    print(chr(min(x)))\nexcept:\n    print('None')"}
{"label": 80, "index": 10328, "code": "s2 = \"abcdefghijklmnopqrstuvwxyz\"\ns2 = set(s2)\ns = set(raw_input())\nif len(s) == 26:\n    print \"None\"\na = list(s2 -s)\nif len(a) >0:\n  a.sort()\n  print a[0]"}
{"label": 80, "index": 10329, "code": "print((lambda x:\"None\" if not x else x[0])(sorted(list(set(chr(i) for i in range(97,97+26))-set(input())))))"}
{"label": 80, "index": 10330, "code": "S = input()\nd = {}\n\nfor i in range(ord(\"a\"), ord(\"z\") + 1):\n    d[chr(i)] = False\n\nfor c in S:\n    d[c] = True\n\nans = \"None\"\nfor i in range(ord(\"a\"), ord(\"z\") + 1):\n    if not d[chr(i)]:\n        ans = chr(i)\n        break\nprint(ans)\n"}
{"label": 80, "index": 10331, "code": "S = input()\ncharset = list(set(S))\ndic = [chr(i) for i in range(97, 97+26)]\n\n[dic.remove(c) for c in charset]\nif dic == []:\n    print(\"None\")\nelse:\n    print(dic[0])\n"}
{"label": 80, "index": 10332, "code": "import string\ns = list(input())\na = list(string.ascii_lowercase)\nl = []\nfor index, i in enumerate(a):\n    if i not in s:\n        print(i)\n        break\nelse:\n    print(None)"}
{"label": 80, "index": 10333, "code": "S = str(input())\nalphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\nflag = [0] * 26\nfor i in range(26):\n    if alphabet[i] in S:\n        flag[i] = 1\n\nfor i in range(26):\n    if flag[i] == 0:\n        print(alphabet[i])\n        break\n\nif flag == [1] * 26:\n    print(\"None\")\n"}
{"label": 80, "index": 10334, "code": "print([sorted(set(chr(97+i)for i in range(26))-set(input()))or[\"None\"]][0][0])"}
{"label": 80, "index": 10335, "code": "S = input()\n\nalpha = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\",\n        \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\",\n        \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\",\n        \"v\", \"w\", \"x\", \"y\", \"z\"]\nS = list(set(S))\nS.sort()\n#print(len(S))\nfor i in range(len(S)):\n    if S[i] != alpha[i]:\n        print(alpha[i])\n        break\n    elif i == 25:\n        print(\"None\")\n    elif i == len(S) - 1:\n        print(alpha[i+1])\n"}
{"label": 80, "index": 10336, "code": "#! /bin/python\n# coding:utf-8\n\nimport sys\n\ndef strchr(string, char):\n\tfor token in string:\n\t\tif (token == char):\n\t\t\treturn 1\n\treturn 0\n\nS = raw_input()\n\ntmp = chr(ord('a'))\nfor i in range(0, 26):\n\tif (strchr(S, tmp) == 0):\n\t\tprint tmp\n\t\tsys.exit()\n\ttmp = chr(ord(tmp) + 1)\n\nprint \"None\""}
{"label": 80, "index": 10337, "code": "def B_NotFound(lst):\n    comparison = 'abcdefghijklmnopqrstuvwxyz'\n    lst = sorted(set(lst))  # \u6587\u5b57\u5217\u3092\u30bd\u30fc\u30c8(\u91cd\u8907\u306f\u3044\u3089\u306a\u3044\u306e\u3067\u9664\u304f)\n\n    string = [''] * len(comparison)\n    for i in range(len(lst)):\n        string[i] = lst[i]\n\n    for i in range(len(string)):\n        if string[i] != comparison[i]:\n            return comparison[i]\n    return 'None'\n\ns = input()\nprint(B_NotFound(s))"}
{"label": 80, "index": 10338, "code": "print(min([set(chr(97+i)for i in range(26))-set(input())or[\"None\"]][0]))"}
{"label": 80, "index": 10339, "code": "myinput=input()\nfor c in 'abcdefghijklmnopqrstuvwxyz':\n    if c not in myinput:\n        print(c)\n        break\nelse:\n    print('None')"}
{"label": 80, "index": 10340, "code": "import sys\n\nDICT = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n\nd = set(DICT)\ns = set(list(sys.stdin.readline().strip()))\n\nz = sorted(list(d-s))\n\nif len(z) >= 1:\n    print(z[0])\nelse:\n    print('None')"}
{"label": 80, "index": 10341, "code": "import string\n\nS = set(list(input()))\nans = set(list(string.ascii_lowercase)) - S\nif len(ans) == 0:\n    print(\"None\")\n    exit()\nans = sorted(list(ans))[0]\nprint(ans)\n"}
{"label": 80, "index": 10342, "code": "word_list = list(input().lower())\nalphabet_uniq = list(set(word_list))\nalphabet_uniq.sort()\n\nalphabet_uniq.append('END')\nif len(alphabet_uniq) != 27:\n    for i in range(0, len(alphabet_uniq)):\n        if chr(i + 97) != alphabet_uniq[i]:\n            print(chr(i + 97))\n            break\nelse:\n    print(None)\n"}
{"label": 80, "index": 10343, "code": "s = input()\n\nl = list(s)\n#l=list(set(l))\n#l.sort()\n#print(l)\n\nl_abc = list(\"abcdefghijklmnopqrstuvwxyz\")\n\nl = list(set(l_abc) - set(l))\nl.sort()\n\n#print(l)\n#print(len(l))\n\nif len(l) == 0:\n\tprint(\"None\")\nelse:\n\tprint(l[0])\n"}
{"label": 80, "index": 10344, "code": "import collections\ns = collections.Counter('abcdefghijklmnopqrstuvwxyz')\nl = collections.Counter(input())\nret = 'None'\nfor el in sorted((s+l).items()):\n  if el[1] == 1:\n    ret = el[0]\n    break\nprint(ret)"}
{"label": 80, "index": 10345, "code": "def solve(): # 071B - Not Found\n    alphabet = []\n    for i in range(26):\n        alphabet.append(chr(97 + i))\n    s = list(input())\n\n    for j in s:\n        if j in alphabet:\n            alphabet.remove(j)\n        else:\n            pass\n\n    if len(alphabet) == 0:\n        print(\"None\")\n    else:\n        print(alphabet[0])\n\n\nsolve()"}
{"label": 80, "index": 10346, "code": "x=set(chr(97+i) for i in range(26))-set(input())\nprint(\"None\" if not x else min(x))"}
{"label": 80, "index": 10347, "code": "s = input().strip()\n\nalphabets = 'abcdefghijklmnopqrstuvwxyz'\n\ns_set = set(s)\n\nfor c in alphabets:\n    if c not in s_set:\n        print(c)\n        exit()\nprint('None')\n"}
{"label": 80, "index": 10348, "code": "x=set([chr(i) for i in range(97,97+26)])-set(list(input()))\nprint(\"None\" if not x else sorted(list(x))[0])"}
{"label": 80, "index": 10349, "code": "\nS=map(str,raw_input())\nS.sort()\nflag=1\nSS=[]\nfor i in S:\n    SS.append(ord(i))\nfor i in range(ord(\"a\"),ord(\"z\")+1):\n    if not i in SS:\n        ans=chr(i)\n        print ans\n        flag=0\n        break\nif flag==1:\n    print \"None\""}
{"label": 80, "index": 10350, "code": "S=input()\ncheck=True\n \nfor i in range(0,26):\n    if S.find(chr(i+97))==-1:\n        print(chr(i+97))\n        check=False\n        break\n\n\nprint(\"None\" if check else \"\")\n"}
{"label": 80, "index": 10351, "code": "import sys\ns=str(input())\nfor i in range(97,97+26):\n  if not chr(i) in s:\n    print(chr(i))\n    sys.exit()\nprint(\"None\")"}
{"label": 80, "index": 10352, "code": "import string\nimport sys\n\nS = input()\nl = string.ascii_lowercase\n\nfor c in l:\n  there = False\n  for cs in S:\n    if c == cs:\n      there = True\n  if there == False:\n    print(c)\n    sys.exit()\n\nprint(\"None\")\nsys.exit()\n"}
{"label": 80, "index": 10353, "code": "import string\n\ns = input()\nalp = string.ascii_lowercase\n\ndef search(s, c):\n    for i in s:\n        if i == c:\n            return 1\n    return 0\n\nf = 0\nfor i in alp:\n    if not search(s, i):\n        print (i)\n        f = 1\n        break;\nif not f:\n    print (\"None\")\n"}
{"label": 80, "index": 10354, "code": "S = set(input())          \n\nX = set('abcdefghijklmnopqrstuvwxyz')               \n\nS=X-S                     \n\nprint(\"None\" if S==set() else min(S))               \n"}
{"label": 80, "index": 10355, "code": "import sys\ninp = lambda t: t(sys.stdin.readline().strip())\ninpm = lambda t: map(t, sys.stdin.readline().split())\ninpl = lambda t: list(map(t, sys.stdin.readline().split()))\n\ns = inp(str)\n\np = set()\nfor i in s:\n\tif i not in p:\n\t\tp.add(i)\n\nfor i in range(ord('a'), ord('z') + 1):\n\tif chr(i) not in p:\n\t\tprint(chr(i))\n\t\tbreak\nelse:\n\tprint('None')"}
{"label": 80, "index": 10356, "code": "S = input()\n\nfor i in range(ord('a'), ord('z') + 1):\n    if chr(i) not in S:\n        print(chr(i))\n        break\nelse:\n    print('None')\n"}
{"label": 80, "index": 10357, "code": "s = input()\ns_list = list(s)\ns_set = set(s_list)\nabc_list = [chr(i) for i in range(97, 97+26)]\nif len(s_set) == 26:\n    print(\"None\")\nelse:\n    for a in abc_list:\n        if a in s_set:\n            pass\n        else:\n            print(a)\n            break\n"}
{"label": 80, "index": 10358, "code": "import string\n\n\ndef main():\n    cs = set(input())\n    print(solve(cs))\n\n\ndef solve(cs):\n    for c in string.ascii_lowercase:\n        if c not in cs:\n            return c\n    return 'None'\n\n\nif __name__ == '__main__':\n    main()"}
{"label": 80, "index": 10359, "code": "# -*- encoding: utf-8 -*-\ns = list(input().rstrip())\nalpha = list(map(chr, range(ord('a'), ord('z') + 1)))\n\nfor a in alpha:\n    if a not in s:\n        print(a)\n        break\nelse:\n    print(\"None\")"}
{"label": 80, "index": 10360, "code": "s = input()\ncount =[0 for i in range(26)]\n\nfor i in s:\n    count[ord(i)-ord(\"a\")]+=1\n\n\nfor i in range(len(count)):\n    if count[i] == 0:\n        print(chr(i+ord(\"a\")))\n        break\nelse:\n    print(\"None\")"}
{"label": 80, "index": 10361, "code": "s=input()\nchar=['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\ncheck=False\nfor c in char:\n    if not c in s:\n        print(c,end='')\n        check=True\n        break\nif  check==False:\n    print('None',end='')"}
{"label": 80, "index": 10362, "code": "# -*- coding: utf-8 -*-\n\"\"\"\n\"\"\"\n# \n\ndef main():\n    alphabets = 'abcdefghijklmnopqrstuvwxyz'\n    text = input().strip()\n\n    result = 'None'\n    for c in alphabets:\n        if c not in text:\n            result = c\n            break\n    print(result)\n\n\nif __name__ == '__main__':\n    main()\n"}
{"label": 80, "index": 10363, "code": "S = input()\nans = None\nfor letter in \"abcdefghijklmnopqrstuvwxyz\":\n    if letter not in S:\n        ans = letter\n        break\nprint(ans)\n"}
{"label": 80, "index": 10364, "code": "abc = 'abcdefghijklmnopqrstuvwxyz'\nS = input()\nfor x in abc:\n    if not x in S:\n        print(x)\n        break\nelse:\n    print('None')"}
{"label": 80, "index": 10365, "code": "from collections import Counter\nS = input()\n\ncounter = dict(Counter(S))\ncounter = sorted(counter) \nalphabets = \"abcdefghijklmnopqrstuvwxyz\"\n\nfound = False\nfor letter in alphabets:\n    if letter in counter:\n        continue\n    else:\n        found = True\n        print(letter)\n        break\n\nif found is not True:\n    print(\"None\")\n"}
{"label": 80, "index": 10366, "code": "import sys\n\nS=[]\n\nS = raw_input()\n\ncheck=[chr(i) for i in range(97, 97+26)]\nn=len(check)\n\nfor i in range (n):\n    o=0\n    if(S.count(check[i])<=0):\n        print check[i]\n        o=1\n        break\n\n\nif(o==0):\n    print \"None\""}
{"label": 80, "index": 10367, "code": "import math\ndef search(x,n):\n\tcurPos=0\n\tlog2=int(math.log(n,2))\n\tnewPos=0\n\tif s[curPos]==x:\n\t\treturn True\n\twhile log2 >=0:\n\t\tnewPos=curPos + (1 << log2)\n\t\tif newPos < n and s[newPos]<=x:\n\t\t\tcurPos=newPos\n\t\tif s[curPos]==x:\n\t\t\treturn True\n\t\tlog2-=1\n\treturn False\n\ns=input()\ns=list(s)\ns.sort()\nn=len(s)\ns_str=[chr(x) for x in range(97,123)]\nFound=False\nfor i in s_str:\n\tres=search(i,n)\n\tif not res:\n\t\tprint(i)\n\t\tFound=True\n\t\tbreak\nif not Found:\n\tprint('None')"}
{"label": 80, "index": 10368, "code": "S = input()\nfor i in range(26):\n    a = chr(ord('a') + i)\n    if not a in S:\n        print(a)\n        break\nelse:\n    print('None')\n"}
{"label": 80, "index": 10369, "code": "\nS = input()\nres = \"None\"\n\nfor c in range(26):\n    if chr(ord('a') + c) not in S:\n        res = chr(ord('a') + c)\n        break\nprint(res)"}
{"label": 80, "index": 10370, "code": "# coding=utf-8\nS = list(raw_input())\n\nalpha = 'abcdefghijklmnopqrstuvwxyz'\nt = True\nfor a in alpha:\n    if a not in S:\n        print a\n        t = False\n        break\nif t:\n    print None"}
{"label": 80, "index": 10371, "code": "S = input()\nalphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\nfor alp in alphabet:\n    if alp not in S:\n        print(alp)\n        break\nelse:\n    print(\"None\")"}
{"label": 80, "index": 10372, "code": "S = input()\nl = 'abcdefghijklmnopqrstuvwxyz'\n\nfor x in l:\n    if not x in S:\n        print(x)\n        break\n    else:\n        if x == 'z':\n            print('None')"}
{"label": 80, "index": 10373, "code": "print(min(set(chr(97+i)for i in range(26))-set(input())or[\"None\"]))"}
{"label": 80, "index": 10374, "code": "s = set(input())\nalp = set('abcdefghijiklmnopqrstuvwxyz')\ntry:\n\tprint(sorted(list(alp - s))[0])\nexcept:\n\tprint('None')"}
{"label": 80, "index": 10375, "code": "string=input()\nl=\"abcdefghijklmnopqrstuvwxyz\"\nfor i in l:\n    if i not in string:\n        print(i)\n        break\nelse:\n    print(\"None\")"}
{"label": 80, "index": 10376, "code": "print((lambda s:next((c for c in map(chr,range(97,123))if c not in s),\"None\"))(input()))"}
{"label": 80, "index": 10377, "code": "\n\ns = input()\ns = set(list(s))\n\nans = 'None'\n\nfor alpha in list('abcdefghijklmnopqrstuvwxyz'):\n    if alpha not in s:\n        ans = alpha\n        break\n\nprint(ans)\n"}
{"label": 80, "index": 10378, "code": "def main():\n    s = input()\n    flag = True\n    for i in range(ord('a'), ord('z')+1):\n        if chr(i) not in s:\n            print(chr(i))\n            flag = None\n            break\n    if flag:\n        print(\"None\")\n        \n\nif __name__ == \"__main__\":\n    main()"}
{"label": 80, "index": 10379, "code": "s = input()\ndata = list(set(s))\nalp = list(\"abcdefghijklmnopqrstuvwxyz\")\ndata.sort()\nfor i in alp:\n    if len(data) == 0:\n        print(i)\n        break\n    else:\n        if i != data[0]:\n            print(i)\n            break\n        else:\n            if i == \"z\":\n                print(\"None\")\n            del data[0]\n"}
{"label": 80, "index": 10380, "code": "S = input()\nls = [chr(i) for i in range(ord(\"a\"),ord(\"z\")+1)]\nfor c in S:\n    if c in ls:\n        ls.remove(c)\nif ls==[]:\n    print(\"None\")\nelse:\n    print(ls[0])"}
{"label": 80, "index": 10381, "code": "st = list(input())\nls = list(set(st))\nabc = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\nset_ab = set(abc) - set(ls)\nans = list(set_ab)\nans.sort()\nif ans:\n    print(ans[0])\nelse:\n    print(\"None\")\n"}
{"label": 80, "index": 10382, "code": "# -*- coding:utf-8 -*-\n\nS = input()\nCHR = [chr(i) for i in range(97, 97+26)]\n\njudge = 1\ni = 0\n\nwhile(judge > 0 and i <= 25):\n    judge = S.count(CHR[i])\n    i = i+1\n\nif(judge==0):\n    print(CHR[i-1])\nelse:\n    print(\"None\")\n\n\n"}
{"label": 80, "index": 10383, "code": "S=set(input())\nk=0\nfor i in range(97, 97+26):\n    s0=set(chr(i))\n    if(not(s0.issubset(S)) and k==0):\n        k=chr(i)\n        break\n    \nif(k!=0):\n    print(k)\nelse:\n    print(\"None\")"}
{"label": 80, "index": 10384, "code": "print((lambda x:\"None\" if not x else min(x))(set(chr(97+i) for i in range(26))-set(input())))"}
{"label": 80, "index": 10385, "code": "S = raw_input()\nss = set(S)\nans = set(\"abcdefghijklmnopqrstuvwxyz\").difference(ss)\n\nif len(ans): print(min(ans))\nelse: print(\"None\")"}
{"label": 80, "index": 10386, "code": "S = input()\nflag = False\nfor i in range(26):\n    c = chr(ord('a')+i)\n    if c not in S:\n        print(c)\n        flag = True\n        break\nif flag == False:\n    print('None')"}
{"label": 80, "index": 10387, "code": "print((lambda x:\"None\" if not x else x[0])(sorted(set(chr(97+i) for i in range(26))-set(input()))))"}
{"label": 80, "index": 10388, "code": "import sys\nS = input()\na = 'abcdefghijklmnopqrstuvwxyz'\na = 'abcdefghijklmnopqrstuvwxyz'\nfor aa in a:\n    if aa in S:\n        pass\n    else:\n        print(aa)\n        sys.exit()\nprint('None')"}
{"label": 80, "index": 10389, "code": "string=raw_input()\nallist=['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\nans='None'\nfor i in range(len(allist)):\n    if allist[i] not in string:\n        ans=allist[i]\n        break\nprint ans\n           "}
{"label": 80, "index": 10390, "code": "a = input()\n\nalpha = [chr(i) for i in range(97, 97+26)]\n\nflag = True;\nfor c in alpha:\n    if c not in a:\n        print(c)\n        flag = False\n        break\n\nif flag:\n    print(\"None\")\n"}
{"label": 80, "index": 10391, "code": "S = input()\n\nfor i in range(97, 97 + 26):\n    if chr(i) not in S:\n        print(chr(i))\n        exit()\n\nprint('None')\n"}
{"label": 80, "index": 10392, "code": "S = input()\ncheck = list(\"abcdefghijklmnopqrstuvwxyz\")\n\nfor c in check:\n    if not c in S:\n        print(c)\n        break\nelse:\n    print(\"None\")"}
{"label": 80, "index": 10393, "code": "s = input()\nswi = 0\nlst = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \\\n       \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \\\n       \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n\nfor i in range(26):\n    if (lst[i] in s) == False:\n        print(lst[i])\n        swi = 1\n        break\nif swi == 0:\n    print(\"None\")"}
{"label": 80, "index": 10394, "code": "bun=input()\nmm=\"abcdefghijklmnopqrstuvwxyz\"\nfor x in range(len(mm)):\n    if mm[x] not in bun:\n        print(mm[x])\n        break\nelse:\n    print(\"None\")\n"}
{"label": 80, "index": 10395, "code": "S=input()\nans='None'\nfor c in range(26):\n  if chr(97+c) not in S:\n    ans = chr(97+c)\n    break\nprint(ans)"}
{"label": 80, "index": 10396, "code": "s = raw_input()\nfor i in range(26):\n    c = chr(ord('a')+i)\n    if c in s:\n        continue\n    else:\n        print c\n        break\nelse:\n    print 'None'\n"}
{"label": 80, "index": 10397, "code": "if __name__ == '__main__':\n    S = input()\n    dic = [chr(i) for i in range(97, 123)]\n    j=0\n    for i in range(len(dic)):\n        if dic[i] not in S:\n            j = 1\n            print(dic[i])\n            break\n    if j == 0:\n        print('None')"}
{"label": 80, "index": 10398, "code": "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\n \nsys.setrecursionlimit(10**7)\ninf = 10**20\ngosa = 1.0 / 10**10\nmod = 10**9 + 7\n \ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\n \n \ndef main():\n    c = collections.Counter(S())\n    for k in string.ascii_lowercase:\n        if c[k] == 0:\n            return k\n    return 'None'\n \nprint(main())"}
{"label": 80, "index": 10399, "code": "def main():\n    S = input()\n\n    for i in range(97, 123):\n        if not chr(i) in S:\n            ans = chr(i)\n            break\n    else:\n        ans = 'None'\n\n    print(ans)\n\nmain()\n"}
{"label": 81, "index": 10400, "code": "a,b=map(int,input().split())\nprint(a-b if a-b>0 else 0)"}
{"label": 81, "index": 10401, "code": "#ABC072A\n\nx,t=map(int,raw_input().split())\nif x>=t:\n print x-t\nelse:\n print 0\n"}
{"label": 81, "index": 10402, "code": "tmp = input()\nX = int(tmp.split()[0])\nt = int(tmp.split()[1])\nif X - t >= 0:\n    print(X - t)\nelse:\n    print(0)"}
{"label": 81, "index": 10403, "code": "# -*- coding:utf-8 -*-\nX, t = map(int, input().split())\nif X-t >= 0:\n    print(X-t)\nelse:\n    print(0)"}
{"label": 81, "index": 10404, "code": "X, t=[int(i) for i in input().split()]\nif(X-t < 0):\n    print(0)\nelse:\n    print(X-t)"}
{"label": 81, "index": 10405, "code": "nm = input().strip().split(' ')\nn = int(nm[0])\nm = int(nm[1])\n        \nr = n- m\n        \nif r < 0:\n    r =0\nprint(r)"}
{"label": 81, "index": 10406, "code": "X,t=map(int,input().split())\nif (X>t):\n print(X-t)\nelse:\n print(0)\n\n"}
{"label": 81, "index": 10407, "code": "# coding: utf-8\ndef get_ln_inputs():\n    return input().split()\n\n\ndef get_ln_int_inputs():\n    return list(map(int, get_ln_inputs()))\n\n\ndef main():\n    X, t = get_ln_int_inputs()\n    print(max(0, X - t))\n    return\n\n\nmain()"}
{"label": 81, "index": 10408, "code": "x, t = map(int, input().split(\" \"))\n\nprint(max(x-t, 0))\n"}
{"label": 81, "index": 10409, "code": "x,t=map(int, input().split())\nprint(max(0, x-t))\n"}
{"label": 81, "index": 10410, "code": "X, t = [int(x) for x in input().split()]\n\nRest = X - t\nif Rest < 0:\n  Rest = 0\n\nprint(Rest)"}
{"label": 81, "index": 10411, "code": "i = list(map(int, input().split()))\nif i[0] > i[1]:\n    print(i[0]-i[1])\nelse:\n    print(0)\n"}
{"label": 81, "index": 10412, "code": "X, t = map(int, input().split())\nif X <= t:\n    print(0)\nelse:\n    print(str(X - t))"}
{"label": 81, "index": 10413, "code": "Xt = list(map(int,input().split()))\nprint(max(Xt[0]-Xt[1],0))"}
{"label": 81, "index": 10414, "code": "x,t = map(int, input().split())\nm = max(x-t,0)\nprint(m)"}
{"label": 81, "index": 10415, "code": "X, t = input().split()\nX, t = int(X),int(t)\n\nres = X -t\n\nif res >= 0:\n    print(res)\nelse:\n    print(0)"}
{"label": 81, "index": 10416, "code": "X, t = [int(x) for x in input().split()]\n\nprint(X - t if X >= t else 0)"}
{"label": 81, "index": 10417, "code": "X, t = map(int, input().split())\nif X > t:\n    print(X - t)\nelse:\n    print(0)"}
{"label": 81, "index": 10418, "code": "X, t = map(int, input().split(' '))\nans = X - t\nif ans < 0:\n    ans = 0\nprint(ans)"}
{"label": 81, "index": 10419, "code": "x , t = map(int ,input().split() )\n\n\nif t < x:\n  print( x - t )\nelse:\n  print( 0 )"}
{"label": 81, "index": 10420, "code": "X, t = list(map(int, input().split()))\n\ndif = X - t\nif dif < 0:\n    print(0)\nelse:\n    print(dif)"}
{"label": 81, "index": 10421, "code": "x, t = map(int, input().split())\nif t > x:\n  print(0)\nelse:\n  print(x - t)"}
{"label": 81, "index": 10422, "code": "x, y = list(map(int, input().split()))\nprint(x-y if x-y > 0 else 0)"}
{"label": 81, "index": 10423, "code": "temp = input().split(\" \")\nsuna = int(temp[0])\ntime = int(temp[1])\nans = suna - time\nif ans <= 0:\n    ans = 0\nprint(ans)\n "}
{"label": 81, "index": 10424, "code": "x, t = map(int, input().split())\nprint(x-t if x > t else 0)"}
{"label": 81, "index": 10425, "code": "def a():\n    x, t = map(int, input().split())\n    print(max(0, x - t))\n\na()\n"}
{"label": 81, "index": 10426, "code": "# -*- coding: utf-8 -*-\n\nx, t = list(map(int, input().split()))\nprint(x - t) if x - t >= 0 else print(0)\n"}
{"label": 81, "index": 10427, "code": "def read(): return list(map(int, input().split()))\n\nx, t = read()\nprint(max(0, x - t))"}
{"label": 81, "index": 10428, "code": "a,b=map(int,input().split())\nprint(max(0,a-b))"}
{"label": 81, "index": 10429, "code": "X, t = map(int, input().split())\nprint(max(0, X-t))"}
{"label": 81, "index": 10430, "code": "X,t = map(int, input().split())\nif X-t<0:\n    print(str(0))\nelse:\n    print(str(X-t))"}
{"label": 81, "index": 10431, "code": "a, b = map(int, input().split())\nprint(max(0, a-b))"}
{"label": 81, "index": 10432, "code": "X, t = map(int, input().split())\nif X >= t:\n    print(X - t)\nelse:\n    print(0)\n"}
{"label": 81, "index": 10433, "code": "import numpy as np\nx, t = map(int, input().split())\nprint(max(x-t, 0))"}
{"label": 81, "index": 10434, "code": "X,t = map(int, input().split())\n\nans = X-t\nif ans < 0:\n    ans = 0\n\nprint(str(ans))"}
{"label": 81, "index": 10435, "code": "a, b = map(int, input().split())\nprint(max(0, a-b))"}
{"label": 81, "index": 10436, "code": "def hourglass():\n    X, t = list(map(int, input().split(\" \")))\n    if X - t <= 0:\n        print(0)\n    else:\n        print(X - t)\n        \n \nhourglass()"}
{"label": 81, "index": 10437, "code": "X, t = map(int, input().split())\t\t# 5 7\n\nprint( max(0, X-t) )\n"}
{"label": 81, "index": 10438, "code": "def main():\n    X, t = map(int, input().split())\n    print(max(X - t, 0))\n\nif __name__ == '__main__':\n    main()\n"}
{"label": 81, "index": 10439, "code": "X, t = map(int, input().split())\nprint(max(0, X - t))\n"}
{"label": 81, "index": 10440, "code": "X,t=list(map(int,raw_input().split()))\n\nif X-t>=0:\n\tprint X-t\nelif X-t<0:\n\tprint 0"}
{"label": 81, "index": 10441, "code": "X, t = map(int,input().split())\nprint(max(0, X-t))"}
{"label": 81, "index": 10442, "code": "X,t = [int(i) for i in input().split()]\nprint(max(X-t,0))"}
{"label": 81, "index": 10443, "code": "#!usr/bim/python\n#! -*- coding: utf-8 -*-\n\nxg = raw_input()\nxg = xg.split()\nx,g = map(int,xg)\n\nans = x-g\n\nif ans < 0:\n    ans = 0\n\nprint ans\n"}
{"label": 81, "index": 10444, "code": "if __name__ == '__main__':\n    x, t = list(map(int, input().split(\" \")))\n    print(max(0, x - t))\n"}
{"label": 81, "index": 10445, "code": "X,t = map(int,input().split(\" \"))\n\nif X-t>0:\n    print(X-t)\nelse:\n    print(0)\n"}
{"label": 81, "index": 10446, "code": "# -*- coding: utf-8 -*-\n\"\"\"\n\n\"\"\"\n\n\n\nif __name__ == '__main__':\n    start, elapse = [int(x) for x in input().split(' ')]\n    if elapse > start:\n        print('0')\n    else:\n        print('{}'.format(start - elapse))\n\n"}
{"label": 81, "index": 10447, "code": "x,t=map(int,input().split())\nprint(max(x-t,0))"}
{"label": 81, "index": 10448, "code": "X, t = list(map(int, input().split()))\nprint(max(0, X - t))\n"}
{"label": 81, "index": 10449, "code": "x,t=map(int,input().split())\nif x>= t:\n    print(x-t)\nelse:\n    print(0)"}
{"label": 81, "index": 10450, "code": "if __name__ == '__main__':\n    X, t = [int(i) for i in input().split()]\n    if X - t < 0:\n        print(0)\n    else:\n        print(X - t)\n"}
{"label": 81, "index": 10451, "code": "import sys\n\ndef main():\n    X, t = list(map(int, input().split()))\n    if X - t >= 0:\n        print(X - t)\n    else:\n        print(0)\n\nif __name__ == '__main__':\n    main()\n"}
{"label": 81, "index": 10452, "code": "xt = list(map(int,input().split()))\nif xt[0] > xt[1]:\n    print(xt[0]-xt[1])\nelse:\n    print(0)"}
{"label": 81, "index": 10453, "code": "a, b = map(int, input().split())\nprint(max(0, a - b))"}
{"label": 81, "index": 10454, "code": "i, j = map(int, input().split(\" \"))\nprint(i-j if i >= j else 0)\n"}
{"label": 81, "index": 10455, "code": "x,t = map(int, raw_input().split())\nprint max(0, x-t)\n"}
{"label": 81, "index": 10456, "code": "X, t = map(int, input().split())\nif X > t:\n    print(X - t)\nelse:\n    print(0)"}
{"label": 81, "index": 10457, "code": "from sys import stdin\nn,x = map(int,stdin.readline().split())\nprint max(0,n-x)"}
{"label": 81, "index": 10458, "code": "X,t =map(int,input().split())\nif X >= t:\n    print(X-t)\nelse:\n    print(0)"}
{"label": 81, "index": 10459, "code": "X,t=map(int,raw_input().split(' '))\n\nr=X-t\n\nif r<0:\n    print 0\nelse:\n    print r"}
{"label": 81, "index": 10460, "code": "def solve():\n    X, t = list(map(int, input().split(\" \")))\n    if X - t <= 0:\n        print(0)\n    else:\n        print(X - t)\n        \n\nsolve()"}
{"label": 81, "index": 10461, "code": "X,t=map(int,input().split())\nprint(X-t) if X-t>0 else print(0)"}
{"label": 81, "index": 10462, "code": "x,t = map(int,input().split())\nans = x - t\nif ans > 0:\n    print(ans)\nelse:\n    print(\"0\")"}
{"label": 81, "index": 10463, "code": "if __name__ == '__main__':\n    X, t = map(int, input().split())\n    re = X-t\n    if re>0:\n        print(re)\n    else:\n        print(0)"}
{"label": 81, "index": 10464, "code": "x, t = map(int, input().split())\n\nprint(max(x - t, 0))"}
{"label": 81, "index": 10465, "code": "x,t = map(int,raw_input().split())\nif x < t:\n    print 0\nelse:\n    print x - t"}
{"label": 81, "index": 10466, "code": "X, t = map(int, input().split())\nprint(max(0, X-t))"}
{"label": 81, "index": 10467, "code": "x,y=map(int, input().split())\nprint(x-y if x-y>=0 else 0)\n"}
{"label": 81, "index": 10468, "code": "x,t=map(int,input().split())\nprint(max(x-t,0))"}
{"label": 81, "index": 10469, "code": "X, t = [int(x) for x in input().split()]\nif X<=t :\n    print(0)\nelse :\n    print(X-t)\n"}
{"label": 81, "index": 10470, "code": "l = list(map(int, input().split()))\na1=l[0]-l[1]\nif a1>0:\n    print(a1)\nelse:\n    print(0)"}
{"label": 81, "index": 10471, "code": "a, b = map(int,input().split())\nif a >= b : print (a-b)\nelse : print (0)"}
{"label": 81, "index": 10472, "code": "a, t = map(int, raw_input().split())\nif t >= a:\n    print(0)\nelse:\n    print(a-t)"}
{"label": 81, "index": 10473, "code": "xt=input().split()\nx=int(xt[0])\nt=int(xt[1])\nans=x-t\nif ans<0:\n    ans=0\nprint(ans)\n"}
{"label": 81, "index": 10474, "code": "import numpy as np\nx, t = map(int, input().split())\nprint(np.max(np.array([x-t, 0])))"}
{"label": 81, "index": 10475, "code": "XT=(input()).split(' ')\nprint(((int)(XT[0])-(int)(XT[1]) )if (int)(XT[0])>(int)(XT[1]) else 0)"}
{"label": 81, "index": 10476, "code": "x,t=map(int, input().split())\nprint(max(x-t, 0))"}
{"label": 81, "index": 10477, "code": "X, t = list(map(int, input().split(' ')))\nprint(X - t if (X - t) >= 0 else 0)\n"}
{"label": 81, "index": 10478, "code": "# problem A\nX, t = map(int, input().split())\nif X-t > 0:\n    print(X-t)\nelse:\n    print(0)"}
{"label": 81, "index": 10479, "code": "X, t = list(map(int, input().split()))\nprint(max(0, X-t))\n"}
{"label": 81, "index": 10480, "code": "import os \na,b = os.read(0,100).split(b' ')\na = int(a.decode())\nb = int(b.decode())\nprint(max(a-b,0))"}
{"label": 81, "index": 10481, "code": "x, t = list(map(int, input().split()))\nprint(max((x - t), 0))"}
{"label": 81, "index": 10482, "code": "x = input().split()\na = int(x[0])\nb = int(x[1])\nc = a-b\nif a <= b:\n print(\"0\")\nelse:\n print(c)"}
{"label": 81, "index": 10483, "code": "x, t = (int(i) for i in input().split())\nans = x-t\nif ans < 0:\n    ans = 0\nprint(ans)"}
{"label": 81, "index": 10484, "code": "X, t = list(map(int, input().split()))\nprint(max(0, X-t))"}
{"label": 81, "index": 10485, "code": "a =  map(int, raw_input().strip().split())\nans = a[0] - a[1]\nif ans > 0:\n\tprint(ans)\nelse:\n\tprint('0')"}
{"label": 81, "index": 10486, "code": "myinput=input()\nX,t=map(int,myinput.split())\nif X<t:\n    print(0)\nelse:\n    print(X-t)"}
{"label": 81, "index": 10487, "code": "# encoding: \"utf-8\"\n\nclass Stdin:\n    @staticmethod\n    def read_line(converter=str):\n        return [converter(x) for x in input().split()]\n    \n    @staticmethod\n    def read_lines(n, converter=str):\n        result = list()\n        for _ in range(n):\n            result.append(Stdin.read_line(converter))\n        return result\n    \n    @staticmethod\n    def convert(data, converter):\n        assert(len(data) == len(converter))\n        return tuple(map(lambda x, f: f(x), data, converter))\n\n    @staticmethod\n    def convert_lines(datas, n, converter):\n        return [converter(data, n, converter) for data in datas]\n\n\ndef main():\n    x, t = Stdin.read_line(converter=int)\n    r = x - t\n    if r < 0:\n        r = 0\n    print(r)\n\nif __name__ == \"__main__\":\n    main()"}
{"label": 81, "index": 10488, "code": "xtstr = input().split()\nx, t = int(xtstr[0]),  int(xtstr[1])\nif x >= t:\n    print(x-t)\nelse:\n    print('0')"}
{"label": 81, "index": 10489, "code": "X, t = map(int, input().split())\ndiff = X-t\nif diff > 0:\n  print (diff)\nelse:\n  print (0)"}
{"label": 81, "index": 10490, "code": "a = map( int, raw_input().split(' '))\nif (a[0] - a[1] >= 0):\n\tprint a[0] - a[1]\nelse:\n\tprint 0"}
{"label": 81, "index": 10491, "code": "x, t = (int(i) for i in input().split())\nif x-t<0:\n    print(0)\nelse:\n    print(x-t)"}
{"label": 81, "index": 10492, "code": "X, t = map(int, input().split())\n \nif X-t>=0:\n    print(X-t)\nelse:\n    print(\"0\")"}
{"label": 81, "index": 10493, "code": "def solve():\n    X, t = map(int, input().split())\n    if (X-t) < 0:\n        print(0)\n    else:\n        print(X-t)\n\nif __name__ == '__main__':\n    solve()\n"}
{"label": 81, "index": 10494, "code": "X, t = map(int, input().split())\n\nres = max(0, X-t)\nprint(res)"}
{"label": 81, "index": 10495, "code": "X, t = map(int, input().split())\nif X <= t:\n\tprint('0')\nelse:\n\tprint(X-t)"}
{"label": 81, "index": 10496, "code": "X, t = map(int, input().split())\n\ng = X - t\n\nif g >= 0:\n    print(g)\nelse:\n    print(0)\n \n"}
{"label": 81, "index": 10497, "code": "X, t = map(int, input().split())\nif X>t:\n    print(X - t)\nelse:\n    print(0)"}
{"label": 81, "index": 10498, "code": "x,t = map(int,input().split())\nprint(max(0,x-t))"}
{"label": 81, "index": 10499, "code": "#ABC072A\n\nx,t=map(int,raw_input().split())\nif x-t>0:\n print x-t\nelse:\n print 0\n"}
{"label": 81, "index": 10500, "code": "a,b = map(int, input().split())\nc=a-b\nif c>=0:\n    print(c)\nelse:\n    print(0)"}
{"label": 81, "index": 10501, "code": "X, t = map(int, input().split())\nprint(X - t if X - t > 0 else 0)"}
{"label": 81, "index": 10502, "code": "a, b = map(int, input().split())\nprint(max(0, a - b))"}
{"label": 81, "index": 10503, "code": "from collections import defaultdict\nfrom itertools import product, groupby\nfrom math import pi\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right\nINF = 10 ** 10\n\n\ndef main():\n    X, t = map(int, input().split())\n    print(max(0, X - t))\n\n\nif __name__ == '__main__':\n    main()\n"}
{"label": 81, "index": 10504, "code": "x,t = map(int, input().split())\nif x -t > 0:\n    print(x-t)\nelse:\n    print(0)"}
{"label": 81, "index": 10505, "code": "\n\nX, t = map(int, input().split())\nY = max(0, X - t)\nprint(Y)"}
{"label": 81, "index": 10506, "code": "# -*- encoding: utf-8 -*-\nx, t = map(int, input().rstrip().split(' '))\n\nprint(max(0, x - 1 * t))"}
{"label": 81, "index": 10507, "code": "def main():\n    x, t = map(int, input().split())\n\n    if t < x: print(x-t)\n    else: print(0)\n\n\nif __name__ == \"__main__\":\n    main()"}
{"label": 81, "index": 10508, "code": "i, j = [int(i) for i in input().split()]\nprint(i-j) if j < i else print(0)"}
{"label": 81, "index": 10509, "code": "a,b=map(int,input().split())\nprint(max(a-b,0))"}
{"label": 81, "index": 10510, "code": "#\u7802\u6642\u8a08\u306e\u7802X(\u79d2)\u3092\u30bb\u30c3\u30c8 #\u6e2c\u3063\u305f\u6642\u9593t\u3092\u30bb\u30c3\u30c8\nX , t = map(int,input().split())\n#\u6b8b\u308a\u6642\u9593\u3092\u8868\u793a (X - t)\n#X > t\u306e\u3068\u304d\nif X > t:\n    time = X - t\n#X <= t\u306e\u3068\u304d\nelse:\n    time = 0\nprint(time)\n"}
{"label": 81, "index": 10511, "code": "X, t = map(int, input().split())\nprint(max(0, X - t))\n"}
{"label": 81, "index": 10512, "code": "X, t = list(map(int, input().split()))\n\nprint(max(X - t, 0))\n"}
{"label": 81, "index": 10513, "code": "def main():\n    X, t = [int(i) for i in input().split()]\n    #print(X)\n    #print(t)\n    \n    ans = X - t\n    \n    if(ans < 0):\n        ans = 0\n        \n    print(ans)\n    \nif __name__==\"__main__\":\n    main()"}
{"label": 81, "index": 10514, "code": "X, t = map(int, raw_input().split())    \nprint max(X - t, 0)\n"}
{"label": 81, "index": 10515, "code": "X, t = map(int, input().split())\n\nif t <= X:\n    print(X - t)\nelse:\n    print(0)\n"}
{"label": 81, "index": 10516, "code": "#!/usr/bin/env python\n\nX,t=map(int,input().split())\nif t>X:\n    ans=0\nelse:\n    ans=X-t\n\nprint(ans)"}
{"label": 81, "index": 10517, "code": "n, m = map(int, input().split())\nx = n - m\nif x <= 0:\n    x = 0\nprint(x)"}
{"label": 81, "index": 10518, "code": "l = input().split()\nx = int(l[0])\nt = int(l[1])\ny = x - t\nif y > 0:\n\tprint('{0}'.format(y))\nelse:\n\tprint('0')"}
{"label": 81, "index": 10519, "code": "import sys\n\na = map(int,raw_input().strip().split(\" \"))\n\nresult = a[0] - a[1]\n\nif result >= 0:\n    print result\nelse:\n    print 0"}
{"label": 81, "index": 10520, "code": "a,b=map(int,raw_input().split())\nprint a-b if a>b else 0"}
{"label": 81, "index": 10521, "code": "x,y=map(int,input().split())\nprint(max(0,x-y))"}
{"label": 81, "index": 10522, "code": "def main():\n    X, t = [int(i) for i in input().split()]\n    #print(X)\n    #print(t)\n    \n    ans = X - t\n    \n    if(ans < 0):\n        ans = 0\n        \n    print(ans)\n    \nif __name__==\"__main__\":\n    main()"}
{"label": 81, "index": 10523, "code": "print(max(0, (lambda x:x[0]-x[1])([int(i) for i\n             in input().split()])))"}
{"label": 81, "index": 10524, "code": "X ,t=map(int,input().split())\n\nif X-t>0:\n    print(X-t)\nelse:\n    print(0)\n"}
{"label": 81, "index": 10525, "code": "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\neps = 1.0 / 10**10\nmod = 10**9+7\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\n\n\ndef main():\n    x,t = LI()\n\n    return max(x-t,0)\n\n\nprint(main())\n\n\n\n\n"}
{"label": 81, "index": 10526, "code": "import os \na,b = os.read(0,100).split(b' ')\na = int(a.decode())\nb = int(b.decode())\nos.write(1,str(max(a-b,0)).encode())"}
{"label": 81, "index": 10527, "code": "def A_Sandglass2(X, t):\n    return max(X - t, 0)\n\nX,t = [int(i) for i in input().split()]\nprint(A_Sandglass2(X, t))"}
{"label": 81, "index": 10528, "code": "X, t = map(int, raw_input().split())\nprint max(X-t, 0)"}
{"label": 81, "index": 10529, "code": "tmp=map(int, raw_input().split(\" \"))\nif tmp[0]<tmp[1]:\n    print 0\nelse:\n    print tmp[0]-tmp[1]\n"}
{"label": 82, "index": 10530, "code": "print(input()[::2])\n"}
{"label": 82, "index": 10531, "code": "s = input()\ns2 = ''\nfor i in range(len(s)):\n    if (i % 2 == 0):\n        s2 += s[i]\n\nprint(s2) "}
{"label": 82, "index": 10532, "code": "s = input()\nt = len(s)\nfor i in range(0,t,2) :\n    print (s[i] , end='')"}
{"label": 82, "index": 10533, "code": "s=input()\nl=[x for x in s[::2]]\nprint(\"\".join(l))"}
{"label": 82, "index": 10534, "code": "s = input()\no = \"\"\nfor i, ss in enumerate(s):\n    if i % 2 == 0:\n        o = o + ss\nprint(o)"}
{"label": 82, "index": 10535, "code": "s = input()\n\nprint(s[::2])\n"}
{"label": 82, "index": 10536, "code": "s = input()\nfor i in range(len(s)):\n    if i % 2 == 0:\n        print(s[i], end=\"\")\nprint(\"\")"}
{"label": 82, "index": 10537, "code": "print(input()[::2])"}
{"label": 82, "index": 10538, "code": "def main():\n    S =  input()\n    #print(S)\n    #print(S[1])\n    #print(t)\n    \n    string = \"\".join( [S[i] for i in range(0, len(S), 2)] )\n    print(string)\n    \n    \nif __name__==\"__main__\":\n    main()"}
{"label": 82, "index": 10539, "code": "s = raw_input()\nprint \"\".join(s[i] for i in xrange(len(s)) if i%2 == 0)"}
{"label": 82, "index": 10540, "code": "print(\"\".join([j for i,j in enumerate(input()) if i%2==0]))\n"}
{"label": 82, "index": 10541, "code": "#coding:utf-8\n\nstring = input()\n\nres = \"\"\nfor i, char in enumerate(string):\n    if i % 2 == 0:\n        res += char\nprint (res)\n"}
{"label": 82, "index": 10542, "code": "s = input()\nt = len(s)\nfor i in range(0,t,2) :\n    print (s[i] , end='')\n    \nprint()"}
{"label": 82, "index": 10543, "code": "s = input()\nline = s[::2]\nprint(line)"}
{"label": 82, "index": 10544, "code": "def main():\n    print(input()[::2])\n\nif __name__ == '__main__':\n    main()\n"}
{"label": 82, "index": 10545, "code": "s = input()\nfor i, e in enumerate(s):\n    if i % 2 == 0:\n        print(e, end=\"\")\nprint(\"\")\n"}
{"label": 82, "index": 10546, "code": "import sys\n\n# sys.stdin = open('b1.in')\n\n\ndef read_int_list():\n    return list(map(int, input().split()))\n\n\ndef read_str_list():\n    return input().split()\n\n\ndef read_int():\n    return int(input())\n\n\ndef read_str():\n    return input()\n\n\ndef main():\n    s = read_str()\n    res = s[0::2]\n    print(res)\n\n\nmain()\n"}
{"label": 82, "index": 10547, "code": "s = input()\nfor i in range(0, len(s), 2):\n    print(s[i], end='')\nprint()"}
{"label": 82, "index": 10548, "code": "import sys\n\n\nS = raw_input()\n\nS_len=len(S)\n\nif(S_len%2==0):\n    S_len=S_len/2\nelif(S_len%2>0):\n    S_len=S_len/2+1\n\nlist=''\nfor i in range(S_len):\n    i=i*2\n    list+=S[i]\n\nprint list"}
{"label": 82, "index": 10549, "code": "print(str(input())[::2])"}
{"label": 82, "index": 10550, "code": "def B_OddString(s):\n    ans = ''\n    for i in range(len(s)):\n        if i % 2 == 0:\n            ans += s[i]\n    return ans\n\ns = input()\nprint(B_OddString(s))"}
{"label": 82, "index": 10551, "code": "def oddOut():\n    s = str(input())\n    print(s[::2])\noddOut()"}
{"label": 82, "index": 10552, "code": "def b():\n    s = input()\n    print(s[::2])\n\nb()\n"}
{"label": 82, "index": 10553, "code": "s = input()\na = \"\"\n\nfor i in range(0,len(s),2):\n    a = a+s[i]\n    \nprint(a)\n"}
{"label": 82, "index": 10554, "code": "s = input()\nss = [s_ for idx, s_ in enumerate(list(s)) if idx % 2 == 0]\nprint(''.join(ss))\n"}
{"label": 82, "index": 10555, "code": "s = input()\n\nfor i , t in enumerate(s):\n  if i%2 == 0:\n    print(t,end = \"\")\nprint()"}
{"label": 82, "index": 10556, "code": "s=input()\nprint(s[::2])"}
{"label": 82, "index": 10557, "code": "print(input()[::2])"}
{"label": 82, "index": 10558, "code": "print(input()[::2])\n"}
{"label": 82, "index": 10559, "code": "print(input()[::2])"}
{"label": 82, "index": 10560, "code": "print(input()[::2])"}
{"label": 82, "index": 10561, "code": "s = str(input())\nprint(s[::2])\n"}
{"label": 82, "index": 10562, "code": "from sys import stdin\na = stdin.readline().strip()\nans = \"\"\nl = len(a)\nfor i in xrange(l):\n if i%2==0:\n  ans += a[i]\nprint ans"}
{"label": 82, "index": 10563, "code": "print(\"\".join(input()[0::2]))\n"}
{"label": 82, "index": 10564, "code": "n = list(input())\nfor i in range(len(n)):\n    if i%2 == 0: print(n[i],end=\"\")\nprint()"}
{"label": 82, "index": 10565, "code": "s = input()\nprint(''.join([c for i, c in enumerate(s) if i % 2 == 0]))"}
{"label": 82, "index": 10566, "code": "tmp=map(str, raw_input())\n\narr=[]\nfor n,i in enumerate(tmp):\n    if n%2==0:\n        arr.append(i)\n\nprint \"\".join(arr)\n"}
{"label": 82, "index": 10567, "code": "print(input()[0::2])"}
{"label": 82, "index": 10568, "code": "nm = input().strip()\n\nprint(nm[::2])"}
{"label": 82, "index": 10569, "code": "S = input()\nans = \"\"\n\nfor i in range(0, len(S), 2):\n    ans += S[i]\n\nprint(ans)"}
{"label": 82, "index": 10570, "code": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n\n\ndef main():\n    S = input()\n    print(S[::2])\n\nif __name__ == \"__main__\": main()\n"}
{"label": 82, "index": 10571, "code": "s=input()\nans=''\nfor i in range(0, len(s), 2) :\n    ans+=s[i]\nprint(ans)"}
{"label": 82, "index": 10572, "code": "s = input()\nans = ''\ncount = 0\nwhile True:\n    ans += s[count]\n    count += 1\n    if len(s) == count:\n        break\n    count += 1\n    if len(s) == count:\n        break\n\nprint(ans)"}
{"label": 82, "index": 10573, "code": "print(input()[::2])"}
{"label": 82, "index": 10574, "code": "s = raw_input()\n\nans = \"\"\n\nfor i in range(len(s)):\n    if ((i + 1) % 2) != 0:\n        ans += s[i]\n\nprint ans"}
{"label": 82, "index": 10575, "code": "print(input()[::2])"}
{"label": 82, "index": 10576, "code": "# coding: utf-8\n# Here your code !\nstr =\"\"\ni =1\nfor j in input():\n    if i%2==1:\n        str+=j\n    i+=1\nprint(str)"}
{"label": 82, "index": 10577, "code": "# problem B\ns = input()\nn = len(s)\n\nout = \"\"\nfor i in range(0, n, 2):\n    out += s[i]\nprint(out)"}
{"label": 82, "index": 10578, "code": "import sys\na = sys.stdin.readline().strip()\nprint (a[::2])\n"}
{"label": 82, "index": 10579, "code": "a=raw_input()\nb=list(a)\nc=1\nans=\"\"\nfor i in b:\n  if c%2==1:\n    ans+=i\n  c+=1\nprint ans"}
{"label": 82, "index": 10580, "code": "S = input()\n\nres = \"\"\n\nfor i, v in enumerate(S):\n    if i % 2 == 0:\n        res += v\n\nprint(res)\n"}
{"label": 82, "index": 10581, "code": "s = input()\nans = \"\"\nn = len(s)\nfor i in range(len(s)):\n    if i % 2 == 0:\n        ans = ans + s[i]\nprint(ans)"}
{"label": 82, "index": 10582, "code": "a = raw_input()\ns = \"\"\nfor i in range(0, len(a), 2 ):\n\ts = s + a[i]\nprint s"}
{"label": 82, "index": 10583, "code": "s = input()\nprint(s[::2])"}
{"label": 82, "index": 10584, "code": "s = input()\nl = []\nfor i in range(len(s)):\n    if i % 2 == 0:\n        l.append(s[i])\n\nprint(''.join(l))\n"}
{"label": 82, "index": 10585, "code": "temp = input().split(\" \")\nmojis = list(temp[0])\nans = \"\"\nfor a in range(len(mojis)):\n    if a % 2 == 0:\n        ans = ans + mojis[a]\nprint(ans)\n "}
{"label": 82, "index": 10586, "code": "print raw_input()[::2]"}
{"label": 82, "index": 10587, "code": "S = input()\nt = \"\"\nfor i in range(0, len(S), 2):\n  t = t + S[i]\n\nprint(t)"}
{"label": 82, "index": 10588, "code": "# coding: utf-8\ndef get_ln_inputs():\n    return input().split()\n\n\ndef get_ln_int_inputs():\n    return list(map(int, get_ln_inputs()))\n\n\ndef main():\n    print(get_ln_inputs()[0][::2])\n\n\nmain()"}
{"label": 82, "index": 10589, "code": "st=input()\ns=\"\"\nfor i in range(0,len(st)):\n    if i % 2 ==0:\n        s+=str(st[i])\n    else:\n        pass\nprint(s)\n"}
{"label": 82, "index": 10590, "code": "if __name__ == '__main__':\n    STR = input()\n    ans = ''\n    for i in range(0, STR.__len__(), 2):\n        ans += STR[i:i+1]\n    print(ans)\n"}
{"label": 82, "index": 10591, "code": "def main():\n    S = input()\n    print(S[::2])\n\nmain()\n"}
{"label": 82, "index": 10592, "code": "myinput=input()\nprint(myinput[::2])"}
{"label": 82, "index": 10593, "code": "def main():\n    print(''.join([c for c in input()[::2]]))\n\n\nif __name__ == \"__main__\":\n    main()"}
{"label": 82, "index": 10594, "code": "word = input()\n\nanswer = ''\n\nfor i in range(0, len(word), 2):\n    answer += word[i]\n\nprint(answer)\n\n"}
{"label": 82, "index": 10595, "code": "s=input()\nprint(s[::2])"}
{"label": 82, "index": 10596, "code": "s = input()\n\nprint(s[::2])\n"}
{"label": 82, "index": 10597, "code": "s=input()\nr=\"\"\nfor i in range(len(s)):\n    if i%2==0:\n        r+=s[i]\nprint(r)"}
{"label": 82, "index": 10598, "code": "s=input()\n\nprint(s[0::2])"}
{"label": 82, "index": 10599, "code": "s = input()\nfor i in range(0, len(s), 2):\n\tprint(s[i], end = '')"}
{"label": 82, "index": 10600, "code": "S = input()\nd = \"\"\n\nfor i, s in enumerate(S):\n    if i%2 == 0:\n        d += s\n\nprint(d)\n"}
{"label": 82, "index": 10601, "code": "s = input()\nans = ''\nfor i in range(len(s)):\n    if i % 2 == 0:\n        ans += s[i] \nprint(ans)\n"}
{"label": 82, "index": 10602, "code": "print \"\".join(map(str, [c for i,c in enumerate(raw_input()) if i % 2 == 0]))\n"}
{"label": 82, "index": 10603, "code": "print(str(input())[::2])"}
{"label": 82, "index": 10604, "code": "s = input()\nl = len(s)\nfor i in range(l):\n  if i % 2 == 0:\n    print(s[i], end='')"}
{"label": 82, "index": 10605, "code": "import sys\n\ndef main():\n    S = sys.stdin.readline()[:-1]\n    print(S[::2])\n\nif __name__ == '__main__':\n    main()"}
{"label": 82, "index": 10606, "code": "print(input()[::2])"}
{"label": 82, "index": 10607, "code": "def read_line(*types): return [f(a) for a, f in zip(input().split(), types)]\n\ns, = read_line(str)\n\nfor i in range(len(s)):\n    if i % 2 == 0:\n        print(s[i], end='')\n"}
{"label": 82, "index": 10608, "code": "s = str(input())\nprint(s[0::2])"}
{"label": 82, "index": 10609, "code": "s = input()\nresult = \"\" \nfor i in range(0, len(s), 2):\n    result += s[i]\n    \nprint(result)"}
{"label": 82, "index": 10610, "code": "# -*- coding: utf-8 -*-\n\"\"\"\n\n\"\"\"\n\n\n\nif __name__ == '__main__':\n    txt = input()\n    result = txt[::2]\n    print(result)\n"}
{"label": 82, "index": 10611, "code": "print(input()[0::2])"}
{"label": 82, "index": 10612, "code": "s = input()\nl = len(s)\nans = []\nfor i in range(l):\n    if i % 2 == 0:\n        ans.append(s[i])\ns = \"\".join(ans)\nprint(s)"}
{"label": 82, "index": 10613, "code": "s = input()\nans = \"\"\nfor i in range(len(s)):\n  if(i % 2 == 0):\n    ans = ans + s[i]\n    \nprint(ans)"}
{"label": 82, "index": 10614, "code": "S = input()\n\nresult = \"\"\n\nfor i in range(len(S)):\n    if i % 2 == 0:\n        result += S[i]\n\nprint(result)\n"}
{"label": 82, "index": 10615, "code": "s=input()\nfor i in range(len(s)):\n    if i%2==0:print(s[i],end=\"\")"}
{"label": 82, "index": 10616, "code": "print(\"\".join(list(input())[::2]))"}
{"label": 82, "index": 10617, "code": "print(input()[::2])"}
{"label": 82, "index": 10618, "code": "input_line1 = raw_input()\nextract1 = input_line1[::2]\nprint(extract1)"}
{"label": 82, "index": 10619, "code": "S = input()\narr = []\nfor i in range(len(S)):\n    if i%2 == 0:\n        arr.append(S[i])\nprint(''.join(arr))\n"}
{"label": 82, "index": 10620, "code": "# coding: utf-8\ns = raw_input()\nprint s[0::2]"}
{"label": 82, "index": 10621, "code": "# -*- coding:utf-8 -*-\ns = list(input())\na = [ s[tmp] for tmp in range(len(s)) if tmp%2 == 0 ]\nprint(''.join(a))"}
{"label": 82, "index": 10622, "code": "s = input()\nans = \"\"\nfor i in range(0, len(s), 2):\n    ans += s[i]\nprint(ans)"}
{"label": 82, "index": 10623, "code": "s = list(input())\nn = len(s)\nans = \"\"\nfor i in range(0, n, 2):\n    ans += s[i]\nprint(ans)\n"}
{"label": 82, "index": 10624, "code": "s = input()\nans = \"\"\nfor i in range(0,len(s),2):\n    ans += s[i]\nprint(ans)\n"}
{"label": 82, "index": 10625, "code": "s = input();print(s[::2]);"}
{"label": 82, "index": 10626, "code": "s = input()\nfor i in range(0, len(s), 2):\n    print(s[i], end='')\nprint()\n"}
{"label": 82, "index": 10627, "code": "import sys\n\nword = raw_input()\nodd = ''\nindex = 1\n\nfor letter in word:\n    if (index % 2) != 0:\n        odd += letter\n    index += 1\n\nprint odd"}
{"label": 82, "index": 10628, "code": "print(str(input())[::2])"}
{"label": 82, "index": 10629, "code": "#\u6587\u5b57\u5217\u3092\u8aad\u307f\u8fbc\u3080\nstr = input()\n#\u6587\u5b57\u5217\u304b\u3089\u5947\u6570\u6587\u5b57\u3092\u53d6\u308a\u51fa\u3059\nkisuu_str = \"\"\nfor i in range(0,len(str),2):\n    kisuu_str += str[i]\n#\u5947\u6570\u6587\u5b57\u306e\u307f\u3092\u8868\u793a\u3059\u308b\nprint(kisuu_str)\n"}
{"label": 82, "index": 10630, "code": "s = input()\nt = 0\nfor i,j in enumerate(s):\n   if i % 2 == 0:\n      print(s[i],end=\"\")"}
{"label": 82, "index": 10631, "code": "def main():\n    print(''.join([c for c in input()[::2]]))\n\n\nif __name__ == \"__main__\":\n    main()"}
{"label": 82, "index": 10632, "code": "print(input()[::2])"}
{"label": 82, "index": 10633, "code": "s=raw_input()\n\nprint s[0::2]"}
{"label": 82, "index": 10634, "code": "s = input()\nt = [s[i] for i in range(0, len(s), 2)]\nprint(''.join(t))"}
{"label": 82, "index": 10635, "code": "S = input()\nprint(S[0:len(S):2])"}
{"label": 82, "index": 10636, "code": "str = input()\nprint (str[::2])"}
{"label": 82, "index": 10637, "code": "print(input()[::2])"}
{"label": 82, "index": 10638, "code": "s = input()\nfor i in range(len(s)):\n    if (i % 2) == 0:\n        print(s[i], end=\"\")\nprint()\n"}
{"label": 82, "index": 10639, "code": "s = input()\nhoge =list(s)\n\nmoji = ''\n\nfor num in range(len(s)):\n    if num%2 == 0:\n        moji += hoge[num]\n    continue\n\nprint(moji)"}
{"label": 82, "index": 10640, "code": "# -*- coding: utf-8 -*-\n\nprint(input()[::2])"}
{"label": 82, "index": 10641, "code": "s=list(raw_input())\n\nA=''\nfor i in range(len(s)):\n\tif i%2==0:\n\t\tA+=s[i]\n\nprint A\n\n"}
{"label": 82, "index": 10642, "code": "# -*- encoding: utf-8 -*-\ns = input().rstrip()\n\nprint(s[::2])"}
{"label": 82, "index": 10643, "code": "s = input()\nprint(''.join(s[0::2]))"}
{"label": 82, "index": 10644, "code": "a=input()\ncount = 1\nli=[]\nfor char in list(a):\n    if count % 2 != 0:\n        li.append(char)\n        count+=1\n    else:\n        count+=1\nb=\"\".join(li)\nprint(b)\n\n\n"}
{"label": 82, "index": 10645, "code": "def solve():\n    s = input()\n    S = s[::2]\n    print(S)\n\nif __name__ == '__main__':\n    solve()\n"}
{"label": 82, "index": 10646, "code": "s = list(input())\n\n\nfor i in range(len(s)):\n    if i%2==0:\n        print(s[i],end='')\n\nprint()"}
{"label": 82, "index": 10647, "code": "st = str(input())\nresult = [st[i] for i in range(len(st)) if i%2 == 0]\nprint(\"\".join(result))"}
{"label": 82, "index": 10648, "code": "s=input()\nfor i in range(len(s)):\n    if i%2==0:\n        print(s[i],end=\"\")\nprint()"}
{"label": 82, "index": 10649, "code": "from collections import defaultdict\nfrom itertools import product, groupby\nfrom math import pi\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right\nINF = 10 ** 10\n\n\ndef main():\n    s = input()\n    print(s[::2])\n\n\nif __name__ == '__main__':\n    main()\n"}
{"label": 82, "index": 10650, "code": "#!/usr/bin/python\n\nimport sys\n\ndef main(argv):\n    for line in sys.stdin:\n        output = []\n        for i, c in enumerate(line.rstrip(\"\\n\")):\n            if i % 2 == 0:\n                output.append(c)\n        print(\"\".join(output))\n\nif __name__ == \"__main__\":\n    main(sys.argv)"}
{"label": 82, "index": 10651, "code": "s = input()\n\nfor i,c in enumerate(s):\n  if i % 2 == 0:\n    print(c, end=\"\")\n\n    \n    "}
{"label": 82, "index": 10652, "code": "s = input().strip()\nfor i, c in enumerate(s):\n  if i%2 == 0:\n    print(c,end='')\nprint()"}
{"label": 82, "index": 10653, "code": "#!usr/bim/python\n#! -*- coding: utf-8 -*-\n\ns = raw_input()\n\nans = \"\"\n\ni = 0\nfor i in range(len(s)):\n    if i % 2 == 1:\n        pass\n    else:\n        ans += s[i]\n\n\nprint ans\n"}
{"label": 82, "index": 10654, "code": "# encoding: \"utf-8\"\n\nclass Stdin:\n    @staticmethod\n    def read_line(converter=str):\n        return [converter(x) for x in input().split()]\n    \n    @staticmethod\n    def read_lines(n, converter=str):\n        result = list()\n        for _ in range(n):\n            result.append(Stdin.read_line(converter))\n        return result\n    \n    @staticmethod\n    def convert(data, converter):\n        assert(len(data) == len(converter))\n        return tuple(map(lambda x, f: f(x), data, converter))\n\n    @staticmethod\n    def convert_lines(datas, n, converter):\n        return [converter(data, n, converter) for data in datas]\n\n\ndef main():\n    s = input()\n    r = \"\".join([c for (i,c) in enumerate(s) if i % 2 == 0])\n    print(r)\n\nif __name__ == \"__main__\":\n    main()"}
{"label": 82, "index": 10655, "code": "print(input()[::2])"}
{"label": 82, "index": 10656, "code": "#ABC072B\n\ns=raw_input()\nres=''\nfor i in xrange(len(s)):\n if i%2==0:\n  res+=s[i]\nprint res\n"}
{"label": 82, "index": 10657, "code": "print(input()[::2])"}
{"label": 82, "index": 10658, "code": "k = input()\nprint(k[::2])\n"}
{"label": 82, "index": 10659, "code": "def solve():\n    s = list(input())\n    s_odd = s[::2]\n    print(\"\".join(s_odd))\n\n   \nsolve()"}
{"label": 83, "index": 10660, "code": "a = input()\nif a[0] == '9'or a[1] == '9':\n\tprint(\"Yes\")\nelse: print(\"No\")"}
{"label": 83, "index": 10661, "code": "\ndef main():\n    n = input()\n    if '9' in n:\n        print('Yes')\n    else:\n        print('No')\n\nif __name__ == '__main__':\n    main()"}
{"label": 83, "index": 10662, "code": "print((\"No\",\"Yes\")[\"9\"in input()])"}
{"label": 83, "index": 10663, "code": "s=input()\nprint(\"Yes\" if s/10==9 or s%10==9 else \"No\")"}
{"label": 83, "index": 10664, "code": "def main():\n    N = int(input())\n\n    N_10 = N//10\n    N_1 = N - N_10*10\n\n    if N_10==9:\n        print('Yes')\n    elif N_1==9:\n        print('Yes')\n    else:\n        print('No')\n\n\nif __name__=='__main__':\n    main()\n"}
{"label": 83, "index": 10665, "code": "s=list(input())\nfor c in s:\n    if c=='9':\n        print('Yes')\n        break\nelse:\n    print('No')\n"}
{"label": 83, "index": 10666, "code": "n = input()\nif '9' in n:\n  print('Yes')\nelse:\n  print('No')"}
{"label": 83, "index": 10667, "code": "N = int(input())\nn10 = N//10\nn1 = N%10\nif n10 == 9 or n1 == 9:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"}
{"label": 83, "index": 10668, "code": "s = input()\t\t\t\t\t\t# 5\n\nif '9' in s:\n\tprint('Yes')\nelse:\n\tprint('No')\n"}
{"label": 83, "index": 10669, "code": "N = input()\nprint('Yes' if '9' in N else 'No')\n"}
{"label": 83, "index": 10670, "code": "n = raw_input()\n\nl = [int(x) for x in list(str(n))]\nif l[0] == 9:\n\tprint(\"Yes\")\nelif l[1] == 9:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}
{"label": 83, "index": 10671, "code": "s = input()\nif '9' in s:\n    print('Yes')\nelse:\n    print('No')\n"}
{"label": 83, "index": 10672, "code": "# coding: utf-8\n\n\ndef main():\n    n = raw_input()\n    for i in n:\n        if i == \"9\":\n            print \"Yes\"\n            return\n    print \"No\"\n\nmain()\n"}
{"label": 83, "index": 10673, "code": "N= int(input())\nn=[]\nj=9\nc=0\nwhile N!=0:\n    n.append(N%10)\n    N//=10\nn.reverse()\n\nfor i in range(len(n)):\n    if n[i-1]==j:\n        c+=1\n\nif c > 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"}
{"label": 83, "index": 10674, "code": "print \"Yes\" if \"9\" in raw_input() else \"No\""}
{"label": 83, "index": 10675, "code": "import numpy as np\nhoge = input()\nhoge = int(hoge)\nif hoge//10 == 9 or hoge%10 == 9: \n    print(\"Yes\")\nelse:\n    print(\"No\")"}
{"label": 83, "index": 10676, "code": "temp = input()\ntemp = list(temp)\nif(temp[0] == \"9\" or temp[1] == \"9\"):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n    "}
{"label": 83, "index": 10677, "code": "N=input()\nif '9' in (N):\n print('Yes')\nelse:\n print('No')"}
{"label": 83, "index": 10678, "code": "N = input()\nif N[0] == '9' or N[1] =='9':\n    print('Yes')\nelse:\n    print('No')"}
{"label": 83, "index": 10679, "code": "# coding: utf-8\n\nprint(\"Yes\" if '9' in input() else \"No\")\n"}
{"label": 83, "index": 10680, "code": "n = input()\nprint(\"Yes\") if n.count('9') else print(\"No\")"}
{"label": 83, "index": 10681, "code": "print 'Yes' if '9' in raw_input() else 'No'\n"}
{"label": 83, "index": 10682, "code": "n = list(input())\nif '9' in n:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}
{"label": 83, "index": 10683, "code": "N = list(input())\n\nflag = False\nif N[0] == \"9\":\n    flag = True\nif N[1] == \"9\":\n    flag = True\n\nif flag:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}
{"label": 83, "index": 10684, "code": "n = str(input())\n\nif \"9\" in n:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"}
{"label": 83, "index": 10685, "code": "print('Yes' if '9' in input() else 'No')"}
{"label": 83, "index": 10686, "code": "N = int(input())\nif N % 10==9 or N >=90 :\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"}
{"label": 83, "index": 10687, "code": "n = input()\nprint(\"Yes\" if n[0]=='9' or n[1]=='9' else \"No\")"}
{"label": 83, "index": 10688, "code": "# coding: utf-8\n# Here your code !\nn = input()\nif n.find('9') >= 0:\n    print('Yes')\nelse:\n    print('No')"}
{"label": 83, "index": 10689, "code": "if \"9\" in input():\n    print(\"Yes\")\nelse:\n    print(\"No\")"}
{"label": 83, "index": 10690, "code": "if input().find('9')!=-1:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}
{"label": 83, "index": 10691, "code": "N = input()\n\nif N.find(\"9\") != -1:\n  print(\"Yes\")\nelse:\n  print(\"No\")\n  "}
{"label": 83, "index": 10692, "code": "def main():\n    N = input()\n\n    if '9' in N:\n        print('Yes')\n    else:\n        print('No')\n\nmain()\n"}
{"label": 83, "index": 10693, "code": "print(\"Yes\" if \"9\" in input() else \"No\")"}
{"label": 83, "index": 10694, "code": "#!/usr/bin/python\n\nimport sys\n\ndef main(argv):\n    for line in sys.stdin:\n        if \"9\" in line:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n\nif __name__ == \"__main__\":\n    main(sys.argv)\n"}
{"label": 83, "index": 10695, "code": "N = int(input())\nif N%10 == 9 or N // 10 == 9:\n  print(\"Yes\")\nelse:\n  print(\"No\")"}
{"label": 83, "index": 10696, "code": "import numpy as np\n\n\ndef getInput():\n    \"\"\"\n\n    :return: list of list of str. 1st dim: row, 2nd dim: column.\n    \"\"\"\n    separator = ' '\n    ret_array = []\n    while True:\n        try:\n            row = input().split(sep=separator)\n            ret_array.append(row)\n        except EOFError:\n            break\n    return ret_array\n\n\ng = getInput()\n\n# number\np = np.array(list(map(int, g[0])), dtype=np.int32)\nh, f = divmod(p, 10)\nif h == 9 or f == 9:\n    print('Yes')\nelse:\n    print('No')"}
{"label": 83, "index": 10697, "code": "N = input()\nif \"9\" in N:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}
{"label": 83, "index": 10698, "code": "# -*- coding:utf-8 -*-\nimport sys\nN = list(input())\nfor tmp in N:\n    if tmp == '9':\n        print(\"Yes\")\n        sys.exit()\n    else:\n        pass\nprint(\"No\")"}
{"label": 83, "index": 10699, "code": "print('Yes') if '9' in input() else print('No')"}
{"label": 83, "index": 10700, "code": "n = input()\n\nif '9' in n:\n    print('Yes')\nelse:\n    print('No')"}
{"label": 83, "index": 10701, "code": "if \"9\" in input():\n  print(\"Yes\")\nelse:\n  print(\"No\")"}
{"label": 83, "index": 10702, "code": "print(\"Yes\" if '9' in input() else \"No\")"}
{"label": 83, "index": 10703, "code": "N = int(input())\n\nif N%10 == 9:\n    print('Yes')\nelif N >= 90:\n    print('Yes')\nelse:\n    print('No')"}
{"label": 83, "index": 10704, "code": "z=input()\nif z[0]=='9' or z[1]=='9':\n    print(\"Yes\")\nelse:print(\"No\")"}
{"label": 83, "index": 10705, "code": "N = input()\nresult = \"No\"\nfor i in N:\n    if i == '9':\n        result = \"Yes\"\nprint(result)"}
{"label": 83, "index": 10706, "code": "N = str(input())\n\nif '9' in N:\n    flag = 'Yes'\nelse:\n    flag = 'No'\n    \nprint(flag)\n"}
{"label": 83, "index": 10707, "code": "n=str(input())\nif '9' in n:\n    print('Yes')\nelse:\n    print('No')"}
{"label": 83, "index": 10708, "code": "n = raw_input()\n\nindex = n.find(\"9\")\n\nif index >= 0:\n    print \"Yes\"\nelse:\n    print \"No\""}
{"label": 83, "index": 10709, "code": "num = input()\nnum = str(num)\nisthere = False\nfor i in range(0, 2):\n\tif num[i] == '9':\n\t\tisthere = True\n\nif isthere:\n\tprint('Yes')\nelse:\n\tprint('No')"}
{"label": 83, "index": 10710, "code": "N=input()\nif N[0]==\"9\" or N[1]==\"9\":\n    p=\"Yes\"\nelse:\n    p=\"No\"\nprint(p)"}
{"label": 83, "index": 10711, "code": "number = int(raw_input())\n\nif number < 10 and number == 9:\n    print 'Yes'\nelif (number % 10) == 9:\n    print 'Yes'\nelif (number / 10) == 9:\n    print 'Yes'\nelse:\n    print 'No'"}
{"label": 83, "index": 10712, "code": "print('Yes' if '9' in input() else 'No')"}
{"label": 83, "index": 10713, "code": "N = input()\n\nif N%10 == 9:\n\tprint('Yes')\nelif N/10 == 9:\n\tprint('Yes')\nelse :\n\tprint('No')"}
{"label": 83, "index": 10714, "code": "s = input().strip()\nif s[0] == '9' or s[1] == '9':\n  print('Yes')\nelse:\n  print('No')"}
{"label": 83, "index": 10715, "code": "from collections import defaultdict\nfrom itertools import product, groupby\nfrom math import pi\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right\nINF = 10 ** 10\n\n\ndef main():\n    N = input()\n    print(\"Yes\" if \"9\" in N else \"No\")\n\n\nif __name__ == '__main__':\n    main()\n"}
{"label": 83, "index": 10716, "code": "N = input()\n\nprint(\"Yes\" if \"9\" in N else \"No\")"}
{"label": 83, "index": 10717, "code": "s = input()\nprint(\"Yes\" if '9' in s else \"No\")\n"}
{"label": 83, "index": 10718, "code": "n=int(input())\n\nif  (n>89) or (n%10==9):\n    print('Yes')\nelse:\n    print('No')"}
{"label": 83, "index": 10719, "code": "a = list(input())\nif \"9\" in a:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}
{"label": 83, "index": 10720, "code": "import sys\n\nN = int(sys.stdin.readline())\nn1 = N % 10\nn2 = int((N - n1) / 10)\n\nif n1 == 9 or n2 == 9:\n    print('Yes')\nelse:\n    print('No')\n"}
{"label": 83, "index": 10721, "code": "if '9' in input():\n print('Yes')\nelse:\n  print('No')"}
{"label": 83, "index": 10722, "code": "a = input()\nif '9' in a:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n\n"}
{"label": 83, "index": 10723, "code": "inp = input()\n\nif '9' in inp:\n  print('Yes')\nelse:\n  print('No')"}
{"label": 83, "index": 10724, "code": "# -*- coding: utf-8 -*-\nimport heapq\nimport math\n\na = input()\nb = False\nfor aa in a:\n    if aa == '9':\n        b = True\nprint('Yes' if b else 'No')\n"}
{"label": 83, "index": 10725, "code": "N = input()\n\nif \"9\" in N:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"}
{"label": 83, "index": 10726, "code": "n=list(str(input()))\nfor x in n:\n    if x==\"9\":\n        print(\"Yes\")\n        break\nelse:\n    print(\"No\")"}
{"label": 83, "index": 10727, "code": "N = input()\nif \"9\" in N:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"}
{"label": 83, "index": 10728, "code": "n = input()\nif n[0]=='9' or n[1]=='9':\n    print('Yes')\nelse:\n    print('No')"}
{"label": 83, "index": 10729, "code": "n=input()\ns=\"No\"\nfor i in range(len(n)):\n    if n[i]==\"9\":\n        s=\"Yes\"\nprint(s)"}
{"label": 83, "index": 10730, "code": "num = int(input())\nif num % 10 == 9 or num // 10 == 9:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}
{"label": 83, "index": 10731, "code": "N = input()\n\nfor i in range(len(N)):\n    if N[i] == \"9\":\n        print(\"Yes\")\n        exit()\n\nprint(\"No\")"}
{"label": 83, "index": 10732, "code": "N = input()\nprint('Yes' if '9' in N else 'No')"}
{"label": 83, "index": 10733, "code": "n = int(input())\nif n%10==9 or n//10==9:\n    print('Yes')\nelse :\n    print('No')"}
{"label": 83, "index": 10734, "code": "print(\"Yes\" if (\"9\" in list(input())) else \"No\")"}
{"label": 83, "index": 10735, "code": "s=input()\nprint('Yes' if '9' in s else 'No')"}
{"label": 83, "index": 10736, "code": "print('Yes' if '9' in input() else 'No')\n"}
{"label": 83, "index": 10737, "code": "N = int(input())\n\nif N // 10 == 9 or N % 10 == 9:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"}
{"label": 83, "index": 10738, "code": "def A_September(N):\n    if '9' in N:\n        return 'Yes'\n    else:\n        return 'No'\n      \nN = input()\nprint(A_September(N))"}
{"label": 83, "index": 10739, "code": "if '9' in input():\n    print('Yes')\nelse:\n    print('No')\n"}
{"label": 83, "index": 10740, "code": "n = input()\nif \"9\" in n:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}
{"label": 83, "index": 10741, "code": "N = input()\n\nif \"9\"in N:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}
{"label": 83, "index": 10742, "code": "n = input()\nif '9' in n:\n  print('Yes')\nelse:\n  print('No')"}
{"label": 83, "index": 10743, "code": "a=raw_input()\n\na = int (a)\n\nif a%10==9:\n    print \"Yes\"\nelif (a/10)%10==9:\n    print \"Yes\"\nelse :\n    print \"No\"\n"}
{"label": 83, "index": 10744, "code": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n\n\ndef main():\n    s = input()\n    print(\"Yes\" if \"9\" in s else \"No\")\n\nif __name__ == \"__main__\": main()\n"}
{"label": 83, "index": 10745, "code": "number = input()\nif '9' in number:\n    print('Yes')\nelse:\n    print('No')"}
{"label": 83, "index": 10746, "code": "N = input()\ntry:\n  N.index('9')\n  print('Yes')\nexcept:\n  print('No')"}
{"label": 83, "index": 10747, "code": "input = int(input())\n\nfirst_digit = input % 10\nsecond_digit = int((input - first_digit) / 10)\n\nif first_digit == 9 or second_digit == 9:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}
{"label": 83, "index": 10748, "code": "a=list(str(input()))\nch=0\nfor i in a:\n    if i==\"9\":\n        ch=1\nif ch==1:\n    print \"Yes\"\nelse:\n    print \"No\""}
{"label": 83, "index": 10749, "code": "N = input()\nif \"9\" in N:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n            \n"}
{"label": 83, "index": 10750, "code": "a = input()\nb = int(a[0])\nc = int(a[1])\nif b==9 or c==9:\n print(\"Yes\")\nelse:\n print(\"No\")"}
{"label": 83, "index": 10751, "code": "N = int(raw_input())\nprint 'Yes' if '9' in str(N) else 'No'"}
{"label": 83, "index": 10752, "code": "import sys\n\n# sys.stdin = open('a1.in')\n\n\ndef read_int_list():\n    return list(map(int, input().split()))\n\n\ndef read_str_list():\n    return input().split()\n\n\ndef read_int():\n    return int(input())\n\n\ndef read_str():\n    return input()\n\n\ndef main():\n    n = read_int()\n    l = [9, 19, 29, 39, 49, 59, 69, 79, 89, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90]\n    if n in l:\n        print('Yes')\n    else:\n        print('No')\n\n\nmain()\n"}
{"label": 83, "index": 10753, "code": "N=input()\nprint \"Yes\" if N%10==9 or N/10==9 else \"No\"\n"}
{"label": 83, "index": 10754, "code": "n = input()\n\n\nif n[0] == '9' or n[1] == '9':\n        print(\"Yes\")\nelse:\n        print(\"No\")\n"}
{"label": 83, "index": 10755, "code": "n = input()\n\ncheck = 0\nfor i in n:\n    if i == \"9\":\n        check = 1\n        break\n\nif check == 1:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}
{"label": 83, "index": 10756, "code": "s = input()\nif '9' in s:\n    print('Yes')\nelse:\n    print('No')"}
{"label": 83, "index": 10757, "code": "#! /bin/python\n# coding:utf-8\n\nimport itertools\n\nN = raw_input()\n\nif (N.find('9') == -1):\n    print \"No\"\nelse:\n    print \"Yes\""}
{"label": 83, "index": 10758, "code": "s = input()\nprint('Yes') if '9' in s else print('No')"}
{"label": 83, "index": 10759, "code": "import collections\n\n# \u30c7\u30d0\u30c3\u30b0\u7528\nDEBUG = False\n# DEBUG = True\n\n# \u5ba3\u8a00\nresult = 'No'\n\n# \u5165\u529b\u90e8\nif DEBUG:\n    N = '99'\nelse:\n    N = input()\n\n# \u51e6\u7406\u90e8\nif N.find('9') >= 0:\n    result = 'Yes'\nelse:\n    result = 'No'\n\n# \u51fa\u529b\u90e8\nprint(result)"}
{"label": 83, "index": 10760, "code": "N = input()\n\nif N[0] == '9' or N[1] == '9':\n    print('Yes')\nelse:\n    print('No')"}
{"label": 83, "index": 10761, "code": "n = input()\n\nif n.count('9') > 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}
{"label": 83, "index": 10762, "code": "n = int(input())\nprint(\"Yes\" if n%10==9 or n//10 == 9 else \"No\")"}
{"label": 83, "index": 10763, "code": "N = input()\nresult = \"No\"\nif N[0] == \"9\":\n    result =\"Yes\"\nif N[1] == \"9\":\n    result = \"Yes\"\nprint (result)\n"}
{"label": 83, "index": 10764, "code": "print (\"Yes\" if '9' in input() else \"No\")"}
{"label": 83, "index": 10765, "code": "x=input()\na=\"No\"\nif \"9\" in x:\n  a=\"Yes\"\nprint(a)"}
{"label": 83, "index": 10766, "code": "def solution():\n\tn = int(input())\n\tprint('Yes' if '9' in list(str(n)) else 'No')\n\nsolution()"}
{"label": 83, "index": 10767, "code": "#a = map(int,raw_input().strip().split())\na = raw_input()\np = False\nfor x in a:\n\tif x == '9':\n\t\tp = True\nif p:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")"}
{"label": 83, "index": 10768, "code": "s = input()\n\nflag = 0\nfor i in s:\n    if i == \"9\":\n        flag = 1\n\nif flag == 1:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}
{"label": 83, "index": 10769, "code": "# A\n\nS = list(input())\nif '9' in S:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}
{"label": 83, "index": 10770, "code": "# -*- coding: utf-8 -*-\nimport math\na = int(input())\nif a%10==9 or math.floor(a/10)==9:\n    print (\"Yes\")\nelse:\n    print (\"No\")\n"}
{"label": 83, "index": 10771, "code": "N = input()\n\nif '9' in str(N):\n    x = 'Yes'\nelse:\n    x = 'No'\n\nprint(x)"}
{"label": 83, "index": 10772, "code": "x = str(input())\n \nif x[0]=='9' or x[1]=='9':\n    print('Yes')\nelse:\n    print('No')\n"}
{"label": 83, "index": 10773, "code": "N=str(input())\nif N[0]==\"9\" or N[1]==\"9\":\n  print(\"Yes\")\nelse:\n  print(\"No\")"}
{"label": 83, "index": 10774, "code": "import math\nN=int(input())\nif N%10==9 or math.floor(N/10)==9:\n  print(\"Yes\")\nelse:\n  print(\"No\")"}
{"label": 83, "index": 10775, "code": "# -*- coding: utf-8 -*-\n\nimport sys\n\n\ndef main():\n    for line in sys.stdin:\n        if \"9\" in line.rstrip():\n            print(\"Yes\")\n        else:\n            print(\"No\")\n\n\nif __name__ == \"__main__\":\n    main()\n"}
{"label": 83, "index": 10776, "code": "inn = input()\nans = \"No\"\nif inn[0] == \"9\":\n    ans = \"Yes\"\nif inn[1] == \"9\":\n    ans = \"Yes\"\nprint(ans)\n"}
{"label": 83, "index": 10777, "code": "s=int(input())\nprint(\"Yes\" if s//10==9 or s%10==9 else \"No\")"}
{"label": 83, "index": 10778, "code": "#coding:utf-8\n\nnum = int(input())\n\nif num // 10 == 9 or num % 10 == 9:\n    print(\"Yes\")\nelse:\n    print(\"No\")"}
{"label": 83, "index": 10779, "code": "x = input()\nif '9' in x:\n    print(\"Yes\")\nelse :\n    print(\"No\")\n"}
{"label": 83, "index": 10780, "code": "def solve(s):\n    if \"9\" in s:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == '__main__':\n    s = input()\n    solve(s)"}
{"label": 83, "index": 10781, "code": "s = input()\npos = s.find('9')\nif pos != -1:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"}
{"label": 83, "index": 10782, "code": "def solve(): # 073A- September 9\n    n = int(input())\n    n_10 = n // 10\n    n_1 = n - n_10 * 10\n\n    if n_10 == 9 or n_1 == 9:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n        \n\nsolve()"}
{"label": 83, "index": 10783, "code": "n = int(input())\n\nif(n / 90 >= 1 or n % 10 == 9):\n    print(\"Yes\")\nelse:\n    print(\"No\")"}
{"label": 83, "index": 10784, "code": "a = input()\nfor i in range(len(a)):\n   if a[i] == \"9\":\n      print(\"Yes\")\n      break\nelse:\n   print(\"No\")"}
{"label": 83, "index": 10785, "code": "a = input()\nif a%10==9 or a/10 ==9:\n    print \"Yes\"\nelse:\n    print \"No\"\n"}
{"label": 83, "index": 10786, "code": "print(\"Yes\" if \"9\" in input() else \"No\")\n"}
{"label": 83, "index": 10787, "code": "import sys\nfor i in input():\n    if i =='9':\n        print(\"Yes\")\n        sys.exit()\nprint(\"No\")\n"}
{"label": 83, "index": 10788, "code": "\ns = input()\n\nif '9' in s:\n    print('Yes')\nelse:\n    print('No')\n\n\n"}
{"label": 83, "index": 10789, "code": "print(\"Yes\" if \"9\" in input() else \"No\")"}
{"label": 84, "index": 10790, "code": "N = int(input())\ntotal = 0\nfor i in range(N):\n    l,r = map(int, input().split())\n    total += (r - l + 1)\nprint(total)\n"}
{"label": 84, "index": 10791, "code": "#Theater\nN = int(input())\ncnt = 0\nfor i in range(N):\n    r,l = list(map(int, input().split()))\n    cnt += l-r+1\nprint(cnt)"}
{"label": 84, "index": 10792, "code": "\ndef main():\n    n = int(input())\n    ans = 0\n    for _ in range(n):\n        a, b = map(int, input().strip().split())\n        ans += b - a + 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()"}
{"label": 84, "index": 10793, "code": "N = int(input())\nSum = 0\nfor i in range(N):\n    sheet = list(map(int,input().split()))\n    Sum += sheet[1] - sheet[0] + 1\nprint(Sum)"}
{"label": 84, "index": 10794, "code": "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\ngosa = 1.0 / 10**10\nmod = 10**9+7\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\n\n\ndef main():\n    n = I()\n    r = 0\n    for _ in range(n):\n        a,b = LI()\n        r += b-a+1\n\n    return r\n\nprint(main())\n\n\n\n"}
{"label": 84, "index": 10795, "code": "n = int(input())\np = 0\nfor _ in range(n):\n    l, r = map(int, input().split())\n    p += r - l + 1\n\nprint(p)"}
{"label": 84, "index": 10796, "code": "# coding: utf-8\n# Here your code !\nn = int(input())\nans = 0\nfor i in range(n):\n    l, r = list(map(int, input().split()))\n    ans += r - l + 1\nprint(ans)\n\n"}
{"label": 84, "index": 10797, "code": "N = int(input())\nseat = 0\nfor _ in range(N):\n    l,r = map(int,input().split())\n    seat += r - l + 1\nprint(seat)"}
{"label": 84, "index": 10798, "code": "n = int(input())\na = 0\nfor _ in range(n):\n    l,r = map(int,input().split())\n    a += r-l+1\nprint(a)\n"}
{"label": 84, "index": 10799, "code": "time = int(input())\nans = 0\nfor i in range(time):\n    now = input().split()\n    ans += int(now[1]) + 1 - int(now[0])\nprint(ans)\n"}
{"label": 84, "index": 10800, "code": "a = int(input())\nb = [map(int, input().split()) for x in range(a)]\n\nprint(sum(B - A + 1 for A, B in b))\n"}
{"label": 84, "index": 10801, "code": "inp = int(input())\n\nsum = 0\nfor i in range(inp):\n\ta, b = map(int, input().split())\n\tsum += b - a + 1\nprint(sum)"}
{"label": 84, "index": 10802, "code": "N = int(input())\n\ns = 0\n\nfor i in range(N):\n    l, r = list(map(int, input().split(\" \")))\n    s += r - l + 1\n\nprint(s)\n"}
{"label": 84, "index": 10803, "code": "n = int(input())\nans = 0\nfor i in range(n):\n    x = input()\n    a , b = map(int,x.split())\n    ans += b - a + 1\nprint(ans)"}
{"label": 84, "index": 10804, "code": "a=input()\nans=0\nfor i in range(a):\n    b=map(int,raw_input().split())\n    ans+=b[1]-b[0]+1\nprint ans"}
{"label": 84, "index": 10805, "code": "N = int(input())\nans = set([])\nfor i in range(N):\n    strs = [int(s) for s in input().split(' ')]\n    for j in range(strs[0],strs[1]+1):\n        ans.add(j)\n\nprint(len(ans))"}
{"label": 84, "index": 10806, "code": "N = int(input())\nseats = []\nsum = N\nfor i in range(N):\n    j = list(map(int, input().split()))\n    seats.append(j)\n\nfor seat in seats:\n    sum += seat[1] - seat[0]\n\nprint(sum)"}
{"label": 84, "index": 10807, "code": "def main():\n    N = int(input())\n    LR = tuple(tuple(map(int, input().split())) for _ in range(N))\n\n    people = 0\n    for l, r in LR:\n        people += r - l + 1\n\n    print(people)\n\nmain()\n"}
{"label": 84, "index": 10808, "code": "n = input()\n\nans = 0\nfor i in range(n):\n    a, b = map(int, raw_input().split())\n    ans += b - a + 1\n\nprint ans\n"}
{"label": 84, "index": 10809, "code": "def solve(): # 073B- Theater\n    N = int(input())\n    sum_seat = 0\n\n    for _ in range(N):\n        l, r = [int(x) for x in input().split(\" \")]\n        sum_seat += r + 1 - l\n\n    print(sum_seat)\n    \n    \nsolve()"}
{"label": 84, "index": 10810, "code": "n = int(input())\nans = 0\nfor i in range(n):\n    l, r = map(int, input().split())\n    ans += r - l + 1\nprint(ans)"}
{"label": 84, "index": 10811, "code": "N = int(input())\nlist_seki = []\nfor i in range(N):\n    list_seki.append(list(map(int,input().split())))\n\ncount = 0\nfor j in range(N):\n    count += list_seki[j][1]+1-list_seki[j][0]\n\nprint(count)"}
{"label": 84, "index": 10812, "code": "n=int(input())\nans=0\nfor _ in range(n):\n    l,r=map(int,input().split())\n    ans+=r-l+1\nprint(ans)\n"}
{"label": 84, "index": 10813, "code": "N = int(input())\na = []\nanswer = 0\nfor i in range(N):\n\ta.append(list(map(int, input().split())))\n\tanswer = answer + a[i][1] - a[i][0] + 1\n\nprint(answer)"}
{"label": 84, "index": 10814, "code": "n = raw_input()\n\nn = int (n)\n\nans=0\n\nfor i in range(0,n):\n    a,b=raw_input().split(' ')\n    a = int (a)\n    b = int (b)\n    ans+=b-a;\n    ans+=1\n\nprint ans\n"}
{"label": 84, "index": 10815, "code": "c=[0]*100010\nN=int(input())\nfor _ in range(N):\n  a,b=map(int,input().split())\n  c[a] += 1\n  c[b+1] -= 1\nfor i in range(len(c)-1):\n  c[i+1] += c[i]\nprint(sum(c))"}
{"label": 84, "index": 10816, "code": "value = int(input())\npeople = 0\nwhile True:\n\ttry:\n\t\tseat = input()\n\t\tif seat:\n\t\t\tstring_seat = seat.split()\n\t\t\tseat_list = []\n\t\t\tseat_list = [int(x) for x in (string_seat)]\n\t\t\tpeople += seat_list[len(seat_list)-1] - seat_list[0]+1\n\texcept EOFError:\n\t\tbreak\n# while True:\n# \tseat = input()\n# \tif seat:\n# \t\tstring_seat = seat.split()\n# \t\tseat_list = []\n# \t\tseat_list = [int(x) for x in (string_seat)]\n# \t\tpeople += aaa(seat_list)\n# \telse:\n# \t\tbreak\nprint(people)\n"}
{"label": 84, "index": 10817, "code": "N = input()\nN = int(N)\n\nseats = []\n\nfor i in range(N):\n    inputs = input().split()\n    seats.append([int(inputs[0]), int(inputs[1])])\n\nans = 0\nfor i in seats:\n    ans += i[1] - i[0] + 1\n\nprint(ans)"}
{"label": 84, "index": 10818, "code": "n = int(input())\nans = 0\nfor _ in range(n):\n    l, r = map(int, input().split())\n    ans += r - l + 1\nprint(ans)\n"}
{"label": 84, "index": 10819, "code": "N = int(input())\npeople_total = 0\nfor _ in range(N):\n  new_input = input()\n  l, r = map(int, new_input.split(\" \"))\n  people_total += r - l + 1\n\nprint(people_total)\n\n"}
{"label": 84, "index": 10820, "code": "N = int(input())\nseat = [0 for i in range(100000+1)]\nfor i in range(N):\n    l, r = [int(i) for i in input().split()]\n    for j in range(l, r+1):\n        seat[j] = 1\nprint(sum(seat))"}
{"label": 84, "index": 10821, "code": "num=int(raw_input())\noutput=0\nfor i in range(num):\n    tmp=map(int, raw_input().split(\" \"))\n    output+=tmp[1]-tmp[0]+1\n\nprint output"}
{"label": 84, "index": 10822, "code": "count = 0\nx = int(input())\nfor i in range(x):\n    l,r = map(int,input().split())\n    count += (r-l+1)\nprint(count)\n"}
{"label": 84, "index": 10823, "code": "# -*- coding: utf-8 -*-\n\"\"\"\n\"\"\"\n\n\ndef solve(data):\n    total = 0\n    for b, e in data:\n        num = e - b + 1\n        total += num\n    return total\n\n\ndef main():\n    N = int(input())\n    data = []\n    for _ in range(N):\n        data.append([int(x) for x in input().split(' ')])\n    result = solve(data)\n    print(result)\n\n\nif __name__ == '__main__':\n    main()\n    \n"}
{"label": 84, "index": 10824, "code": "def B_Theater(N, C):\n    people = 0\n    for i in range(0, len(C), 2):\n        people += C[i + 1] - C[i] + 1\n    return people\n\nN = int(input())\nC = [[int(i) for i in input().split()] for i in range(N)]\nx = []\nfor s in C:\n    x.extend(s)\nC=x\nprint(B_Theater(N, C))"}
{"label": 84, "index": 10825, "code": "N = int(input())\nsum = 0\nfor i in range(N):\n    i, j = list(map(int, input().split(' ')))\n    sum += j - i + 1\nprint(sum)"}
{"label": 84, "index": 10826, "code": "z = 0\nfor _ in xrange(input()):\n    (l,r) = map(int,raw_input().split(' '))\n    z += r-l+1\nprint z\n"}
{"label": 84, "index": 10827, "code": "#ABC073B\n\nn=int(raw_input())\nres=0\nfor i in xrange(n):\n l,r=map(int,raw_input().split())\n res+=r-l+1\nprint res\n"}
{"label": 84, "index": 10828, "code": "N = int(input())\nlr = [list(map(int, input().split())) for n in range(N)]\n\nres = 0\nwhile lr:\n    tlr = lr.pop()\n    res += tlr[1] - tlr[0] + 1\n\nprint(res)"}
{"label": 84, "index": 10829, "code": "n=int(raw_input())\nnumber=0\nwhile n !=0:\n    a ,b=map(int, raw_input().split())\n    number+=b-a+1\n    n-=1\nprint(number)\n"}
{"label": 84, "index": 10830, "code": "n = int(input())\na = [list(map(int, input().split())) for i in range(n)]\nx = 0\n\nfor i in range(n):\n    x += a[i][1]-a[i][0]+1\n\nprint(x)\n"}
{"label": 84, "index": 10831, "code": "# B\nN = int(input())\nres = 0\nfor _ in range(N):\n    l, r = map(int, input().split())\n    res += r - l + 1\n    \nprint(res)"}
{"label": 84, "index": 10832, "code": "N=int(input())\nans=N\nfor i in range(N):\n  a,b=map(int,input().split())\n  ans+=b-a\nprint(ans)"}
{"label": 84, "index": 10833, "code": "import sys\n\ndef main():\n    N = int(input())\n\n    a =[]\n    for i in range(N):\n        a.append(list(map(int,input().split())))\n\n\n    count = 0\n\n    for b in a:\n        count = count + (b[1]-b[0]+1)\n\n    print(count)\n\n\nif __name__=='__main__':\n    main()\n"}
{"label": 84, "index": 10834, "code": "n = int(input())\ns = n\nfor _ in range(n):\n  a, b = map(int, input().split(\" \"))\n  s += b - a\nprint(s)"}
{"label": 84, "index": 10835, "code": "n=int(raw_input())\nres = 0\nfor i in range(n) :\n    x,y = map(int,raw_input().split())\n    res += y-x+1\nprint res"}
{"label": 84, "index": 10836, "code": "group_num = int(input())\nnumber_of_customer = 0\nfor _ in range(group_num):\n    l = list(map(int, input().split()))\n    number_of_customer += l[1] - l[0] + 1\nprint (number_of_customer)\n"}
{"label": 84, "index": 10837, "code": "N = int(input())\t\t\t\t\t\t# 5\n\nsum=0\nfor i in range(N):\n\tl, r = map(int, input().split())\t\t# 5 7\n\tsum += r - l + 1\n\nprint(sum)\n"}
{"label": 84, "index": 10838, "code": "N = int(input())\nanswer = 0\nfor i in range(N):\n\tl, r = map(int, input().split())\n\tanswer += r - l + 1\nprint(answer)"}
{"label": 84, "index": 10839, "code": "c=[0]*100010\nN=int(input())\nfor _ in range(N):\n  a,b=map(int,input().split())\n  c[a] += 1\n  c[b+1] -= 1\nfor i in range(len(c)-1):\n  c[i+1] += c[i]\nprint(sum(c))"}
{"label": 84, "index": 10840, "code": "N = int(input())\nnum = 0\n\nfor i in range(N):\n    s, l = map(int, input().split())\n    ans = l - s + 1\n    num += ans\n\nprint(num)"}
{"label": 84, "index": 10841, "code": "# -*- coding: utf-8 -*-\n\nimport sys\n\n\ndef main():\n    count = 0\n    for line in sys.stdin:\n        if len(line.rstrip().split(\" \")) == 1:\n            continue\n        start, end = map(int, line.rstrip().split(\" \"))\n        count += end - start + 1\n    print(count)\n\n\nif __name__ == \"__main__\":\n    main()\n"}
{"label": 84, "index": 10842, "code": "a = int(input())\nt = 0 \nfor i in range(a):\n   b,c = map(int,input().split())\n   if b >= c:\n      t += (b - c) + 1\n   else:\n      t += (c - b) + 1\nprint(t)\n"}
{"label": 84, "index": 10843, "code": "# coding: utf-8\n\nN = int(input())\n\nres = 0\nfor i in range(N):\n    l, r = tuple(map(int, input().split()))\n    res += r - l + 1\n\nprint(res)\n"}
{"label": 84, "index": 10844, "code": "n = int(input())\nlr_list= []\n\ncount =0\nfor _ in range(n):\n#     lr_list.append([int(x) for x in input().split()])\n    x, y = [int(x) for x in input().split()]\n#     print(x,y)\n    count += y-x+1\n\nprint(count)\n"}
{"label": 84, "index": 10845, "code": "N = int(input())\npeople = [list(map(int, input().split())) for i in range(N)]\nans = 0\n\nfor p in people:\n    ans += (p[1] - p[0]) + 1\n\nprint(ans)\n"}
{"label": 84, "index": 10846, "code": "ans = 0\nfor i in range(int(input())):\n  r1, r2 = input().split()\n  ans += int(r2) - int(r1) + 1\nprint(ans)"}
{"label": 84, "index": 10847, "code": "N = int(input())\n\nsum = 0\nfor i in range(N):\n    a = list(map(int,input().split()))\n    sum += a[1] - a[0] + 1\nprint(sum)\n"}
{"label": 84, "index": 10848, "code": "s = 0\nfor i in range(int(input())):\n    l, r = map(int, input().split())\n    s += r - l + 1\nprint(s)\n"}
{"label": 84, "index": 10849, "code": "N = int(input())\n\nans = 0\n\nfor _ in range(N):\n    l, r = map(int, input().split())\n    ans += r - l + 1\n    \nprint(ans)"}
{"label": 84, "index": 10850, "code": "N = input()\nans = 0\nfor _ in range(N):\n    l, r = map(int, raw_input().split())\n    ans += r-l+1\nprint ans\n"}
{"label": 84, "index": 10851, "code": "audience = []\ntotal = 0\ngroups = int(raw_input())\n\nfor line in xrange(groups):\n    audience.append(raw_input())\n\nfor line in audience:\n    group = map(int, line.split())\n    total += group[1] - group[0] + 1\n\nprint total"}
{"label": 84, "index": 10852, "code": "ans = 0\nfor i in range(int(input())):\n    a,b = map(int,input().split())\n    ans += b-a+1\nprint(ans)"}
{"label": 84, "index": 10853, "code": "from collections import defaultdict\nfrom itertools import product, groupby\nfrom math import pi\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right\nINF = 10 ** 10\n\n\ndef main():\n    N = int(input())\n    ans = 0\n    for _ in range(N):\n        l, r = map(int, input().split())\n        ans += r - l + 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"}
{"label": 84, "index": 10854, "code": "# coding: utf-8\n# Here your code !\nans = 0\nN = int(input())\nfor i in range(N):\n    a , b = map(int,input().split())\n    ans = ans + b - a +1\nprint(ans)"}
{"label": 84, "index": 10855, "code": "if __name__ == '__main__':\n    N = int(input())\n    ans = 0\n    for i in range(N):\n        l = list(map(int, input().split()))\n        ans += abs(l[1]-l[0]+1)\n    print(ans)"}
{"label": 84, "index": 10856, "code": "def spaceinput():\n    return list(map(int,input().split(\" \")))\n\n\n\n\nN=int(input())\nl=list()\nfor i in range(N):\n    l.append(spaceinput())\n\nsum=0\nfor sl in l:\n    sum+= sl[1]-sl[0]+1\n\nprint(sum)\n"}
{"label": 84, "index": 10857, "code": "import sys\n\n# sys.stdin = open('b1.in')\n\n\ndef read_int_list():\n    return list(map(int, input().split()))\n\n\ndef read_str_list():\n    return input().split()\n\n\ndef read_int():\n    return int(input())\n\n\ndef read_str():\n    return input()\n\n\ndef main():\n    n = read_int()\n    res = 0\n    for i in range(n):\n        l, r = read_int_list()\n        r0 = r - l + 1\n        res += r0\n    print(res)\n\n\nmain()\n"}
{"label": 84, "index": 10858, "code": "N = int(input())\n\nsum_num = 0\nfor i in range(N):\n    l, r = map(int, input().split())\n    sum_num += r - l + 1\n\nprint(sum_num)"}
{"label": 84, "index": 10859, "code": "N = int(raw_input())\nanswer = 0\nfor n in xrange(N):\n  l, r = map(int, raw_input().split(' '))\n  answer += r - l + 1\nprint answer"}
{"label": 84, "index": 10860, "code": "#!/usr/bin/env python\nimport sys\nif __name__ == '__main__':\n    line = sys.stdin.readline()\n    N = int(line)\n    count = 0\n    for i in range(N):\n    \tline = sys.stdin.readline().split(\" \")\n    \tcount += int(line[1]) - int(line[0]) + 1\n    print(count)\n"}
{"label": 84, "index": 10861, "code": "N = int(input())\nsum = 0\nfor i in range(N):\n    l, r = map(int, input().split())\n    sum += r - l + 1\nprint(sum)\n"}
{"label": 84, "index": 10862, "code": "n=int(input())\nx=0\nfor i in range(n):\n  a,b=map(int,input().split())\n  x=x+b-a+1\nprint(x)"}
{"label": 84, "index": 10863, "code": "n = int(input())\ne = [[int(i) for i in input().split()] for i in range(n)]\nresult = 0\nfor i in e:\n    result += i[1] - i[0]\n\nprint(result + n)\n\n\n    \n         "}
{"label": 84, "index": 10864, "code": "#N\u3092\u30bb\u30c3\u30c8\u3059\u308b\nN = int(input())\npeople = 0\nfor i in range(N):\n    l,r = map(int,input().split())\n    people = people + (r - l + 1)\nprint(people)"}
{"label": 84, "index": 10865, "code": "# coding:utf-8\n\nn=int(input())\nsum=0\nfor i in range(0, n):\n    l_r=input()\n    l=int(l_r.split(\" \")[0])\n    r=int(l_r.split(\" \")[1])\n    sum+=r-l+1\n\nprint(sum)"}
{"label": 84, "index": 10866, "code": "N = int(input())\nans = 0\nfor _ in range(N):\n    l, r = map(int, input().split())\n    ans += r - l + 1\nprint(ans)\n"}
{"label": 84, "index": 10867, "code": "N=input()\nnum=0\nfor i in range(N):\n    x=map(int,raw_input().split())\n    temp_num=len(range(x[0],x[1]+1))\n    num=num+temp_num\nprint num    "}
{"label": 84, "index": 10868, "code": "N = int(input())\na = [list(map(int, input().split())) for i in range(N)]\n\nans = 0\nfor x in a:\n  ans += x[1] - x[0] + 1\n  \nprint(ans)\n"}
{"label": 84, "index": 10869, "code": "N = int(input())\na = 0\nfor i in range(N):\n    l, r = map(int, input().split())\n    a += r - l + 1\nprint(a)\n"}
{"label": 84, "index": 10870, "code": "n = int(input())\nans = 0\nfor i in range(n):\n    l, r = list(map(int, input().split()))\n    ans += r - l + 1\n\nprint(ans)"}
{"label": 84, "index": 10871, "code": "print(sum([1+len(range(*list(map(int,input().split())))) for i in range(int(input()))]))"}
{"label": 84, "index": 10872, "code": "# coding: utf-8\nimport sys\n\n\ndef main():\n\n    NumCount = 0\n\n    lines = sys.stdin.readlines()\n    for i,line in enumerate(lines):\n        if i==0:\n            continue\n        else:\n            value = line.split()\n            if len(value)==1:\n                NumCount += 1\n            else:\n                NumCount += int(value[1])-int(value[0]) + 1\n    print(NumCount)\n    return\n\n\nif __name__=='__main__':\n    main()\n"}
{"label": 84, "index": 10873, "code": "N = int(input())\nsum = 0\nfor n in range(N):\n    a, b = [int(i) for i in input().split()]\n    sum += b-a+1\n\nprint(sum)"}
{"label": 84, "index": 10874, "code": "N=int(input())\nans=N\nfor i in range(N):\n  a,b=map(int,input().split())\n  ans+=b-a\nprint(ans)"}
{"label": 84, "index": 10875, "code": "N=int(input())\nans=0\nfor i in range(N):\n l,r=map(int, input().split())\n ans+=r-l+1\nprint(ans)"}
{"label": 84, "index": 10876, "code": "N = int(input())\ntotal = 0\n\nfor i in range(N):\n    group = input().split()\n    start, end = int(group[0]), int(group[1])\n    total += end - start + 1\n\nprint(total)"}
{"label": 84, "index": 10877, "code": "n = int(input())\nprint(sum([-int(eval(input().replace(' ', '-')))+1 for i in range(n)]))\n"}
{"label": 84, "index": 10878, "code": "n = int(input())\nans = 0\nfor i in range(n):\n    a,b = map(int,input().split())\n    ans += (b - a) + 1\nprint(ans)"}
{"label": 84, "index": 10879, "code": "N = int(input())\n\ncount = 0\nfor i in range(N):\n    inlist = [int(_) for _ in input().split()]\n    count += inlist[1] - inlist[0] + 1\n\nprint(count)\n"}
{"label": 84, "index": 10880, "code": "# -*- coding:utf-8 -*-\nN = int(input())\nans = 0\nfor tmp in range(N):\n    l, r = map(int, input().split())\n    ans += r-l+1\nprint(ans)"}
{"label": 84, "index": 10881, "code": "n = int(input())\n\nsum = 0\n\nfor i in range(n):\n    l, r = map(int, input().split(\" \"))\n\n    sum += r - l + 1\n\nprint(sum)"}
{"label": 84, "index": 10882, "code": "N = int(input())\n\ns = 0\nfor _ in range(N):\n    l, r = [int(x) for x in input().split(' ')]\n    s += r - l + 1\n\nprint(s)\n"}
{"label": 84, "index": 10883, "code": "N = int(input())\nsum = 0\nfor i in range(N):\n  l, r = [int(n) for n in input().split()]\n  sum += r-l+1\nprint(sum)"}
{"label": 84, "index": 10884, "code": "n = int(input())\nans = 0\nfor _ in range(n):\n  l, r = map(int, input().split())\n  ans += r - l + 1\n  \nprint(ans)"}
{"label": 84, "index": 10885, "code": "itera = input()\nitera = int(itera)\ntotal = 0\n\nfor i in range(0, itera):\n\tvar1, var2 = input().split()\n\tvar1 = int(var1)\n\tvar2 = int(var2)\n\ttotal += (var2+1)-var1\n\nprint(total)"}
{"label": 84, "index": 10886, "code": "N=int(input())\npeople=0\nfor i in range(N):\n    left,right=map(int,input().split())\n    number = right - left +1\n    people += number\nprint(people)"}
{"label": 84, "index": 10887, "code": "N = int(raw_input())\ntemp = 0\nfor i in range(0,N):\n a = raw_input().split(\" \")\n temp += int(a[1]) - int(a[0])+1\nprint temp"}
{"label": 84, "index": 10888, "code": "N = int(input())\nX = [list(map(int, input().split())) for _ in range(N)]\n\nans = 0\nfor l, r in X:\n    ans += r - l + 1\nprint(ans)\n"}
{"label": 84, "index": 10889, "code": "n = int(input())\n\nhito = 0\nfor i in range(n):\n    lr = list(map(int,input().split()))\n    hito += (lr[1] - lr[0] +1 )\n    \nprint(hito)"}
{"label": 84, "index": 10890, "code": "n = int(input())\np = 0\nfor _ in range(n):\n  i,j = [int(k) for k in input().split()]\n  p += j-i+1\nprint(p)"}
{"label": 84, "index": 10891, "code": "N = int(input())\nL = []\nR = []\nfor i in range(N):\n    l, r = list(map(int, input().split()))\n    L.append(l)\n    R.append(r)\ntotal = 0\nfor i in range(N):\n    total += R[i] - L[i] + 1\n\nprint(total)"}
{"label": 84, "index": 10892, "code": "N = int(input())\nans = 0\n\nfor i in range(N):\n    a, b = map(int, input().split())\n    ans += b-a+1\n\nprint(ans)"}
{"label": 84, "index": 10893, "code": "n = int(input())\nans = 0\nfor i in range(n):\n    l, r = list(map(int, input().split()))\n    ans += r - l + 1\nprint(ans)"}
{"label": 84, "index": 10894, "code": "N = int(input())\nans = 0\nfor i in range(N):\n    L,R = map(int,input().split())\n    ans += R-L +1\n\nprint(ans)\n\n"}
{"label": 84, "index": 10895, "code": "n = int(input())\nans = 0\nfor i in range(n):\n    l, r = map(int, input().split())\n    ans += r - l + 1\nprint(ans)\n"}
{"label": 84, "index": 10896, "code": "N = int(input())\nans = 0\n\nfor i in range(N):\n    l, r = map(int, input().split())\n    ans += r-l+1\n\nprint(ans)\n"}
{"label": 84, "index": 10897, "code": "ans = 0\nfor i in range(input()):\n    l, r = map(int, raw_input().split())\n    ans += r - l + 1\nprint ans"}
{"label": 84, "index": 10898, "code": "N = int(input())\ntotal = 0\nfor i in range(N):\n    l,r = map(int,input().split())\n    total += (r - l) + 1\nprint(total)\n"}
{"label": 84, "index": 10899, "code": "#!/usr/bin/python3\n\nn = int(input())\n\nt = 0\nfor i in range(n):\n    c = list(map(int, input().split()))\n    t += c[1] - c[0] + 1\n\nprint(t)"}
{"label": 84, "index": 10900, "code": "n = int(input())\nans = 0\nfor i in range(n):\n    l, r = map(int,input().split())\n    ans += (r - l + 1)\n\nprint(ans)\n"}
{"label": 84, "index": 10901, "code": "n=int(input())\nans=0\nfor i in range(n):\n    a,b=map(int,input().split())\n    ans += b-a+1\n\nprint(ans)"}
{"label": 84, "index": 10902, "code": "N = int(input())\np = 0\nfor _ in range(N):\n    l, r = map(int, input().split())\n    p += r - l +1\nprint(p)"}
{"label": 84, "index": 10903, "code": "num = int(input())\nans = 0\nfor a in range(num):\n    temp = input().split(\" \")\n    for b in range(len(temp)):\n        temp[b] = int(temp[b])\n    ans += (temp[1] - temp[0]) + 1\nprint(ans)"}
{"label": 84, "index": 10904, "code": "N=int(input())\n\nans=0\n\nfor i in range(N):\n\ta=[int(i) for i in input().split()]\n\tans+=(a[1]-a[0]+1)\nprint(ans)"}
{"label": 84, "index": 10905, "code": "N = int(input())\ntotal = 0\nfor i in range(N):\n    tmp = list(map(int,input().split()))\n    total += tmp[1]-tmp[0]+1\nprint(total)\n    \n    "}
{"label": 84, "index": 10906, "code": "N = int(input())\nsum = 0\n\nfor num in range(N):\n\ta, b = (int(_) for _ in raw_input().split()) \n\tsum += b - a + 1\n\nprint(sum)"}
{"label": 84, "index": 10907, "code": "N = int(input())\n\nans = 0\nfor i in range(N):\n    l, r = map(int, input().split())\n    ans += r - l + 1\n\nprint(ans)\n"}
{"label": 84, "index": 10908, "code": "N = input()\nans = 0\nfor i in xrange(N):\n    l, r = map(int, raw_input().split())\n    ans += r - l + 1\nprint ans\n"}
{"label": 84, "index": 10909, "code": "N= int(input())\n\nL = []\nR = []\nfor i in range(N):\n\tl, r= map(int, input().split())\n\tL.append(l)\n\tR.append(r)\n\nQ=[]\nP=0\nfor x in range(N):\n    P=R[x]-L[x]+1\n    Q.append(P)\n    \nprint(sum(Q))"}
{"label": 84, "index": 10910, "code": "n = int(input())\nans = 0\nfor tc in range(n):\n  l, r = map(int, input().split())\n  ans += (r - l) + 1\nprint(ans)"}
{"label": 84, "index": 10911, "code": "N = int(input())\nf = lambda l,r: r-l+1\nprint(sum(f(*map(int,input().split())) for i in range(N)))"}
{"label": 84, "index": 10912, "code": "n = int(raw_input())\ns = 0\nfor _ in range(n):\n    l,r = map(int, raw_input().split())\n    s += r - l + 1\nprint s\n"}
{"label": 84, "index": 10913, "code": "sum=0\nfor i in range(int(input())):\n  l,r=[int(x) for x in  input().split()]\n  sum = sum + r - l + 1\nprint(sum)\n\n\n"}
{"label": 84, "index": 10914, "code": "import numpy as np\n\n\ndef getInput():\n    \"\"\"\n\n    :return: list of list of str. 1st dim: row, 2nd dim: column.\n    \"\"\"\n    separator = ' '\n    ret_array = []\n    while True:\n        try:\n            row = input().split(sep=separator)\n            ret_array.append(row)\n        except EOFError:\n            break\n    return ret_array\n\n\ng = getInput()\n\n# number\nN = np.array(list(map(int, g[0])), dtype=np.int32)\n# l,r\nl = []\nr = []\nfor row_idx in range(1, len(g)):\n    l.append(int(g[row_idx][0]))\n    r.append(int(g[row_idx][1]))\n\nl = np.array(l, dtype=np.int32)\nr = np.array(r, dtype=np.int32)\n\ns = r-l+1\n\nprint(s.sum())\n"}
{"label": 84, "index": 10915, "code": "# coding: utf-8\n\nseat = [0] * 100000\nn = input()\nfor _ in xrange(n):\n    l, r = map(int, raw_input().split())\n    for j in xrange(l-1, r):\n        seat[j] = 1\n\nprint seat.count(1)\n"}
{"label": 84, "index": 10916, "code": "import numpy as np\nhoge = input()\nN = int(hoge)\ndata = np.zeros((N,2))\nnum = 0\nfor i in range(N):\n    hoge = input()\n    hoge = hoge.strip().split(\" \")\n    num += int(hoge[1])-int(hoge[0])+1\nprint(num)"}
{"label": 84, "index": 10917, "code": "n = int(input())\nans = 0\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    ans += b - a +1\nprint(ans)"}
{"label": 84, "index": 10918, "code": "n = int(input().strip())\ntotal = 0\nfor _ in range(n):\n    l, r = [int(x) for x in input().strip().split()]\n    total += r - l + 1\nprint(total)"}
{"label": 84, "index": 10919, "code": "N = input()\ncus = 0\n\nfor i in range(N):\n    l = (map(int, raw_input().split()))\n    cus += (l[1] - l[0] + 1)\n\nprint cus\n"}
{"label": 85, "index": 10920, "code": "from collections import Counter\nN = int(input())\nnumbers = [int(input()) for i in range(N)]\n\nnum_cnt = Counter(numbers)\n\nans_box = list(filter(lambda x:x%2==1 , num_cnt.values()))\nprint(len(ans_box))"}
{"label": 85, "index": 10921, "code": "def Write_and_Erase():\n\n    numbers = []\n    try:\n        LOCAL_FLAG\n        N = 3\n        numbers = [6, 2, 6]\n        # N = 4\n        # numbers = [2, 5, 5, 2]\n        N = 6\n        numbers = [12, 22, 16, 22, 18, 12]\n\n    except NameError:\n        N = int(input())\n        for i in range(N):\n            numbers.append(int(input()))\n\n    onPaper = set([numbers[0]])\n    for i in range(1, N):\n        if numbers[i] in onPaper:\n            onPaper.remove(numbers[i])\n        else:\n            onPaper.add(numbers[i])\n\n    # print(onPaper)\n    print(len(onPaper))\n\n\nWrite_and_Erase()"}
{"label": 85, "index": 10922, "code": "from collections import Counter\n\ndef main():\n    N = int(input())\n    A = []\n\n    for _ in range(N):\n        A.append(int(input()))\n\n    ans = 0\n    counter = Counter(A)\n    for _, cnt in counter.most_common():\n        if cnt % 2 == 1:\n            ans += 1\n\n    print(ans)\n    \nmain()"}
{"label": 85, "index": 10923, "code": "n = int(input())\nA = [int(input()) for i in range(n)]\n\nB = set()\nfor a in A:\n    if a in B:\n        B.remove(a)\n    else:\n        B.add(a)\nprint(len(B))\n        \n"}
{"label": 85, "index": 10924, "code": "N = input()\nS = set()\nfor _ in range(N):\n    A = input()\n    if A in S:\n        S.remove(A)\n    else:\n        S.add(A)\nprint len(S)\n"}
{"label": 85, "index": 10925, "code": "a=input()\nb=[]\nfor i in range(a):\n    b.append(input())\nb.sort()\nc=[]\npre=0\ntime=0\nfor i in b:\n    if pre==i:\n        time+=1\n    else:\n        if time%2==1:\n            c.append(pre)\n        pre=i\n        time=1\nif time%2!=0 and pre!=0:\n    c.append(pre)\nprint len(c)"}
{"label": 85, "index": 10926, "code": "import numpy as np\nN=input()\nx=[]\ndict={}\nfor i in range(N):\n    a=raw_input()\n    if a in dict:\n        if dict[a]==1:\n            dict[a]=0\n        else:\n            dict[a]=1\n    else:\n        dict[a]=1\n\nprint np.sum(np.array(dict.values())%2)\n"}
{"label": 85, "index": 10927, "code": "d = {}\nfor i in range(input()):\n  a = input()\n  d[a] = d.get(a, 0) + 1\n\nprint len(filter(lambda x: x % 2, map(lambda x: d[x], d)))\n"}
{"label": 85, "index": 10928, "code": "import functools\nimport collections\nn = int(input())\nprint(sum(\n    map(\n        lambda x: x % 2,\n        functools.reduce(\n            lambda d, v: d.update({v: d[v]+1}) or d,\n            [int(input()) for i in range(n)],\n            collections.defaultdict(lambda: 0),\n        ).values(),\n    )\n))\n"}
{"label": 85, "index": 10929, "code": "from collections import Counter\n\nn = int(input())\ncnt = Counter(int(input()) for _ in range(n))\nprint(sum(1 for k, v in cnt.most_common() if v % 2 == 1))"}
{"label": 85, "index": 10930, "code": "from collections import Counter\nprint(sum([i % 2 for i in Counter([input() for _ in range(int(input()))]).values()]))"}
{"label": 85, "index": 10931, "code": "n = int(input())\nd = dict()\nfor i in range(n):\n    a = int(input())\n    if a in d:\n        if d[a] == 0:\n            d[a] = 1\n        else:\n            d[a] = 0\n    else:\n        d[a] = 1\n\nprint(sum(d.values()))\n"}
{"label": 85, "index": 10932, "code": "n = int(input())\nm = set()\nwhile n:\n    x = int(input())\n    if x in m:\n        m.remove(x)\n    else:\n        m.add(x)\n    n -= 1\nprint(len(m))\n"}
{"label": 85, "index": 10933, "code": "n=int(input())\n\nleft=set()\nfor _ in range(n):\n    i=input()\n    if i in left:\n        left.remove(i)\n    else:\n        left.add(i)\nprint(len(left))"}
{"label": 85, "index": 10934, "code": "# coding=utf-8\nN = int(raw_input().rstrip())\nA = {}\nfor i in range(N):\n    a = int(raw_input())\n    if a in A:\n        if A[a] == 1:\n            A[a] = 0\n        else:\n            A[a] = 1\n    else:\n        A[a] = 1\nprint sum(A.values())"}
{"label": 85, "index": 10935, "code": "import sys\n\nstdin = sys.stdin\n\nni = lambda: int(ns())\nna = lambda: list(map(int, stdin.readline().split()))\nns = lambda: stdin.readline()\n\nn = ni()\ns = set()\nfor i in range(n):\n    x = ni()\n    if x in s:\n        s.remove(x)\n    else:\n        s.add(x)\nprint(len(s))"}
{"label": 85, "index": 10936, "code": "# -*- coding: utf-8 -*-\n\"\"\"\n\"\"\"\n\n\nMemo = []\ndef solve(data):\n    global Memo\n    for d in data:\n        if d in Memo:\n            Memo.remove(d)\n        else:\n            Memo.append(d)\n    return len(Memo)\n\n\ndef solve2(data):\n    from collections import Counter\n    c = Counter(data).most_common()\n    remaining = [x for x in c if x[1]%2==1]\n    return len(remaining)\n\n\ndef main():\n    N = int(input())\n    data = [int(input()) for _ in range(N)]\n    result = solve2(data)\n    print(result)\n\n\nif __name__ == '__main__':\n    main()\n    "}
{"label": 85, "index": 10937, "code": "n=int(raw_input())\nli={}\nwhile n !=0:\n    a = raw_input()\n    if a in li:\n        del li[a]\n    else:\n        li[a]=a\n    n-=1\nprint(len(li))"}
{"label": 85, "index": 10938, "code": "import collections\nN = int(input())\nanswer = 0\nflag = collections.defaultdict(int)\n\nfor i in range(N):\n  a = int(input())\n  flag[a] = (flag[a]+1)%2\n\nlist = list(flag.values())\n\nfor i in range(len(list)):\n  if list[i] == 1:\n    answer+=1\n\nprint(answer)"}
{"label": 85, "index": 10939, "code": "N = int(input())\nfrom collections import Counter\nc = []\nfor i in range(N):\n    c.append(int(input()))\n\nc=Counter(c)\nprint(sum([1 for k, v in c.items() if v % 2 != 0]))"}
{"label": 85, "index": 10940, "code": "def C_WriteandErase(N, A):\n    import collections\n    count_dict = collections.Counter(A)  # \u8a00\u3063\u305f\u6570\u5b57\u306e\u51fa\u73fe\u56de\u6570\n    ans = 0\n    for k, v in count_dict.items():  # \u6570\u5b57k\u306fv\u56de\u51fa\u305f\u3053\u3068\u3092\u610f\u5473\u3059\u308b\n        if v % 2 == 0:  # k\u304c\u5076\u6570\u56de\u51fa\u305f\u306a\u3089\u3001k\u306f\u7d19\u306b\u6b8b\u3089\u306a\u3044\n            pass\n        else:\n            ans += 1  # k\u304c\u5947\u6570\u56de\u51fa\u305f\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u306f\u6b8b\u3063\u3066\u3044\u308b\n    return ans\n\nN = int(input())\nA = [int(input()) for i in range(N)]\nprint(C_WriteandErase(N, A))"}
{"label": 85, "index": 10941, "code": "N = int(input())\n\na = [int(input()) for i in range(N)]\n\na = sorted(a)\n\nt = 0\nb = False\nans = 0\nfor i in range(N):\n    if not a[i] == t:\n        if b:\n            ans += 1\n        t = a[i]\n        b = True\n    else:\n        if b:\n            b = False\n        else:\n            b = True\nif b:\n    ans += 1\n\n\nprint(ans)"}
{"label": 85, "index": 10942, "code": "n=int(input())\nbuff=[]\nans=1\nfor i in range(n):\n    buff.append(input())\n\na=sorted(buff)\n\nfor i in range(1,n):\n    if a[i] == a[i-1]:\n        a[i-1]= -1\n        a[i]= -1\n        if ans>0:\n            ans -= 1\n    else:\n        ans += 1\n\nprint(ans)\n"}
{"label": 85, "index": 10943, "code": "N = int(input())\nset = set([])\nfor _ in range(N):\n    p = int(input())\n    if p not in set:\n        set.add(p)\n    else:\n        set.remove(p)\nprint(len(set))"}
{"label": 85, "index": 10944, "code": "import sys\nfrom collections import Counter\n\n# sys.stdin = open('c1.in')\n\n\ndef read_int_list():\n    return list(map(int, input().split()))\n\n\ndef read_str_list():\n    return input().split()\n\n\ndef read_int():\n    return int(input())\n\n\ndef read_str():\n    return input()\n\n\ndef main():\n    n = read_int()\n    c = Counter()\n    for i in range(n):\n        a = read_int()\n        c[a] += 1\n\n    res = 0\n    for j in c:\n        if c[j] % 2 != 0:\n            res += 1\n    print(res)\n\n\nmain()\n"}
{"label": 85, "index": 10945, "code": "\n\nN=int(input())\na=[]\nfor i in range(N):\n    a.append(int(input()))\n\nchk={}\n\nfor sa in a:\n    if sa in chk:\n        if chk[sa]==1:\n            chk[sa]=0\n        else:\n            chk[sa]=1\n    else:\n        chk[sa]=1\n\n\nprint(sum(chk.values()))\n"}
{"label": 85, "index": 10946, "code": "dict = {}\nN = int(raw_input())\nfor i in range(0,N):\n j = raw_input()\n try:\n  del dict[j]\n except:\n  dict[j]=1\nprint len(dict)"}
{"label": 85, "index": 10947, "code": "\ndef solve():  # 073C - Write and Erase\n    N = int(input())\n    joisino_list = {}\n    cnt = 0\n\n    for _ in range(N):\n        a = int(input())\n\n        if a in joisino_list:\n            joisino_list[a] += 1\n        else:\n            joisino_list[a] = 1\n\n    for i in joisino_list.values():\n        if i % 2:\n            cnt += 1\n\n    print(cnt)\n    \n  \nsolve()"}
{"label": 85, "index": 10948, "code": "import collections as cl\nimport numpy as np\n\n# \u30c7\u30d0\u30c3\u30b0\u7528\nDEBUG = False\n#DEBUG = True\n\n# \u5ba3\u8a00\nresult = 0\nA = []\nELEM_MAX = 10000\n\n# \u5165\u529b\u90e8\nif DEBUG:\n    N = '10'\n    a = '1 2 3 4 5'\n\nelse:\n    N = int(input())\n\n    for i in range(N):\n        a = int(input())\n        A.append(a)\n\n# \u51e6\u7406\u90e8\nA_counter = cl.Counter(A)\nfor val in A_counter.values():\n    result += val % 2\n\n# \u51fa\u529b\u90e8\nprint(result)"}
{"label": 85, "index": 10949, "code": "time = int(input())\nans = []\nn = 0\nfor i in range(time):\n    ans.append(input())\nans.sort(key=int)\nwhile n+1 < len(ans):\n    if ans[n] == ans[int(n + 1)]:\n        ans.pop(n)\n        ans.pop(n)\n    else:\n        n += 1\nprint(len(ans))"}
{"label": 85, "index": 10950, "code": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n\n\ndef main():\n    N = int(input())\n\n    nums = set()\n    for _ in range(N):\n        a = int(input())\n        if a in nums:\n            nums.remove(a)\n        else:\n            nums.add(a)\n\n    print(len(nums))\n\nif __name__ == \"__main__\": main()\n"}
{"label": 85, "index": 10951, "code": "from sys import stdin\nn = int(stdin.readline())\ndi = {}\nfor i in xrange(n):\n m = int(stdin.readline())\n di[m] = di.get(m,0)^1\nans = 0\nfor i in di:\n ans += di[i]\nprint ans"}
{"label": 85, "index": 10952, "code": "N = input()\n\nl = []\n\nfor i in range(N):\n    l.append(input())\n\nl.sort()\n\nptr = 0\nres = 0\nwhile ptr < N:\n    cc = l[ptr]\n    f = 0\n    while (ptr < N and l[ptr] == cc):\n        f += 1\n        ptr += 1\n    res += f%2\n\nprint res\n"}
{"label": 85, "index": 10953, "code": "n=int(input())\nbuff=[]\nans=1\nfor i in range(n):\n    buff.append(input())\n\na=sorted(buff)\n\nfor i in range(1,n):\n    if a[i] == a[i-1]:\n        a[i-1]= -1\n        a[i]= -1\n        if ans>0:\n            ans -= 1\n    else:\n        ans += 1\n\nprint(ans)"}
{"label": 85, "index": 10954, "code": "import collections as col\n\n\nn = int(input())\nary = []\nfor _ in range(n):\n    ary.append(input())\n\nary = col.Counter(ary)\n\nprint(len([v for v in ary.values() if v%2 != 0]))"}
{"label": 85, "index": 10955, "code": "n = int(input())\na = [int(input()) for i in range(n)]\n\na.sort()\n\nfor i in range(n-1):\n    if a[i] == a[i+1]:\n        a[i] = 0\n        a[i+1] = 0\n\nprint(len(a)-a.count(0))\n"}
{"label": 85, "index": 10956, "code": "n=int(input())\na=[int(input()) for i in range(n)]\nb=[]\n\nm=0\ncount=[0 for i in range(n)]\ncount[m]=1\n\nans_count=0\na.sort()\n\nfor i in range(n-1):\n    if a[m]==a[i+1]:\n        count[m]=count[m]+1\n    else:\n        m=i+1\n        count[m]=1\n\nfor i in range(n):\n     ans_count=ans_count+count[i]%2\n\nprint(ans_count)"}
{"label": 85, "index": 10957, "code": "N = int(input())\ns = set()\nfor i in range(N):\n    j = int(input())\n    if j in s:\n        s.remove(j)\n    else:\n         s.add(j)\n\nprint(len(s))\n"}
{"label": 85, "index": 10958, "code": "n=int(raw_input())\nli={}\nwhile n !=0:\n    a = raw_input()\n    if a in li:\n        del li[a]\n    else:\n        li[a]=a\n    n-=1\nprint(len(li))\n"}
{"label": 85, "index": 10959, "code": "n = int(input())\ncard = set()\n\nfor i in range(n):\n    num = int(input())\n    if num in card:\n        card.remove(num)\n    else:\n        card.add(num)\nprint(len(card))"}
{"label": 85, "index": 10960, "code": "from collections import Counter\nN=int(input())\nc=Counter([ input() for _ in range(N) ])\nprint(len([ 1 for k in c.keys() if c[k]%2==1]))"}
{"label": 85, "index": 10961, "code": "N=int(input())\n\nA=[int(input()) for i in range(N)]\nA.sort()\nans=N\n\nflag=False\n\nfor i in range(N-1):\n\tif flag==True:\n\t\tflag=False\n\t\tcontinue\n\telif A[i]==A[i+1]:\n\t\tans-=2\n\t\tflag=True\n#print(A)\nprint(ans)"}
{"label": 85, "index": 10962, "code": "n=int(raw_input())\nres = set([])\nfor i in range(n) :\n    x = int(raw_input())\n    if x in res :\n        res.remove(x)\n    else :\n        res.add(x)\nprint len(res)"}
{"label": 85, "index": 10963, "code": "from collections import Counter\n\nN = int(input())\nA = [int(input()) for _ in range(N)]\n\nans = 0\nc = Counter(A)\nfor x in c:\n    if c[x] % 2 != 0:\n        ans += 1\nprint(ans)\n"}
{"label": 85, "index": 10964, "code": "from collections import Counter\n\ndef main():\n    n = int(input())\n    c = Counter()\n    for _ in range(n):\n        x = int(input())\n        c[x] += 1\n    ans = 0\n    for cc in c.values():\n        if cc % 2 == 1:\n            ans += 1\n    print(ans)\n    \nif __name__ == '__main__':\n    main()"}
{"label": 85, "index": 10965, "code": "n = int(input())\nA = [int(input()) for i in range(n)]\n \nB = set()\nlenB = 0\nfor a in A:\n    if a in B:\n        B.remove(a)\n        lenB -= 1\n    else:\n        B.add(a)\n        lenB += 1\nprint(lenB)"}
{"label": 85, "index": 10966, "code": "N = int(input())\nA = []\nfor i in range(N):\n    A.append(int(input()))\nsortedA = sorted(A)\n\ncount = 1\noddA = []\nfor i in range(len(sortedA)):\n    if i+1==len(sortedA):\n        if count%2==1:\n            oddA.append(sortedA[i])\n        count = 1\n    else:\n        if sortedA[i]==sortedA[i+1]:\n            count += 1\n        else:\n            if count%2==1:\n                oddA.append(sortedA[i])\n            count = 1\n\nprint(len(oddA))"}
{"label": 85, "index": 10967, "code": "d = dict()\nfor i in range(int(input())):\n  elem = int(input())\n  if elem in d:\n    del d[elem]\n  else:\n    d[elem] = i\nprint(len(d))"}
{"label": 85, "index": 10968, "code": "from collections import defaultdict \n\nN = int(raw_input())\nd = defaultdict(int)\nfor i in xrange(N):\n    A = int(raw_input())\n    d[A] = (d[A] + 1) % 2\nans = 0\nfor v in d.values():\n    ans += v\nprint ans\n"}
{"label": 85, "index": 10969, "code": "number_set = set()\nN = int(input())\n\nfor i in range(N):\n    new_num = input()\n    if new_num in number_set:\n        number_set.remove(new_num)\n    else:\n        number_set.add(new_num)\n\nprint(len(number_set))"}
{"label": 85, "index": 10970, "code": "# -*- coding: utf-8 -*-\n\nimport os\nimport sys\nimport math\nimport numpy as np\n\n\nN = int(input())\nA = np.array([int(input()) for i in range(N)])\n\ncounter = {}\n\nfor a in A:\n    if a in counter.keys():\n        counter[a] = abs(counter[a] - 1)\n    else:\n        counter[a] = 1\n\nprint(sum(counter.values()))"}
{"label": 85, "index": 10971, "code": "import numpy as np\nhoge = input()\nN = int(hoge)\npaper ={}\nfor i in range(N):\n    hoge = input()\n    hoge = hoge.strip()\n    if hoge in paper:\n        paper.pop(hoge)\n    else:\n        paper[hoge] = 1\n    \nprint(len(paper))"}
{"label": 85, "index": 10972, "code": "from collections import Counter\nc = Counter([int(raw_input()) for _ in range(int(raw_input()))])\nprint len(filter(lambda x: x % 2 == 1, c.values()))\n"}
{"label": 85, "index": 10973, "code": "N = int(input())\nd = {}\nfor i in range(N):\n    a = int(input())\n    if a in d:\n        d[a] = 1 - d[a]\n    else:\n        d[a] = 1\nprint(sum(d.values()))\n"}
{"label": 85, "index": 10974, "code": "print(sum([1 if a in s else -1 for s in [set()] for _ in [0]*(int(input())) for a in [int(input())] if (a not in s and not s.add(a)) or not s.remove(a)]))"}
{"label": 85, "index": 10975, "code": "N=int(input())\nA=[int(input()) for i in range(N)]\nA.sort()\ni=0\nans=0\nwhile i<N:\n  p=A[i]\n  count=0\n  for j in range(i,N):\n    if A[j]==A[i]:\n      count+=1\n    else:\n      break\n  if count%2==1: ans+=1\n  i+=count\nprint(ans)"}
{"label": 85, "index": 10976, "code": "import numpy as np\n\nn = int(input())\n\na = np.zeros(n, dtype = int)\n\nfor i in range(n):\n    a[i] = int(input())\n\na = np.sort(a)\n\nsum = 0\nfor i in range(n):\n    if(i == 0):\n        flag = 1\n    elif(a[i - 1] == a[i]):\n        flag += 1\n    else:\n        if(flag % 2 == 1):\n            sum += 1\n        else:\n            flag = 1\n\nif(flag % 2 == 1):\n    sum += 1\n\nprint(sum)"}
{"label": 85, "index": 10977, "code": "# -*- coding: utf-8 -*-\nimport heapq\nimport math\n\nN = int(input())\nA = []\nfor i in range(N):\n    A.append(int(input()))\nA = sorted(A)\nnum = 0\nbef = None\ncount = 0\nfor a in A:\n    if bef is None:\n        bef = a\n    if bef == a:\n        count += 1\n    else:\n        if count % 2 == 1:\n            num += 1\n        count = 1\n    bef = a\nif count % 2 == 1:\n    num += 1\n\nprint(num)\n"}
{"label": 85, "index": 10978, "code": "a = int(input())\ns = set()\nt = 0\nfor i in range(a):\n   nb = int(input())\n   if nb in s:\n      s.remove(nb)\n      t -= 1\n   else:\n      s.add(nb)\n      t += 1\nprint(t)"}
{"label": 85, "index": 10979, "code": "N = input()\nS = set()\nfor i in xrange(N):\n    a = int(raw_input())\n    if a in S:\n        S.discard(a)\n    else:\n        S.add(a)\nprint len(S)\n"}
{"label": 85, "index": 10980, "code": "# -*- coding:utf-8 -*-\nN = int(input())\nans = 0\narray = []\nd = {}\nfor tmp in range(N):\n    a = int(input())\n    array.append(a)\n    if a not in d:\n        d[a] = 1\n    else:\n        d[a] += 1\narray = list(set(array))\nfor tmp in range(len(array)):\n    if d[array[tmp]]%2 == 1:\n        ans += 1\n    else:\n        pass\nprint(ans)"}
{"label": 85, "index": 10981, "code": "N = int(input())\ncard = set()\n\nfor i in range(N):\n    A = int(input())\n    if A in card:\n        card.remove(A)\n    else:\n        card.add(A)\nprint(len(card))"}
{"label": 85, "index": 10982, "code": "def i1():\n return int(input())\ndef i2():\n return [int(i) for i in input().split()]\nfrom collections import defaultdict\nd = defaultdict(int)\nn=i1()\na=0\nfor i in range(n):\n    d[i1()]+=1\nfor i in d.values():\n    if i%2==1:\n      a+=1\nprint(a)"}
{"label": 85, "index": 10983, "code": "from collections import Counter\n\nN = int(input())\nA = []\n\nfor _ in range(N):\n    A.append(int(input()))\n\nans = 0\ncounter = Counter(A)\nfor _, cnt in counter.most_common():\n    if cnt % 2 == 1:\n        ans += 1\n        \nprint(ans)"}
{"label": 85, "index": 10984, "code": "from collections import Counter\n\nn = int(input())\nc = Counter(int(input()) for _ in range(n))\nprint(sum(v & 1 for v in c.values()))\n"}
{"label": 85, "index": 10985, "code": "N = int(input())\nResult = set()\nfor i in range(N):\n    number = int(input())\n    if  number in Result:\n        Result.remove(number)\n    else:\n        Result.add(number)\nprint(len(Result))"}
{"label": 85, "index": 10986, "code": "N = input()\na = [input() for i in range(N)]\n#print a\n\ndict={}\n\n\nfor i in range(N):\n\tif a[i] in dict:\n\t\tdict[ a[i] ]+=1 \n\telse:\n\t\tdict[ a[i] ]=1\n\n#print dict\n\ncnt=0\nfor key,value in dict.items():\t\t\t\n\tcnt+=value%2\n\nprint cnt\n\n"}
{"label": 85, "index": 10987, "code": "from collections import defaultdict\nd = defaultdict(int)\nn = int(raw_input())\nfor _ in range(n):\n    d[int(raw_input())] += 1\nprint len(filter(lambda x: x % 2 == 1, d.values()))\n"}
{"label": 85, "index": 10988, "code": "num=int(raw_input())\ntmp={}\nfor i in range(num):\n    a=int(raw_input())\n    if a in tmp:\n        tmp[a]+=1\n    else:\n        tmp[a]=1\n\noutput=0\nfor i in tmp:\n    if tmp[i]%2 ==1:\n        output+=1\nprint output"}
{"label": 85, "index": 10989, "code": "N = int(raw_input())\nd = {}\nfor n in xrange(N):\n  a = int(raw_input())\n  d[a] = d.get(a, 0) + 1\n\nanswer = 0\nfor x in d.itervalues():\n  if x % 2 == 1:\n    answer += 1\n\nprint answer"}
{"label": 85, "index": 10990, "code": "N = input()\nN = int(N)\n\na_list = {}\n\nans = 0\n\nfor i in range(N):\n    a = input()\n    a = int(a)\n    if a not in a_list:\n        a_list[a] = 1\n    else:\n        a_list[a] = (a_list[a] + 1) % 2\n    if a_list[a]:\n        ans += 1\n    else:\n        ans -= 1\n\nprint(ans)"}
{"label": 85, "index": 10991, "code": "from collections import Counter\n\nN=int(input())\n\nA=[]\n\nfor i in range(N):\n    a=int(input())\n    A.append(a)\n\nC=Counter(A)\n\nD=C.values()\n\ncnt = 0\n\nfor x in D:\n    if x%2!=0:\n        cnt += 1\n    else:\n        pass\n    \nprint(cnt)"}
{"label": 85, "index": 10992, "code": "from collections import Counter\n\nif __name__ == '__main__':\n    N = int(input())\n    A = []\n    for i in range(N):\n        A.append(int(input()))\n\n    counter_a = Counter(A)\n\n    ans = 0\n    for count in counter_a.values():\n        if count % 2 != 0:\n            ans += 1\n    # print(counter_a.values())\n    print(ans)\n"}
{"label": 85, "index": 10993, "code": "from collections import Counter\n\nN = int(input())\na = [int(input()) for i in range(N)]\n\ncounter = Counter(a)\n\nans = 0\nfor num in counter:\n\tif counter[num] % 2 == 1:\n\t\tans += 1\n\n        \nprint(ans)\n"}
{"label": 85, "index": 10994, "code": "num = int(input())\nary = []\nans = 0\nfor a in range(num):\n    ary.append(int(input()))\nary.sort()\nikkomae = ary[0]\ncount = 1\nfor a in range(num):\n    ind = a + 1\n    if ind == num:\n        break\n    imano = ary[ind]\n    if ikkomae == imano:\n        count+=1\n    else:\n        if(count%2==1):\n            ans+=1\n        count = 1\n    ikkomae = imano\nif(count%2==1):\n    ans+=1\nprint(ans)\n        "}
{"label": 85, "index": 10995, "code": "import numpy as np\nfrom collections import Counter\nn = int(input())\nnum_l=[input() for i in range(n)]\nndarr=np.array(list(Counter(num_l).values()))\nprint(len(ndarr[ndarr%2 != 0]))"}
{"label": 85, "index": 10996, "code": "# coding;utf-8\n\nn=int(input())\nans_dict={}\nfor i in range(0, n):\n    a=input()\n    if not a in ans_dict:\n        ans_dict[a]=1\n    else:\n        ans_dict[a]+=1\nsum=0\nfor thing in ans_dict:\n    if ans_dict[thing]%2:\n        sum+=1\nprint(sum)\n"}
{"label": 85, "index": 10997, "code": "N = int(input())\nA = []\n\ns = set()\n\nfor _ in range(N):\n    inp = input()\n    if inp in s:\n        s.remove(inp)\n    else:\n        s.add(inp)\n\nprint(len(s))\n\n"}
{"label": 85, "index": 10998, "code": "N = input()\nnum = {}\nfor _ in xrange(N):\n    a = raw_input().strip()\n    if a in num: \n        num[a] += 1\n    else:\n        num[a] = 1\nc = 0\nfor key in num:\n    if(num[key]%2 == 1): c += 1\nprint c\n\n"}
{"label": 85, "index": 10999, "code": "N = int(input())\nans = set()\nfor i in range(N):\n    A = int(input())\n    if A in ans:\n        ans.remove(A)\n    else:\n        ans.add(A)\n        \nprint(len(ans))"}
{"label": 85, "index": 11000, "code": "import collections\n\nN = int(input())\nA = [int(input()) for _ in range(N)]\n\nd = collections.Counter(A)\nprint(sum([1 for k, v in d.items() if v % 2] ))"}
{"label": 85, "index": 11001, "code": "N = int(input())\ns = set()\nfor i in range(N):\n  a = int(input())\n  if a in s:\n    s.remove(a)\n  else:\n    s.add(a)\n\nprint(len(s))"}
{"label": 85, "index": 11002, "code": "#Write and Erase\n\nN = int(input())\nA = []\nfor i in range(N):\n    A.append(int(input()))\n    \nimport collections\nc = collections.Counter(A)\n\ncnt = 0\nfor i in c.values():\n    cnt += i%2\nprint(cnt)"}
{"label": 85, "index": 11003, "code": "import collections\n\nN = int(input())\n\ndef mod2(n):\n    a = n % 2\n    return a\n\nlis = []\nfor i in range(N):\n    a = int(input())\n    lis.append(a)\n\ncount = collections.Counter(lis)\n\nprint(sum(map(mod2, count.values())))"}
{"label": 85, "index": 11004, "code": "n = int(input())\nh = set()\nfor i in range(n):\n    a = int(input())\n    if a in h:\n        h.remove(a)\n    else:\n        h.add(a)\nprint(len(h))"}
{"label": 85, "index": 11005, "code": "n = int(input())\npool = []\nans = 0\nfor i in range(n):\n    a = int(input())\n    pool.append(a)\npool.sort()\n\nptr = 0\nwhile ptr < len(pool):\n    cc = pool[ptr]\n    f = 0\n    while ptr < len(pool) and pool[ptr] == cc:\n        ptr += 1\n        f += 1\n    ans += f%2\nprint(ans)\n"}
{"label": 85, "index": 11006, "code": "from collections import defaultdict\n\nn = int(input())\nl = defaultdict(int)\nfor _ in range(n):\n    a = input()\n    l[a] += 1\nans = 0\nfor i in l.values():\n    if i % 2 == 1:\n        ans += 1\n    else:\n        pass\nprint(ans)"}
{"label": 85, "index": 11007, "code": "#ABC073C\nimport sys\n\nn=int(raw_input())\ndic={}\nfor i in xrange(n):\n a=int(raw_input())\n if a in dic:\n  dic[a]^=1\n else:\n  dic[a]=1\n\nres=0\nfor i in dic:\n if dic[i]==1:\n  res+=1\nprint res\n"}
{"label": 85, "index": 11008, "code": "N = int(input())\nA = [int(input()) for _ in range(N)]\nA.sort()\n\n\ndef customCount(idx):\n    target = A[idx]\n    cnt = 1\n    idx += 1\n    while True:\n        if idx == N or A[idx] != target:\n            return cnt\n        else:\n            idx += 1\n            cnt += 1\n\n\nindex = 0\nresult = 0\nwhile True:\n    num = customCount(index)\n    index += num\n    if (num % 2) == 1:\n        result += 1\n    if N <= index:\n        break\nprint(result)"}
{"label": 85, "index": 11009, "code": "#!/usr/bin/python3\n\nn = int(input())\n\nnum = {}\nfor i in range(n):\n    a = input()\n    if a in num:\n        num[a] += 1\n    else:\n        num[a] = 1\n\nt = 0\nfor i in num.keys():\n    if num[i] % 2:\n        t += 1\n\nprint(t)"}
{"label": 85, "index": 11010, "code": "n = int(input().strip())\n\nd = {}\nfor _ in range(n):\n    a = int(input().strip())\n    d[a] = not d.get(a, False)\ntotal = 0\nfor v in d.values():\n    if v:\n        total += 1\nprint(total)"}
{"label": 85, "index": 11011, "code": "N = int(input())\nfrom collections import defaultdict\n\npaper_nums = defaultdict(lambda:int()) \nfor _ in range(N):\n  input_num = int(input())\n  if input_num in paper_nums:\n    paper_nums.pop(input_num)\n  else:\n    paper_nums[input_num]\nprint(len(paper_nums))\n"}
{"label": 85, "index": 11012, "code": "N = int(input())\ns = set()\nfor i in range(N):\n\ta = input()\n\tif a in s:\n\t\ts.remove(a)\n\telse:\n\t\ts.add(a)\nprint(len(s))"}
{"label": 85, "index": 11013, "code": "from collections import Counter\n\nN = int(input())\ntell_list = [input() for _ in range(N)]\ncount = 0\ntell_count = Counter(tell_list)\nfor num in tell_count.most_common():\n    count += num[1] % 2\nprint(count)"}
{"label": 85, "index": 11014, "code": "#!usr/bim/python\n#! -*- coding: utf-8 -*-\n\nn = raw_input()\nn = int(n)\n\nal = []\n\nfor i in range(n):\n    a = raw_input()\n    a = int(a)\n    al.append(a)\n\nal.sort()\n\nnum = 0\n\ni = 0\nwhile i < n:\n    if i == n-1:\n        num += 1\n        break\n    if al[i] == al[i+1]:\n        i += 2\n    else:\n        num += 1\n        i += 1\n\nprint num\n"}
{"label": 85, "index": 11015, "code": "N=int(input())\nA=set()\nfor i in range(N):\n    a=int(input())\n    if a not in A:\n        A.add(a)\n    else:\n        A.remove(a)\nprint(len(A))"}
{"label": 85, "index": 11016, "code": "from collections import defaultdict\n\ndef main():\n    d = defaultdict(lambda: 0)\n    n = int(input())\n    for _ in range(n):\n        x = int(input())\n        d[x] += 1\n\n    cnt = 0\n    for key, value in sorted(d.items(), key=lambda x: x[1], reverse=True):\n        if value%2 == 1:\n            cnt += 1\n    print(cnt)\n    \n\nif __name__ == \"__main__\":\n    main()"}
{"label": 85, "index": 11017, "code": "N = int(input())\ns = set()\nfor i in range(N):\n  A = int(input())\n  if A not in s:\n    s.add(A)\n  else:\n    s.remove(A)\nprint(len(s))"}
{"label": 85, "index": 11018, "code": "# coding: utf-8\ndef get_ln_inputs():\n    return input().split()\n\n\ndef get_ln_int_inputs():\n    return list(map(int, get_ln_inputs()))\n\n\ndef main():\n    N = get_ln_int_inputs()[0]\n    A = list()\n    for _ in range(N):\n        A.append(get_ln_int_inputs()[0])\n\n    res = {}\n    for a in A:\n        if not a in res:\n            res[a] = 1\n        else:\n            del res[a]\n    print(len(res))\n    return\n\n\nmain()"}
{"label": 85, "index": 11019, "code": "from collections import defaultdict\nn = int(input())\ndd=defaultdict(int)\nfor _ in range(n):\n    a=input()\n    dd[a]+=1\n    dd[a]%=2\nans=0\nfor k in dd.keys():\n    if dd[k]==1:\n        ans+=1\nprint(ans)\n"}
{"label": 85, "index": 11020, "code": "N = int(input())\ns = set()\nfor i in range(N):\n    A = input()\n    if A in s:\n        s.remove(A)\n    else:\n        s.add(A)\nprint(len(s))\n"}
{"label": 85, "index": 11021, "code": "from collections import defaultdict\nlst= defaultdict(bool)\nfor i in range(int(input())):\n    t = input()\n    lst[t] = not lst[t]\n\nprint(len([x for x in lst if lst[x]]))\n"}
{"label": 85, "index": 11022, "code": "d={}\nfor i in range(input()):a=input();d[a]=d.get(a,0)+1\nprint len(filter(lambda x:x%2,map(lambda x:d[x],d)))\n"}
{"label": 85, "index": 11023, "code": "n = int(input())\n\nf = {}\nfor i in range(n):\n    a = int(input())\n    if not f.get(a):\n        f[a] = True\n    else:\n        f[a] = None\n\nprint(sum(1 for i in f if f[i]))\n"}
{"label": 85, "index": 11024, "code": "ans=set()\nN=int(input())\nfor i in range(N):\n l=input()\n if l in ans:\n  ans.remove(l)\n else:\n  ans.add(l)\nprint(len(ans))"}
{"label": 85, "index": 11025, "code": "import sys\n\nwritten = set()\n\nN = int(sys.stdin.readline())\n\nfor i in range(N):\n    tmp = int(sys.stdin.readline())\n    if tmp in written:\n        written.remove(tmp)\n    else:\n        written.add(tmp)\nprint(len(written))"}
{"label": 85, "index": 11026, "code": "# coding: utf-8\ndic = {}\nfor i in range(int(input())):\n    s = input()\n    if s in dic:\n        dic[s] = (dic[s] + 1) % 2\n    else:\n        dic[s] = 1\nans = 0\nfor n in dic.items():\n    if n[1] == 1:\n        ans += 1\nprint(ans)"}
{"label": 85, "index": 11027, "code": "from collections import Counter\nn=int(input())\na=[int(input()) for i in range(n)]\nans=0\nfor k,v in Counter(a).items():\n    if v%2!=0:\n        ans+=1\nprint(ans)"}
{"label": 85, "index": 11028, "code": "#!/usr/bin/python\n\nimport sys\n\ndef main(argv):\n    line = sys.stdin.readline()\n    while line:\n        N = int(line)\n        sheet = set()\n        for i in xrange(N):\n            a = sys.stdin.readline()\n            if a in sheet:\n                sheet.remove(a)\n            else:\n                sheet.add(a)\n        print(len(sheet))\n        line = sys.stdin.readline()\n        \n\nif __name__ == \"__main__\":\n    main(sys.argv)"}
{"label": 85, "index": 11029, "code": "from collections import defaultdict, Counter\nfrom itertools import product, groupby\nfrom math import pi\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right\nINF = 10 ** 10\n\n\ndef main():\n    N = int(input())\n    c = Counter([int(input()) for _ in range(N)])\n    ans = 0\n    for k, v in c.items():\n        ans += v % 2 != 0\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n"}
{"label": 85, "index": 11030, "code": "\nN = int(input())\nx = [int(input()) for i in range(N)]\n\nx.sort()\ni=0\nwhile i < N-1:\n    if x[i]==x[i+1]:\n        del x[i+1]\n        del x[i]\n        N-=2\n        continue\n    i+=1\nprint(len(x))"}
{"label": 85, "index": 11031, "code": "N = int(input())\n\na = {}\nfor i in range(N):\n    a_i = int(input())\n    if a_i in a:\n        del a[a_i]\n    else:\n        a[a_i] = 1\n\nprint(len(a))"}
{"label": 85, "index": 11032, "code": "n = int(input())\n\nmoji = set()\nfor i in range(n):\n    a = int(input())\n    if a in moji:\n        moji.remove(a)\n    else:\n        moji.add(a)\n        \n    \nprint(len(moji))"}
{"label": 85, "index": 11033, "code": "def main():\n    N = int(input())\n    A = tuple(int(input()) for _ in range(N))\n\n    num = dict()\n    for n in A:\n        num[n] = num.get(n, 0) + 1\n\n    ans = 0\n    for v in num.values():\n        ans += v % 2\n\n    print(ans)\n\nmain()\n"}
{"label": 85, "index": 11034, "code": "N = int(input())\nlist1 = [int(input()) for i in range(N)]\n\ndict2 = {}\nfor i in list1:\n    if(i in dict2):\n        dict2[i] += 1\n    else:\n        dict2[i] = 1\n\ncount = 0;\nfor i in dict2.values():\n    if i % 2 == 1:\n        count += 1\nprint(count)"}
{"label": 85, "index": 11035, "code": "from collections import Counter\nN = int(input())\nsrc = [int(input()) for i in range(N)]\ncounter = Counter(src)\n\nans = 0\nfor v in counter.values():\n    if v%2 == 1:\n        ans += 1\nprint(ans)\n"}
{"label": 85, "index": 11036, "code": "n=input()\ns={}\nfor i in range(n):\n    tmp=input()\n    if tmp in s:\n        del s[tmp]\n    else:\n        s[tmp]=1\nprint len(s)\n"}
{"label": 85, "index": 11037, "code": "N = int(input())\n\na = []\nfor i in range(N):\n    a.append(int(input()))\n\na.sort() \n\ncnt2 = 0\ncnt = 1\nans = 0\nfor i in range(len(a)-1):\n    if a[i] == a[i+1]:\n        cnt += 1\n    else:\n        ans += cnt%2\n        cnt = 1\n        flg = False\n\nans += cnt%2\nprint(ans)"}
{"label": 85, "index": 11038, "code": "n = int(input())\n\narray = []\nfor i in range(n):\n\ta = int(input())\n\tarray.append(a)\n\narray.sort()\nlast = -1\ncount = 0\nans = 0\n\nfor i in range(len(array)):\n\tif last != array[i]:\n\t\tif count % 2 == 1:\n\t\t\tans += 1\n\t\t\n\t\tcount = 1\n\telse:\n\t\tcount += 1\n\t\t\n\tlast = array[i]\n\nif count % 2 == 1:\n\tans += 1\n\nprint(ans)\n\n"}
{"label": 85, "index": 11039, "code": "as_ = set()\nfor _ in range(int(input())):\n    a = int(input())\n    if a in as_:\n        as_.remove(a)\n    else:\n        as_.add(a)\n \nprint(len(as_))"}
{"label": 85, "index": 11040, "code": "#!/usr/bin/python2\n# -*- coding: utf-8 -*-\n# \u2020\nfrom collections import Counter\n\nn = int(raw_input())\ndat = map(int, [raw_input() for _ in xrange(n)])\ncnt = Counter(dat)\nres = sum(v & 1 for v in cnt.values())\nprint res\n"}
{"label": 85, "index": 11041, "code": "from collections import Counter\nn = int(raw_input())\nc = Counter([int(raw_input()) for _ in range(n)])\nprint len(filter(lambda x: x % 2 == 1, c.values()))\n"}
{"label": 85, "index": 11042, "code": "d={}\nfor i in range(input()):a=input();d[a]=d.get(a,0)+1\nprint len(filter(lambda x:x%2,map(lambda x:d[x],d)))"}
{"label": 85, "index": 11043, "code": "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\ngosa = 1.0 / 10**10\nmod = 10**9+7\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\n\n\ndef main():\n    n = I()\n    s = set()\n    for _ in range(n):\n        a = I()\n        if a in s:\n            s.remove(a)\n        else:\n            s.add(a)\n\n    return len(s)\n\nprint(main())\n\n\n\n"}
{"label": 85, "index": 11044, "code": "N = int(input()) #1\u884c\u76ee\u306eN\u3092\u53d6\u5f97\nl = [int(input()) for i in range(N)] #N\u56de\u7e70\u308a\u8fd4\u3057 s \u306b\u5024\u3092\u53d6\u5f97\n\nl.sort()\n\n\na=0\nans=0\nfor i in l:\n\tif i==a:\n\t\tans -= 1\n\t\ta=0\n\telse:\n\t\tans += 1\n\t\ta=i\n\nprint(ans)\n"}
{"label": 85, "index": 11045, "code": "N = int(input())\nans = set()\nfor i in range(N):\n    num = int(input())\n    if num in ans:\n        ans.remove(num)\n    else:\n        ans.add(num)\nprint(len(ans))"}
{"label": 85, "index": 11046, "code": "N = int(input())\nseq = {}\n\nfor i in range(N):\n    a = input()\n    try:\n        seq[a] = (seq[a] + 1) % 2\n    except KeyError:\n        seq[a] = 1\n\nprint(list(seq.values()).count(1))"}
{"label": 85, "index": 11047, "code": "n = input()\n\ndic = {}\n\nfor i in range(n):\n    a = input()\n    if a not in dic:\n        dic[a] = 1\n    elif dic[a] == 0:\n        dic[a] = 1\n    else:\n        dic[a] = 0\n\nkeys = dic.keys()\nct = 0\nfor i in keys:\n    if dic[i] > 0:\n        ct += 1\n\nprint ct"}
{"label": 85, "index": 11048, "code": "#coding:utf-8\n\nN = int(input())\nnums = set()\n\nfor i in range(N):\n    A = int(input())\n\n    if A in nums:\n        nums.remove(A)\n    else:\n        nums.add(A)\nprint(len(nums))\n"}
{"label": 85, "index": 11049, "code": "from collections import defaultdict\nd = defaultdict(int)\nn = int(raw_input())\nfor _ in range(n):\n    d[int(raw_input())] += 1\nc = 0\nfor v in d.values():\n    if v % 2 == 1:\n        c += 1\nprint c\n"}
{"label": 86, "index": 11050, "code": "n=int(input())\na=int(input())\nprint(n*n-a)\n"}
{"label": 86, "index": 11051, "code": "#!/user/bin/python\n# coding: UTF-8\n\nn = int(raw_input())\na = int(raw_input())\n\ns = n*n - a\n\nprint s\n"}
{"label": 86, "index": 11052, "code": "#\u5165\u529b\nN = int(input())\nA = int(input())\n#\u307e\u3059\u306e\u6570\u3092\u6570\u3048\u308b\nN = N * N\n#\u307e\u3059\u306e\u6570\u304b\u3089\u767d\u306b\u5857\u308b\u90e8\u5206\u3092\u5f15\u3044\u3066\u9ed2\u306e\u6587\u3092\u3060\u3059\nBlack = N  - A\n#\u51fa\u529b\nprint(Black)"}
{"label": 86, "index": 11053, "code": "N = int(input())\nA = int(input())\nprint(N*N-A)"}
{"label": 86, "index": 11054, "code": "N=raw_input()\nA=raw_input()\nprint(int(N)*int(N)-int(A))\n"}
{"label": 86, "index": 11055, "code": "import numpy as np\n\nN = int(input())\nA = int(input())\n\nprint(N**2 - A)"}
{"label": 86, "index": 11056, "code": "def count_black(N, A):\n    return N**2 - A\n\nN = int(raw_input())\nA = int(raw_input())\n\nprint(count_black(N, A))"}
{"label": 86, "index": 11057, "code": "N = int(input())\nA = int(input())\n\nprint(N*N - A)"}
{"label": 86, "index": 11058, "code": "print(int(input()) ** 2 - int(input()))\n"}
{"label": 86, "index": 11059, "code": "n = int(input())\na = int(input())\nans = n ** 2 - a\nprint(ans)"}
{"label": 86, "index": 11060, "code": "N=int(input())\nA=int(input())\nprint(N*N-A)"}
{"label": 86, "index": 11061, "code": "# coding: utf-8\nN = int(input())\nA = int(input())\nprint((N * N) - A)"}
{"label": 86, "index": 11062, "code": "print pow(int(raw_input()),2)-int(raw_input())"}
{"label": 86, "index": 11063, "code": "# -*- coding: utf-8 -*-\n\"\"\"A - Bichrome Cells\"\"\"\n\nn = int(raw_input())\na = int(raw_input())\n\nprint n * n - a\n"}
{"label": 86, "index": 11064, "code": "n = int(raw_input())\na = int(raw_input())\nx = n*n - a \nprint x "}
{"label": 86, "index": 11065, "code": "n = int(input())\nA = int(input())\nprint(n **2 - A)"}
{"label": 86, "index": 11066, "code": "N = int(input())\nA = int(input())\nresult = N**2 - A\nprint(str(result))"}
{"label": 86, "index": 11067, "code": "#Source code should be longer than 50 chars so I am writing this line\nn=int(input())\na=int(input())\nprint((n*n)-a)"}
{"label": 86, "index": 11068, "code": "if __name__ == '__main__':\n    N = input()\n    A = input()\n\n    print (N*N - A)\n"}
{"label": 86, "index": 11069, "code": "N = int(input())\nA = int(input())\n    \nS = N * N\n    \nANS = A - S\nANS = abs(ANS)\n    \nprint (ANS)"}
{"label": 86, "index": 11070, "code": "n=int(input())\na=int(input())\nprint(n*n-a)\n"}
{"label": 86, "index": 11071, "code": "N = int(input())\nA = int(input())\n\nprint(N*N - A)\n"}
{"label": 86, "index": 11072, "code": "import sys\n\n# sys.stdin = open('a1.in')\n\n\ndef read_int_list():\n    return list(map(int, input().split()))\n\n\ndef read_str_list():\n    return input().split()\n\n\ndef read_int():\n    return int(input())\n\n\ndef read_str():\n    return input()\n\n\ndef main():\n    n = read_int()\n    a = read_int()\n    res = n * n - a\n    print(res)\n\n\nmain()\n"}
{"label": 86, "index": 11073, "code": "n = input()\na = input()\n\nprint  n ** 2 - a"}
{"label": 86, "index": 11074, "code": "N = int(input())\nA= int(input())\n\nans=N*N-A\n\nprint(ans)"}
{"label": 86, "index": 11075, "code": "if __name__ == \"__main__\":\n    N = int(input())\n    A = int(input())\n    print(N * N - A)\n"}
{"label": 86, "index": 11076, "code": "N = int(input())\n\nA = int(input())\n\nprint(str(N**2-A))"}
{"label": 86, "index": 11077, "code": "N=(int)(input())\nA=(int)(input())\nprint(str(N*N-A))"}
{"label": 86, "index": 11078, "code": "(lambda N, A: print(N * N - A))(int(input()), int(input()))\n"}
{"label": 86, "index": 11079, "code": "# -*- coding=utf-8 -*-\n# \u30de\u30b9\u76ee\u306e\u5408\u8a08\nsquare_number = int(input()) ** 2\n# \u767d\u306b\u5857\u308b\u30de\u30b9\u76ee\u306e\u6570\nwhite_paint = int(input())\n\n# \u9ed2\u306b\u5857\u308b\u30de\u30b9\u76ee\u306e\u6570\nprint(square_number - white_paint)"}
{"label": 86, "index": 11080, "code": "n = int(input())\na = int(input())\n\nprint(n**2 - a)"}
{"label": 86, "index": 11081, "code": "\nn = int(input())\nm = int(input())\n\nprint(n * n - m)\n\n"}
{"label": 86, "index": 11082, "code": "N=int(input())\nA=int(input())\nprint(N**2-A)"}
{"label": 86, "index": 11083, "code": "N = int(input())\nA = int(input())\n\nprint(N*N - A)"}
{"label": 86, "index": 11084, "code": "N = int(input())\nA = int(input())\n\nprint(N ** 2 - A)"}
{"label": 86, "index": 11085, "code": "N = int(input())\na = int(input())\nprint (N *N - a)"}
{"label": 86, "index": 11086, "code": "n = int(input())\na = int(input())\nprint(n**2 - a)\n"}
{"label": 86, "index": 11087, "code": "a=int(input())\nb=int(input())\nprint(a*a-b)"}
{"label": 86, "index": 11088, "code": "n = int(input())\na = int(input())\n\n\nprint(n**2 - a)\n"}
{"label": 86, "index": 11089, "code": "N = int(input())\nA = int(input())\nprint(N*N-A)"}
{"label": 86, "index": 11090, "code": "def main():\n    N = int(input())\n    A = int(input())\n    print(N*N-A)\n\nif __name__=='__main__':\n    main()\n"}
{"label": 86, "index": 11091, "code": "def read_line(*types): return [f(a) for a, f in zip(input().split(), types)]\n\nn, = read_line(int)\na, = read_line(int)\n\n\nprint(n * n - a)\n"}
{"label": 86, "index": 11092, "code": "n = int(input())\na = int(input())\n\nprint(n**2 - a)"}
{"label": 86, "index": 11093, "code": "N = int(input())\nA = int(input())\nT = N ** 2 - A\nif N<100 :\n    print(T)\nelse :\n    print(0)"}
{"label": 86, "index": 11094, "code": "N=input()\nA=input()\nprint N*N-A\n"}
{"label": 86, "index": 11095, "code": "N=int(input())\nA=int(input())\nprint(N*N-A)"}
{"label": 86, "index": 11096, "code": "n = int(input())\na = int(input())\ncheck = n*n\nblack = check - a\nprint(black)\n"}
{"label": 86, "index": 11097, "code": "from sys import  stdin\nn = int(stdin.readline())\na = int(stdin.readline())\nprint n*n-a"}
{"label": 86, "index": 11098, "code": "def main():\n    N = int(input())\n    M = int(input())\n\n    print (N**2-M)\n\n\n\nif __name__ == \"__main__\":\n    # global stime\n    # stime = time.clock()\n    main()\n\n"}
{"label": 86, "index": 11099, "code": "n=int(input())\nm=int(input())\nprint(n*n-m)"}
{"label": 86, "index": 11100, "code": "N = int(input())\nA = int(input())\nprint(N * N - A)\n"}
{"label": 86, "index": 11101, "code": "N = int(input())\nA = int(input())\nprint(N**2-A)"}
{"label": 86, "index": 11102, "code": "N = int(input())\nA = int(input())\nprint(N*N-A)"}
{"label": 86, "index": 11103, "code": "N = int(input())\nA = int(input())\nprint(N*N - A)"}
{"label": 86, "index": 11104, "code": "N = int(input())\nA = int(input())\nprint(N**2-A)\n"}
{"label": 86, "index": 11105, "code": "N = int(input())\nA = int(input())\nT = N ** 2 - A\nif N<100 :\n    print(T)\nelse :\n    print(0)"}
{"label": 86, "index": 11106, "code": "def main():\n    N = int(input())\n    A = int(input())\n\n    print(N ** 2 - A)\n\nif __name__ == '__main__':\n    main()\n"}
{"label": 86, "index": 11107, "code": "N = int(input())\nA = int(input())\nprint(N*N - A)"}
{"label": 86, "index": 11108, "code": "N=int(input())\nA=int(input())\n\nprint(N*N-A)"}
{"label": 86, "index": 11109, "code": "print(int(input()) ** 2 - int(input()))"}
{"label": 86, "index": 11110, "code": "N = int(input())\nA = int(input())\nprint(N**2-A)"}
{"label": 86, "index": 11111, "code": "N = int(input())\nA = int(input())\nprint(N*N-A)\n"}
{"label": 86, "index": 11112, "code": "N = int(input())\nA = int(input())\nT = N ** 2 - A\nif N<100 :\n    print(T)\nelse :\n    print(0)"}
{"label": 86, "index": 11113, "code": "a = int(input())\nb = int(input())\nprint(a*a-b)"}
{"label": 86, "index": 11114, "code": "N = int(input())\nA = int(input())\nprint(N**2 - A)"}
{"label": 86, "index": 11115, "code": "N = int(input())\nA = int(input())\n\nans = (N*N)-A\nprint(ans)\n"}
{"label": 86, "index": 11116, "code": "n= int(input())\na= int(input())\nprint(n*n-a)\n"}
{"label": 86, "index": 11117, "code": "n = int(input())\na = int(input())\nprint(n*n - a)"}
{"label": 86, "index": 11118, "code": "\ninput1 = int(input())\ninput2 = int(input())\n\nprint (input1*input1 - input2)\n\n"}
{"label": 86, "index": 11119, "code": "n = input()\na = input()\nn = int(n)\na = int(a)\n\nprint(n**2-a)"}
{"label": 86, "index": 11120, "code": "N = int(input())\nA = int(input())\nprint(N**2-A)"}
{"label": 86, "index": 11121, "code": "n=int(input())\nm = int(input())\nprint(n**2 - m)"}
{"label": 86, "index": 11122, "code": "n = int(input())\na = int(input())\nprint(n*n-a)\n"}
{"label": 86, "index": 11123, "code": "N = int(input())\nA = int(input())\nT = N ** 2 - A\nif N<=100 :\n    print(T)\nelse :\n    print(0)"}
{"label": 86, "index": 11124, "code": "print(int(input())**2-int(input()))"}
{"label": 86, "index": 11125, "code": "\na=int(input())\nb=int(input())\n\nprint(a*a-b)"}
{"label": 86, "index": 11126, "code": "n = int(input())\na = int(input())\n\nprint(n*n-a)\n"}
{"label": 86, "index": 11127, "code": "import sys\n\nN = int(sys.stdin.readline())\nA = int(sys.stdin.readline())\nprint(N*N - A)"}
{"label": 86, "index": 11128, "code": "n = int(input())\na = int(input())\nprint((n * n - a))"}
{"label": 86, "index": 11129, "code": "if __name__ == '__main__':\n\n    N = int(input())\n    A = int(input())\n    print(N*N - A)\n "}
{"label": 86, "index": 11130, "code": "n = int(input())\na = int(input())\n\nprint(n * n - a)"}
{"label": 86, "index": 11131, "code": "N=input()\nA=input()\nprint N*N-A"}
{"label": 86, "index": 11132, "code": "N,A = input(),input()\n\nans = N*N-A\nprint(ans)\n"}
{"label": 86, "index": 11133, "code": "N = int(input())\nA = int(input())\nprint(N*N - A)\n"}
{"label": 86, "index": 11134, "code": "N = int(input())\nA = int(input())\nprint(N**2-A)"}
{"label": 86, "index": 11135, "code": "N = int(input())\nA = int(input())\n\nprint(N**2 - A)"}
{"label": 86, "index": 11136, "code": "n = int(input())\nm = int(input())\nprint( n*n - m )"}
{"label": 86, "index": 11137, "code": "N = raw_input()\nN = int(N)\nA = raw_input()\nA = int(A)\n\nprint(N*N-A)"}
{"label": 86, "index": 11138, "code": "N = int(input())\nA = int(input())\n\nprint(N*N-A)"}
{"label": 86, "index": 11139, "code": "print((int(input()) ** 2) - int(input()))"}
{"label": 86, "index": 11140, "code": "n = int(input())\na = int(input())\n\nprint(n**2 - a)"}
{"label": 86, "index": 11141, "code": "# coding: utf-8\ndef get_ln_inputs():\n    return input().split()\n\n\ndef get_ln_int_inputs():\n    return list(map(int, get_ln_inputs()))\n\n\ndef main():\n    N = get_ln_int_inputs()[0]\n    A = get_ln_int_inputs()[0]\n    print(N * N - A)\n    return\n\n\nmain()"}
{"label": 86, "index": 11142, "code": "def main():\n    N = int(input())\n    A = int(input())\n\n    ans = N ** 2 - A\n    print(ans)\n\nmain()\n"}
{"label": 86, "index": 11143, "code": "# -*- coding: utf-8 -*-\n\nN = int(input())\nA = int(input())\n\nprint(N**2-A)"}
{"label": 86, "index": 11144, "code": "# -*- coding: utf-8 -*-\n\"\"\"\nhttps://beta.atcoder.jp/contests/abc074/tasks/abc074_a\n\n\"\"\"\nimport sys\nfrom sys import stdin\ninput = stdin.readline\n\n\ndef main(args):\n    N = int(input())\n    A = int(input())\n    print(N**2 - A)\n\n\nif __name__ == '__main__':\n    main(sys.argv[1:])\n    "}
{"label": 86, "index": 11145, "code": "#!/usr/bin/python3\n\nn = int(input())\na = int(input())\n\nprint(n ** 2 - a)"}
{"label": 86, "index": 11146, "code": "n=int(input())\nx=int(input())\n\nprint(n*n-x)"}
{"label": 86, "index": 11147, "code": "#python3\n#@author-SK13\n\nn= int(input())\na= int(input())\nprint(n*n-a)\n"}
{"label": 86, "index": 11148, "code": "n = int(raw_input())\na = int(raw_input())\nprint n*n-a\n"}
{"label": 86, "index": 11149, "code": "N = int(input())\nA = int(input())\nans = N ** 2 - A\nprint(ans)"}
{"label": 86, "index": 11150, "code": "#coding:utf-8\n\nN = int(input())\nA = int(input())\n\nprint(N * N - A)\n"}
{"label": 86, "index": 11151, "code": "N=int(input())\nA=int(input())\nprint(N*N-A)"}
{"label": 86, "index": 11152, "code": "n=int(input())\na=int(input())\nprint(n*n-a)"}
{"label": 86, "index": 11153, "code": "N = int(input())\nA = int(input())\nprint(N ** 2 - A)"}
{"label": 86, "index": 11154, "code": "N = int(input())\nA = int(input())\n \nprint(N*N-A)"}
{"label": 86, "index": 11155, "code": "print(int(input())**2-int(input()))"}
{"label": 86, "index": 11156, "code": "n = int(input())\na = int(input())\n\nprint(n * n - a)"}
{"label": 86, "index": 11157, "code": "def main():\n    n = int(input())\n    a = int(input())\n    print(n*n-a)\n\n\nif __name__ == \"__main__\":\n    main()"}
{"label": 86, "index": 11158, "code": "N=input()\nN=int(N)\nA=input()\nA=int(A)\nprint((N**2)-A)"}
{"label": 86, "index": 11159, "code": "import sys\n\ndef main():\n    N = int(input())\n    A = int(input())\n    black = N**2-A\n    print(black)\n\nif __name__=='__main__':\n    main()\n"}
{"label": 86, "index": 11160, "code": "import sys\n\n# utils\ndef read_numbers():\n    return [int(num) for num in sys.stdin.readline().split()]\ndef read_string():\n    return sys.stdin.readline().rstrip('\\r\\n')\ndef list2str(*array):\n    return ' '.join([str(i) for i in array])\n\ndef main(N, A):\n    return N*N - A\n\ndef parse_stdin():\n    # N = read_numbers()\n    # data = []\n    # for i in range(N):\n    #    data.append(read_numbers())\n    N = read_numbers()[0]\n    A = read_numbers()[0]\n    return N, A\n\ndef test_main():\n    \"\"\"run pytest stdin.py to test\"\"\"\n    #assert main([1,2], 'hi') == '3 hi'\n    pass\n\nif __name__ == '__main__':\n    N, A = parse_stdin()\n    result = main(N, A)\n    print(result)"}
{"label": 86, "index": 11161, "code": "N = int(input())\nA = int(input())\nprint(N**2 - A)\n"}
{"label": 86, "index": 11162, "code": "n=int(input())\na=int(input())\nresult=n*n-a\nprint(result)"}
{"label": 86, "index": 11163, "code": "# -*- coding: utf-8 -*-\n\nn = int(input())\na = int(input())\n\nresult = n * n - a\nprint(result)"}
{"label": 86, "index": 11164, "code": "\nN = int(input())\n\nA = int(input())\n\n\nprint(N * N - A)\n\n"}
{"label": 86, "index": 11165, "code": "# coding: utf-8\n\nn = input()\na = input()\n\nprint n**2-a\n"}
{"label": 86, "index": 11166, "code": "N = int(input())\nA = int(input())\nprint(N**2-A)\n"}
{"label": 86, "index": 11167, "code": "a = [int(input()) for i in range(2)]\nprint(a[0] ** 2 - a[1])"}
{"label": 86, "index": 11168, "code": "N = int(input())\nA = int(input())\nans = N ** 2 - A\nprint(ans)\n"}
{"label": 86, "index": 11169, "code": "use = int(input())\nuse1 = int(input())\n\nprint(use ** 2 - use1)"}
{"label": 86, "index": 11170, "code": "if __name__ =='__main__':\n    N = int(input())\n    A = int(input())\n    ans = N**2-A\n    print(ans)"}
{"label": 86, "index": 11171, "code": "# coding: utf-8\n# Here your code !\nN=int(input().rstrip())\nA=int(input().rstrip())\nprint((N**2)-A,flush=True)\n"}
{"label": 86, "index": 11172, "code": "N = int(input())\nA = int(input())\nprint(N**2-A)"}
{"label": 86, "index": 11173, "code": "from collections import defaultdict, Counter\nfrom itertools import product, groupby, count, permutations, combinations\nfrom math import pi, sqrt\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right\nINF = float(\"inf\")\n\n\ndef main():\n    N = int(input())\n    A = int(input())\n    print(N * N - A)\n\n\nif __name__ == '__main__':\n    main()\n"}
{"label": 86, "index": 11174, "code": "a = int(raw_input())\nb = int(raw_input())\nprint a*a-b"}
{"label": 86, "index": 11175, "code": "N = int(input())\nA = int(input())\nprint(N**2 - A)"}
{"label": 86, "index": 11176, "code": "#ABC074A\nn=int(raw_input())\na=int(raw_input())\nprint n*n-a\n"}
{"label": 86, "index": 11177, "code": "def main():\n    n = int(input())\n    a = int(input())\n    print(n*n-a)\n\n\nif __name__ == \"__main__\":\n    main()"}
{"label": 86, "index": 11178, "code": "N = int(input())\nA = int(input())\nT = N ** 2 - A\nif N<100 :\n    print(T)\nelse :\n    print(0)"}
{"label": 86, "index": 11179, "code": "N = int(input())\nw = int(input())\n\nprint(N**2-w)\n"}
{"label": 87, "index": 11180, "code": "N = int(input())\nK = int(input())\nx = map(int, input().split())\nx = list(x)\nans = 0\nfor i in range(N):\n    s = K - x[i]\n    if(x[i] > s):\n        ans += s\n    else:\n        ans += x[i]\n    \nprint(ans * 2)\n"}
{"label": 87, "index": 11181, "code": "def main():\n    N=int(input())\n    K=int(input())\n    x=[int(i) for i in input().split()]\n    ans=0\n    for i in x:\n        ans+=2*min(K-i,i)\n    print(ans)\n\nif __name__=='__main__':\n    main()\n"}
{"label": 87, "index": 11182, "code": "N=input()\nK=input()\nx=map(int,raw_input().split())\nprint sum(min(t,abs(K-t))for t in x)*2\n"}
{"label": 87, "index": 11183, "code": "N = int(input())\nK = int(input())\nx = list(map(int, input().split()))\nans = 0\nfor n in range(N):\n    if x[n] * 2 <= K:\n        ans += x[n]*2\n    else:\n        ans += (K - x[n])*2\nprint(ans)"}
{"label": 87, "index": 11184, "code": "N=(int)(input())\nK=(int)(input())\nx=(input()).split(' ')\nresult=0\n\nfor i in x:\n    result+=2*min((int)(i),abs((int)(i)-K))\n\nprint(result)\n"}
{"label": 87, "index": 11185, "code": "n = int(input())\nk = int(input())\nx = list(map(int, input().split()))\nans = 0\n\nfor ball in x:\n    ans += min(abs(ball*2), abs(ball-k)*2)\n\nprint(ans)\n"}
{"label": 87, "index": 11186, "code": "input();k=int(input());print(2*sum(map(lambda x:min(int(x),k-int(x)),input().split())))"}
{"label": 87, "index": 11187, "code": "N = int(input())\nK = int(input())\nBall = list(map(int,input().split()))\nsumA = 0\nsumB = 0\n\ndef SUMa(i):\n    sumA = Ball[i]*2\n    return sumA\ndef SUMb(i):\n    sumB = (K-Ball[i]) *2\n    return sumB\n\ngoukei = 0\nfor i in range(0,N):\n    if SUMa(i) > SUMb(i):\n        goukei += SUMb(i)\n    else:\n        goukei += SUMa(i)\n\nprint(goukei)"}
{"label": 87, "index": 11188, "code": "# -*- coding: utf-8 -*-\n\"\"\"\nhttps://beta.atcoder.jp/contests/abc074/tasks/abc074_b\n\n\n\"\"\"\nimport sys\nfrom sys import stdin\ninput = stdin.readline\n\n\ndef main(args):\n    N = int(input())\n    K = int(input())\n    balls = [int(x) for x in input().split()]\n\n    total_step = 0\n    for b in balls:\n        step_a = 2 * b\n        step_b = 2 * abs(K - b)\n        step = min(step_a, step_b)\n        total_step += step\n\n    print(total_step)\n\n\nif __name__ == '__main__':\n    main(sys.argv[1:])\n    \n"}
{"label": 87, "index": 11189, "code": "n = int(input())\nk = int(input())\nx = list(map(int, input().split()))\nd = 0\nfor i in x:\n    d += min(i, k-i) * 2\n\nprint(d)"}
{"label": 87, "index": 11190, "code": "# -*- coding:utf-8 -*-\nN = int(input())\nK = int(input())\nx = list(map(int, input().split()))\nans = 0\nfor tmp in range(N):\n    ans += min(x[tmp]*2, abs(K-x[tmp])*2)\nprint(ans)"}
{"label": 87, "index": 11191, "code": "N = int(input())\nK = int(input())\nx = list(map(int, input().split()))\n\nans = 0\n\nfor i in range(N):\n    a_dis = x[i] * 2\n    b_dis = (K - x[i]) * 2\n    ans += min(a_dis, b_dis)\n\nprint(ans)"}
{"label": 87, "index": 11192, "code": "N = input()\nK = input()\nx = map(int, raw_input().split())\nprint sum(2 * min(abs(K-x[i]), x[i]) for i in range(N))"}
{"label": 87, "index": 11193, "code": "N=input()\nK=input()\n\nx=map(int, raw_input().split())\n\nl=0\nfor i in range(len(x)):\n\n\tif x[i] < abs(K-x[i]):\n\t\tl+=x[i]*2\n\telse:\n\t\tl+=abs(K-x[i])*2\n\nprint l"}
{"label": 87, "index": 11194, "code": "N = int(input())\nK = int(input())\nsrc = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    d = min(src[i], K-src[i])\n    ans += 2*d\nprint(ans)\n"}
{"label": 87, "index": 11195, "code": "import sys\nN = int(input())\nK = int(input())\nX = list(map(int,input().split()))\nans = 0\nfor a in X:\n    if abs(a-K) < a:\n        ans += 2 * abs(a-K)\n    else:\n        ans += 2*a\nprint(ans)\n"}
{"label": 87, "index": 11196, "code": "import math\nN,K=input(),input()\nx = [int(_) for _ in raw_input().split()]\nsum = 0\n\nfor i in range(N):\n\tif K < x[i]:\n\t\tsum += (x[i]-K)*2\n\telif K/2 < x[i]:\n\t\tsum += (K-x[i])*2\n\telse:\n\t\tsum += x[i]*2\nprint(sum)"}
{"label": 87, "index": 11197, "code": "N = int(input())\nK = int(input())\nx = list(map(int,input().split()))\nL = 0\nfor i in range(N):\n  if K - x[i] >= x[i]:\n    L += x[i]\n  else:\n    L += K -x[i]\nprint (2 * L)"}
{"label": 87, "index": 11198, "code": "n=input()\nk=input()\na=map(int,raw_input().split())\ndist=0\nfor i in xrange(n):dist+=2*min(a[i],k-a[i])\nprint dist"}
{"label": 87, "index": 11199, "code": "N = raw_input()\nN = int(N)\nK = raw_input()\nK = int(K)\nx = raw_input()\nx = x.split(' ')\nx = [int(d) for d in x]\n\nsum_ = 0\nfor i in range(N):\n\tsum_ += 2*min(abs(x[i]-K),x[i])\n\nprint(sum_)"}
{"label": 87, "index": 11200, "code": "import math\n\ndef main():\n  N = int(input())\n  K = int(input())\n  x_i = input().split()\n  x_i = [ int(x) for x in x_i ]\n  ans = 0\n\n  for i in range(0, N):\n    ans += 2 * min(math.fabs(x_i[i] - 0), math.fabs(x_i[i] - K)) \n\n  print(int(ans))\n\nif __name__ == '__main__':\n  main()"}
{"label": 87, "index": 11201, "code": "N = int(input())\nK = int(input())\nx = [int(i) for i in input().split()]\n\ntotalDist = 0\nfor i in range(N):\n    choiceA = abs(0 - x[i]) * 2\n    choiceB = abs(K - x[i]) * 2\n    totalDist += min(choiceA,choiceB)\nprint(totalDist)"}
{"label": 87, "index": 11202, "code": "if __name__ == \"__main__\":\n    N = int(input())\n    K = int(input())\n    xs = [int(s) for s in input().split(' ')]\n    res = 0\n    for i in range(N):\n        res += min(xs[i], abs(K - xs[i])) * 2\n    print(res)\n"}
{"label": 87, "index": 11203, "code": "N = int(input())\nK = int(input())\nx = list(map(int,input().split()))\nsum = 0\nfor i in range(N):\n    xl = x[i]\n    xr = K-x[i]\n    if xl<xr:\n        sum += xl\n    else:\n        sum += xr\nprint(sum*2)"}
{"label": 87, "index": 11204, "code": "import math\n\nn = int(input())\nk = int(input())\nx = list(map(int, input().split()))\nl = 0\n\nfor i in range(n):\n    l += min(x[i], k - x[i]) * 2\n  \nprint(l)"}
{"label": 87, "index": 11205, "code": "#!/usr/bin/env python\n# coding: utf-8\n\n\ndef main():\n    n = int(input())\n    k = int(input())\n    xs = [int(x) for x in input().split()]\n    move = 0\n    for x in xs:\n        move += 2 * min(x, abs(k-x))\n    print(move)\n\nif __name__ == '__main__':\n    main()\n"}
{"label": 87, "index": 11206, "code": "n=int(input())\nk=int(input())\nx=input().split()\nl=0\n\nfor i in range(n):\n  if int(x[i]) <=abs(int(x[i])-k):\n    l=l+2*int(x[i])\n  else:\n    l=l+2*abs(int(x[i])-k)\nprint(l)"}
{"label": 87, "index": 11207, "code": "N = int(input())\nK = int(input())\nX = list(map(int, input().split()))\n\nS = 0\nfor i in range(N):\n\tS += 2 * min(X[i], K - X[i])\n\nprint(S)"}
{"label": 87, "index": 11208, "code": "N = int(input())\nK = int(input())\n\nxi = input().split()\n\n\nif N != len(xi):\n    print('err')\n    exit()\n\nsum = 0\n\nfor i in range(N):\n    if int(xi[i]) >= K - int(xi[i]):\n        add = K - int(xi[i])\n    else:\n        add = int(xi[i])\n    sum += add * 2\n\nprint(sum)"}
{"label": 87, "index": 11209, "code": "N=int(raw_input())\nK=int(raw_input())\nx=map(int,raw_input().split(' '))\n\ns=0\nfor i in range(N):\n    s+=2*min(x[i],K-x[i])\n\nprint s"}
{"label": 87, "index": 11210, "code": "n = int(input())\nk = int(input())\nx = list(map(int, input().split()))\nfor i in range(n):\n    if x[i] > k/2:\n        x[i] = abs(x[i]-k)\nans = 0\nfor i in range(n):\n    ans += 2*x[i]\nprint(ans)"}
{"label": 87, "index": 11211, "code": "def min(a,b):\n\tif(a<b):\n\t\treturn a\n\telse:\n\t\treturn b\nn=int(input())\nk=int(input())\nl=list(map(int,input().split()))\nans=0\nfor val in l:\n\tans+=2*abs(min(val,abs(k-val)))\nprint(ans)"}
{"label": 87, "index": 11212, "code": "N = int(input())\nK = int(input())\n\nx = input().split()\n\nans = 0\nfor i in range(N):\n    ans += 2*min(int(x[i]), K-int(x[i]))\n    \nprint(ans)"}
{"label": 87, "index": 11213, "code": "def main():\n    N = int(input())\n    K = int(input())\n    \n    x = [int(i) for i in input().split()]\n         \n    #print(N)\n    #print(K)\n    #print(x)\n    \n    sum_dis = 0\n    for pos in x:\n        min_dis = min(pos, K - pos) * 2\n        sum_dis += min_dis\n        \n    print(sum_dis)\n    \nif __name__==\"__main__\":\n    main()"}
{"label": 87, "index": 11214, "code": "N = int(input())\nK = int(input())\nx = [int(i) for i in input().split()]\n\nans = 0\nfor i in range(N):\n    if(abs(K-x[i]) >= x[i]):\n        ans += x[i]\n    else:\n        ans += abs(K-x[i])\n\nprint(ans*2)"}
{"label": 87, "index": 11215, "code": "import sys\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef I(): return int(sys.stdin.readline())\n\n\ndef main():\n    n = I()\n    k = I()\n    xs = LI()\n\n    r = 0\n    for x in xs:\n        r += 2*min(k-x, x)\n\n    return r\n\n\nprint(main())\n"}
{"label": 87, "index": 11216, "code": "N = int(input())\nK = int(input())\nX = list(map(int,input().split()))\n\ns=0\nfor x in X:\n   s += min(x,abs(K-x))\nprint(2*s)   \n"}
{"label": 87, "index": 11217, "code": "n = int(input())\nk = int(input())\nx = list(map(int, input().split()))\n\nans = 0\nfor i in x:\n    ans += 2 * min(abs(i), abs(i - k))\nprint(ans)\n"}
{"label": 87, "index": 11218, "code": "N = int(input())\nK = int(input())\nx = list(map(int, input().split()))\nprint(2*sum([min(a, K-a) for a in x]))"}
{"label": 87, "index": 11219, "code": "n = int(raw_input())\nk = int(raw_input())\nxl = map(int, raw_input().split())\ntotal = 0\nfor x in xl:\n    if x > k / 2:\n        total += (k - x) * 2\n    else:\n        total += x * 2\nprint total\n"}
{"label": 87, "index": 11220, "code": "def main():\n    n = int(input())\n    k = int(input())\n    print(sum([2*min(k-int(i), int(i)) for i in input().split()]))\n    \n\nif __name__ == \"__main__\":\n    main()"}
{"label": 87, "index": 11221, "code": "N = int(input())\nK = int(input())\nx = tuple(map(int,input().split()))\nresult = 0\n\nfor n in x:\n    result += min(n, K-n) * 2\n\nprint(result)"}
{"label": 87, "index": 11222, "code": "n=int(input())\nk=int(input())\nx=list(map(int,input().split()))\nans=0\nfor i in x:\n  ans += min(i,k-i)*2\nprint(ans)"}
{"label": 87, "index": 11223, "code": "N = input()\nK =input()\nx =input().split()\nc =0\nfor i in range(0,int(N)):\n    a = int(x[i])\n    b = int(K)-int(x[i])\n    c = c + 2*min(abs(a),abs(b))\nprint(c)\n"}
{"label": 87, "index": 11224, "code": "def B_CollectingBalls(N, K, x):\n    ans = 0\n    for i in range(0, N):\n        dist = min(abs(x[i]), abs(x[i] - K)) * 2\n        ans += dist\n    return ans\n  \nN=int(input())\nK=int(input())\nx=[int(i) for i in input().split()]\nprint(B_CollectingBalls(N, K, x))"}
{"label": 87, "index": 11225, "code": "n = input()\nk = input()\nx = map(int, raw_input().split())\n\nans = 0\n\nfor i in x:\n    if i < k - i:\n        ans += i * 2\n    else:\n        ans += (k - i) * 2\n\nprint ans"}
{"label": 87, "index": 11226, "code": "N = int(input())\nK = int(input())\nX = map(int, input().split())\n\nret = 0\nfor x in X:\n    ret += min(x, K - x) * 2\n\nprint(ret)\n"}
{"label": 87, "index": 11227, "code": "#!/usr/bin/python3\n\nn = int(input())\nk = int(input())\nx = list(map(int, input().split()))\n\nd = 0\nfor i in x:\n    d += min(i, k - i) * 2\n\nprint(d)"}
{"label": 87, "index": 11228, "code": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n\n\ndef main():\n    N = int(input())\n    K = int(input())\n    X = list(map(int, input().split()))\n\n    ans = 0\n    for x in X:\n        ans += 2 * min(x, K-x)\n\n    print(ans)\n\nif __name__ == \"__main__\": main()\n"}
{"label": 87, "index": 11229, "code": "N = int(input())\nK = int(input())\n\nx = list(map(int, input().split()))\n\na = 0\nfor i in x:\n    if float(i) <= (K / 2):\n        a += i * 2\n    elif float(i) > (K / 2):\n        a += (K - i) * 2\n\nprint(a)\n"}
{"label": 87, "index": 11230, "code": "N = int(input())\nK= int(input())\nxlist = list(map(int, input().split()))\n\ndef Minl(x, K):\n  l = abs(K - x)\n  if l < x:\n    return 2 * l\n  else:\n    return 2 * x\n\nans = 0\nfor x in xlist:\n  ans = ans + Minl(x, K)\n\nprint(str(ans))"}
{"label": 87, "index": 11231, "code": "if __name__ == '__main__':\n    N = int(input())\n    K = int(input())\n    x = list(map(int, input().split()))\n    sum_half = 0\n    for tmp_x in x:\n        sum_half += min(tmp_x, K - tmp_x)\n\n    print(sum_half * 2)\n"}
{"label": 87, "index": 11232, "code": "import numpy as np\n\nN = int(input())\nK = int(input())\nx = [_ for _ in map(int, input().split())]\nans = 0\nfor i in range(N):\n  ans += min(2 * x[i], 2 * (K - x[i]))\nprint(ans)"}
{"label": 87, "index": 11233, "code": "n, k = [int(input()) for _ in range(2)]\nxi = [int(i) for i in input().split()]\ndist = 0\nfor x in xi:\n    l, m = [abs(k-x), abs(x)]\n    dist += l*2 if l<m else m*2\n\nprint(dist)"}
{"label": 87, "index": 11234, "code": "n = int(input())\nk = int(input())\na = list(map(int, input().split()))\n\nprint(sum(min(abs(k - i), i) * 2 for i in a))\n"}
{"label": 87, "index": 11235, "code": "N = int(input())\nK = int(input())\nx = list(map(int, input().split()))\nprint(2 * sum([min(x[i], abs(K - x[i])) for i in range(N)]))\n"}
{"label": 87, "index": 11236, "code": "r = lambda : map(int, raw_input().split())\n\nn = r()[0]\nk = r()[0]\na = r()\n\ntot = 0 \n\nfor x in a :\n    val = min(x*2, abs(k-x)*2)\n    tot += val\n    \nprint tot"}
{"label": 87, "index": 11237, "code": "def read_line(*types): return [f(a) for a, f in zip(input().split(), types)]\n\nn, = read_line(int)\nk, = read_line(int)\nxs = [int(x) for x in input().split()]\n\ncost = 0\nfor x in xs:\n    cost += min(x, k - x) * 2\nprint(cost)\n"}
{"label": 87, "index": 11238, "code": "N = int(input())\nK = int(input())\nX = list(map(int, input().split()))\nres = 0\n\nfor i in range(N):\n    res += min(X[i], K - X[i]) * 2\n\nprint(res)"}
{"label": 87, "index": 11239, "code": "N = int(input())\nK = int(input())\nX = [(int(j), i+1) for i, j in enumerate(input().split())]\nA = [(0, a) for a in range(N+1)]\nB = [(K, b) for b in range(N+1)]\ncost = 0\n\nfor i,x_i in enumerate(X):\n\tcost += min(abs(x_i[0] - A[i][0])*2, abs(x_i[0] - B[i][0])*2)\n\nprint(cost)\n"}
{"label": 87, "index": 11240, "code": "from collections import defaultdict, Counter\nfrom itertools import product, groupby, count, permutations, combinations\nfrom math import pi, sqrt\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right\nINF = float(\"inf\")\n\n\ndef main():\n    N = int(input())\n    K = int(input())\n    x_list = list(map(int, input().split()))\n\n    ans = 0\n    for x in x_list:\n        ans += min(abs(x - 0) * 2, abs(x - K) * 2)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"}
{"label": 87, "index": 11241, "code": "n = int(input())\nk = int(input())\nlis = list(map(int, input().split()))\nans = 0\nfor x in lis:\n    ans += min(x, abs(x-k)) * 2\nprint(ans)"}
{"label": 87, "index": 11242, "code": "n=int(input())\nk=int(input())\na=0\nfor x in [int(i) for i in input().split()]:\n    a+=min(x,abs(k-x))\nprint(a*2)"}
{"label": 87, "index": 11243, "code": "N = int(input())\nK = int(input())\nx = list(map(int,input().split()))\n\nres = 0\n\nfor i in range(N):\n    res += 2*min(x[i]-0,abs(x[i]-K))\n\nprint(res)"}
{"label": 87, "index": 11244, "code": "n = int(input())\nk = int(input())\nx_list = input().split()\nx_list = [int(x) for x in x_list]\n\ngoukei = 0\nfor x in x_list:\n    if abs(0-x) > abs(k-x):\n        goukei += 2*abs(k-x)\n    else:\n        goukei += 2*abs(x)\n\nprint(goukei)"}
{"label": 87, "index": 11245, "code": "# coding: utf-8\nn,k=int(input()),int(input())\ndata=list(map(int,input().split()))\nans=0\nfor x in data:\n    ans += min(x*2,(k-x)*2)\nprint(ans)"}
{"label": 87, "index": 11246, "code": "N = int(input())\nK = int(input())\nx = [int(i) for i in input().split()]\nsum = 0\n\nfor i in range(0,N):\n    sum += 2*min([abs(x[i]-K),x[i]])\n\nprint(sum)"}
{"label": 87, "index": 11247, "code": "N=int(input())\nK=int(input())\nx=list(map(int,input().split()))\nans=0\nfor i in range(N):\n  ans+=min(x[i],abs(K-x[i]))\nprint(2*ans)"}
{"label": 87, "index": 11248, "code": "N = int(input())\nK = int(input())\nballs = [int(b) for b in input().split(' ')]\n\ncount = 0\n\nfor b in balls:\n    if (2 * b < K):\n        count += 2 * b\n    else:\n        count += 2 * (K - b)\n\nprint(count)"}
{"label": 87, "index": 11249, "code": "N = int(input())\nK = int(input())\nX = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    ans += min(X[i], K - X[i]) * 2\nprint(ans)\n"}
{"label": 87, "index": 11250, "code": "N = int(input())\nK = int(input())\nx = list(map(int,input().split()))\n\nres = 0\nfor i in range(N):\n    res += (min(K - x[i], x[i])) * 2\n\nprint (res)"}
{"label": 87, "index": 11251, "code": "N = int(input())\nK = int(input())\ncount = int(0)\n\ndata = list(map(int, input().split()))\n\nfor i in range(N):\n    A = abs(data[i])\n    B = abs(K - data[i])\n    if A < B:\n        count += A*2\n    else:\n        count += B*2\n\nprint(count)"}
{"label": 87, "index": 11252, "code": "import numpy as np\nN = int(input())\nK = int(input())\nx = np.fromiter(map(int, input().split()), dtype=np.int)\nA = x\nB = np.abs(x - K*np.ones(N))\nC = np.minimum(A,B)\nprint(int(C.sum()*2))"}
{"label": 87, "index": 11253, "code": "N = int(input())\nK = int(input())\nx = [(int(xi), i + 1) for i, xi in enumerate(input().split())]\nA = [(0, i) for i in range(1, N+1)]\nB = [(K, i) for i in range(1, N+1)]\nprint(sum([2*min(abs(x[i][0]-A[i][0]), abs(x[i][0]-B[i][0])) for i in range(N)]))"}
{"label": 87, "index": 11254, "code": "N = int(raw_input())\nK = int(raw_input())\nx = map(int, raw_input().split())   \nans = 0\nfor i in xrange(N):\n    ans += 2*min(x[i], abs(K - x[i]))\nprint ans\n\n"}
{"label": 87, "index": 11255, "code": "import sys\n\nN = int(sys.stdin.readline())\nK = int(sys.stdin.readline())\nx = list(map(int, input().split()))\n\nz = [2 * (K - i) if i > K/2 else 2 * i for i in x]\nprint(sum(z))\n"}
{"label": 87, "index": 11256, "code": "#ABC074B\nn=int(raw_input())\nk=int(raw_input())\nx=map(int,raw_input().split())\nres=0\nfor i in x:\n res+=2*min(i,k-i)\nprint res\n"}
{"label": 87, "index": 11257, "code": "# -*- coding: utf-8 -*-\n\nn = int(input())\nk = int(input())\nx = list(map(int, input().split())) #x[0->(n-1)]\n\nsum = 0\n\nfor i in x:\n    if i < k - i:\n        sum = sum + i\n    else:\n        sum = sum + k - i\n\nprint(sum*2)"}
{"label": 87, "index": 11258, "code": "N = int(input())\nK = int(input())\nX = list(map(int, input().split()))\nTotal_dist = 0\n\n#iterate through number of bals\nfor i in range(N):\n\tdist = []\n\tfor Rtype in ['A','B']:\n\t\tif Rtype == 'A':\n\t\t\tdist.append(abs(X[i] - 0)*2)\n\t\tif Rtype == 'B':\n\t\t\tdist.append(abs(X[i] - K)*2)\n\tTotal_dist += min(dist)\n\nprint(Total_dist)"}
{"label": 87, "index": 11259, "code": "# -*- coding: utf-8 -*-\n\"\"\"B - Collecting Balls (Easy Version)\"\"\"\n\nn = int(raw_input())\nk = int(raw_input())\nx_list = map(int, raw_input().split())\n\nret = 0\nfor x in x_list:\n    ret += min(x, k - x) * 2\n\nprint ret\n"}
{"label": 87, "index": 11260, "code": "N = int(input())\nK = int(input())\nlistx = [int(_) for _ in input().split()]\n\ncounter = 0\n\nfor _ in listx:\n    if abs(K - _) > _:\n        counter += _*2\n    else:\n        counter += abs(K - _)*2\n\nprint(counter)\n"}
{"label": 87, "index": 11261, "code": "# coding: utf-8\n# Here your code !\nN=int(input().rstrip())\nK=int(input().rstrip())\nxi=map(int,input().rstrip().split())\n\nidoSum=0\n\nfor x in xi:\n    roboA=x*2\n    roboB=abs(K-x)*2\n    idoSum+=( roboB if( roboB < roboA) else roboA )\nprint(idoSum,flush=True)\n"}
{"label": 87, "index": 11262, "code": "N = int(input())\nK = int(input())\ndata = input().split()\n\nx = []\nfor i in range(N):\n\tx.append(int(data[i]))\n\nsum = 0\nfor i in range(N):\n\tsum += min(x[i], K-x[i]) * 2\n\nprint(sum)\n"}
{"label": 87, "index": 11263, "code": "def main():\n    N = int(input())\n    K = int(input())\n    X = tuple(map(int, input().split()))\n\n    dist = 0\n    for x in X:\n        dist += min(x * 2, (K - x) * 2)\n    print(dist)\n\nmain()\n"}
{"label": 87, "index": 11264, "code": "#coding:utf-8\n\nN = int(input())\nK = int(input())\nx_list = map(int, input().split(\" \"))\n\ndist = 0\nfor x in x_list:\n    dist += 2 * min(x, K - x)\nprint(dist)\n"}
{"label": 87, "index": 11265, "code": "#!/user/bin/python\n# coding: UTF-8\n\nN = int(raw_input())\nK = int(raw_input())\nx = raw_input().split()\nx = map(int, x)\n\nn = 0\n\nfor i in xrange(N):\n    if x[i] < K - x[i]:\n        n = n + x[i] * 2\n    else:\n        n = n + (K - x[i]) * 2\nprint n"}
{"label": 87, "index": 11266, "code": "N=int(input())\nK=int(input())\nx=list(map(int,input().split()))\nonewaysum=0\nfor i in range(N):\n    if x[i]<=K-x[i]:\n        onewaysum+=x[i]\n    else:\n        onewaysum+=K-x[i]\nprint(onewaysum*2) "}
{"label": 87, "index": 11267, "code": "def read_int_list():\n    return list(int(i) for i in input().split())\n\nn = int(input())\nk = int(input())\nx = read_int_list()\n\ntypeA=0\ntypeB=k\nans=0\nfor i in range(len(x)):\n    ans += min(abs(x[i]-typeA),abs(x[i]-typeB))\nprint(ans*2)"}
{"label": 87, "index": 11268, "code": "#!/usr/bin/python\n\nimport sys\n\ndef main(argv):\n    line = sys.stdin.readline()\n\n    while line:\n        N = int(line)\n        K = int(sys.stdin.readline())\n        X = map(int, sys.stdin.readline().rstrip(\"\\n\").split(\" \", N))\n\n        distance = 0\n        for x in X:\n            distance += min(x - 0, K - x) * 2\n        print(distance)\n\n        line = sys.stdin.readline()\n\nif __name__ == \"__main__\":\n    main(sys.argv)"}
{"label": 87, "index": 11269, "code": "N = int(input())\nK = int(input())\nX = list(map(int,input().split(\" \")))\nprint(2 * sum([min([X[i], K-X[i]]) for i in range(N)]))"}
{"label": 87, "index": 11270, "code": "if __name__ == \"__main__\":\n    N = int(input())\n    K = int(input())\n    x = list(map(int, input().split()))\n    ans = 0\n    for i in range(N):\n        r = min(x[i],abs(K-x[i]))\n        ans += 2*r\n    print(ans)"}
{"label": 87, "index": 11271, "code": "n = int(input())\nk = int(input())\nl = list(map(int,input().split()))\ns=0\nfor i in range(n):\n    s+=min(l[i] - 0,k - l[i])\ns*=2\nprint(s)"}
{"label": 87, "index": 11272, "code": "n=int(input())\nk=int(input())\narr=list(map(int,input().split()))\nans=0\nfor a in arr:\n    ans+=min(a,k-a)\nprint(ans*2)\n"}
{"label": 87, "index": 11273, "code": "N = int(input())\nK = int(input())\nx = list(map(int,input().split()))\nlength = 0\nKhalf = K//2\nfor i in range(N):\n\tif x[i] <= Khalf:\n\t\tlength += 2*x[i]\n\telse:\n\t\tlength += 2*(K-x[i])\nprint(length)\n"}
{"label": 87, "index": 11274, "code": "n=int(input())\nk=int(input())\nx=list(map(int,input().split()))\nans=0\nfor i in range(n):\n    ans+=min(x[i],k-x[i])*2\nprint(ans)"}
{"label": 87, "index": 11275, "code": "n=int(input())\nk=int(input())\nx=[int(x) for x in input().split()]\nans=0\nfrom math import fabs\nfor i in x:\n    ans+=min(fabs(i-k),fabs(i))\nprint(int(ans*2))"}
{"label": 87, "index": 11276, "code": "# -*- coding: utf-8 -*-\n\nN = int(input())\nK = int(input())\nx = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    ans += min(abs(0-x[i]), abs(K-x[i])) * 2\n\nprint(ans)"}
{"label": 87, "index": 11277, "code": "# coding: utf-8\n# Here your code !\nN = int(input())\nK = int(input())\nans = 0\n\nx = list(map(int,input().split()))\n\nfor i in range(N):\n    if x[i] > K/2:\n        ans = ans + 2 *(K-x[i])\n    else:\n        ans = ans + 2 *x[i]\n\nprint(ans)"}
{"label": 87, "index": 11278, "code": "# -*- coding=utf-8 -*-\ndef convert_lines_to_int(args):\n    \"\"\" \"a b c d e f ...\" >> [a, b, c, d, e, f ...]\n        args:\n            args:text splited by space.\n        return:\n            list\n    \"\"\"\n    return list(map(int, args.split(\" \")))\n\nball_count = int(input())\ntype_b_robot_point = int(input())\nball_point_x = convert_lines_to_int(input())\n\nclass Robot(object):\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n\n    def collect_ball(self, ball_point):\n        pass\n\nclass RobotA(Robot):\n    def __init__(self, x, y):\n        self.x = 0\n        self.y = y\n        self.collect_cost = None\n\n    def collect_ball(self, ball_point):\n        self.collect_cost = ball_point * 2\n\nclass RobotB(Robot):\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n        self.collect_cost = None\n\n    def collect_ball(self, ball_point):\n        self.collect_cost = (self.x - ball_point) * 2\n\nclass Ball(object):\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n\n\nball_list = [Ball(ball_point_x[count], count + 1) for count in range(ball_count)]\nrobot_a_list = list()\nrobot_b_list = list()\nfor ball in ball_list:\n    r = RobotA(ball.x, ball.y)\n    r.collect_ball(ball.x)\n    robot_a_list.append(r)\n\n    r = RobotB(type_b_robot_point, ball.y)\n    r.collect_ball(ball.x)\n    robot_b_list.append(r)\n# Test\n# for r in robot_a_list:\n#     print(r.collect_cost)\n#\n# print(\"\")\n#\n# for r in robot_b_list:\n#     print(r.collect_cost)\n\n# Check!\nsummary = list()\nfor i in range(ball_count):\n    if robot_a_list[i].collect_cost > robot_b_list[i].collect_cost:\n        summary.append(robot_b_list[i].collect_cost)\n    else:\n        summary.append(robot_a_list[i].collect_cost)\n\nprint(sum(summary))"}
{"label": 87, "index": 11279, "code": "N = int(input())\nK = int(input())\nx = [int(i) for i in input().split()]\n\nans = 0\nfor xi in x:\n    if xi < K/2:\n        ans += xi*2\n    else:\n        ans += (K-xi)*2\nprint(ans)"}
{"label": 87, "index": 11280, "code": "if __name__ == '__main__':\n    N = input()\n    K = input()\n    x = map(int, raw_input().split())\n    sum = 0\n    for d in x:\n        if (K-d < d):\n            sum += 2*(K-d)\n        else:\n            sum += 2*d\n\n    print sum\n"}
{"label": 87, "index": 11281, "code": "N = int(input())\nK = int(input())\nxstr = input().split()\nd = 0\nfor i in xstr:\n    xi = int(i)\n    dK = K-xi\n    if dK < xi:\n        d += dK\n    else:\n        d += xi\nprint(d*2)"}
{"label": 87, "index": 11282, "code": "import sys\n\n# utils\ndef read_numbers():\n    return [int(num) for num in sys.stdin.readline().split()]\ndef read_string():\n    return sys.stdin.readline().rstrip('\\r\\n')\ndef list2str(*array):\n    return ' '.join([str(i) for i in array])\n\ndef main(N, K, xs):\n    result = 0\n    for x in xs:\n        result += 2*min(K-x, x)\n    return result\n\ndef parse_stdin():\n    # N = read_numbers()\n    # data = []\n    # for i in range(N):\n    #    data.append(read_numbers())\n    N = read_numbers()[0]\n    K = read_numbers()[0]\n    xs = read_numbers()\n    return N, K, xs\n\ndef test_main():\n    \"\"\"run pytest stdin.py to test\"\"\"\n    assert main(2, 9, [3, 6]) == 12\n\nif __name__ == '__main__':\n    N, K, xs = parse_stdin()\n    result = main(N, K, xs)\n    print(result)"}
{"label": 87, "index": 11283, "code": "N=int(input())\nK=int(input())\nans=0\n\nn=list(map(int,input().split()))\n\nfor i in range(N):\n    if(K-n[i]<n[i]):\n        ans+=2*(K-n[i])\n    else:\n        ans+=2*n[i]\n\nprint(ans)"}
{"label": 87, "index": 11284, "code": "n = int(input())\nk = int(input())\nl = input().split()\nans = 0\nfor i in l:\n  j = int(i)\n  if( j < abs( j - k )  ):\n    ans += 2*j\n  else:\n    ans += 2*abs(j-k)\nprint(ans)"}
{"label": 87, "index": 11285, "code": "NUM = int(input())\nK = int(input())\nPOS = list(map(int, input().split()))\nsum = 0\nfor i in POS:\n    a = i * 2\n    b = abs(i - K) * 2\n    sum += min(a, b)\nprint(sum)\n\n"}
{"label": 87, "index": 11286, "code": "def main():\n    \"\"\"\n    ball: N\n    ball position: (X, Y) -> (x_i, i)\n    robot A: N\n    robot B: N\n    A position: (X, Y) -> (0, i)\n    B position: (X, Y) -> (K, i)\n\n    A pattern: (0, a) if ball pos eq (xx, a)\n    B pattern: (K, b) if ball pos eq (xx, b)\n    \"\"\"\n    N = int(input())\n    K = int(input())\n    xs = map(int, input().split())\n\n    mov_dist = 0\n    for y, x in enumerate(xs, 1):\n        a_dist = x\n        b_dist = abs(K - x)\n        dist = min(a_dist, b_dist)\n\n        mov_dist += dist * 2\n\n    print(mov_dist)\n\nif __name__ == '__main__':\n    main()\n"}
{"label": 87, "index": 11287, "code": "N = int(input())\nK = int(input())\n\nX = list(map(int, input().split()))\n\nHalfK = K/2.0\n\nAns = 0\n\nfor i in range(N):\n    if X[i] > HalfK:\n        Ans += 2*(K-X[i])\n    else:\n        Ans += 2*X[i]\n        \nprint(str(Ans))"}
{"label": 87, "index": 11288, "code": "from sys import stdin\nans = 0\nn = int(stdin.readline())\nk = int(stdin.readline())\na = map(int,stdin.readline().split())\nfor i in a:\n ans += min(i,k-i)\nprint 2*ans"}
{"label": 87, "index": 11289, "code": "\nimport math\n\nN = int(input())\nK = int(input())\nX = list(map(int, input().split(' ')))\nans = 0\nfor i in range(N):\n    dis1 = X[i]\n    dis2 = X[i]-K\n    if dis2 < 0:\n        dis2 = -dis2\n    ans += min(dis1, dis2)*2\nprint(ans)\n"}
{"label": 87, "index": 11290, "code": "N = int(input())\nK = int(input())\n\nx = list(map(int, input().split()))\n\nans = 0\nfor a in x:\n    ans += min(a, abs(K - a)) * 2\n\nprint(ans)\n"}
{"label": 87, "index": 11291, "code": "import sys\n\n# sys.stdin = open('b1.in')\n\n\ndef read_int_list():\n    return list(map(int, input().split()))\n\n\ndef read_str_list():\n    return input().split()\n\n\ndef read_int():\n    return int(input())\n\n\ndef read_str():\n    return input()\n\n\ndef main():\n    n = read_int()\n    k = read_int()\n    x = read_int_list()\n\n    res = 0\n    for i in range(n):\n        r = 2 * x[i]\n        if k - x[i] < x[i] - 0:\n            r = 2 * (k - x[i])\n        res += r\n    print(res)\n\n\nmain()\n"}
{"label": 87, "index": 11292, "code": "N = int(input())\nK = int(input())\nX = list(map(int, input().split()))\n\nd = 0\nfor x in X:\n    d += 2 * min(x, K-x)\n\nprint(d)"}
{"label": 87, "index": 11293, "code": "# coding: utf-8\ndef get_ln_inputs():\n    return input().split()\n\n\ndef get_ln_int_inputs():\n    return list(map(int, get_ln_inputs()))\n\n\ndef main():\n    N = get_ln_int_inputs()[0]\n    K = get_ln_int_inputs()[0]\n    xs = get_ln_int_inputs()\n\n    ans = 0\n    for x in xs:\n        ans += min(abs(K - x), abs(x))\n\n    print(2 * ans)\n    return\n\n\nmain()"}
{"label": 87, "index": 11294, "code": "n = int(input().strip())\nk = int(input().strip())\nxs = [int(x) for x in input().strip().split()]\n\ntotal = 0\nfor x in xs:\n    if x < abs(x-k):\n        total += x*2\n    else:\n        total += abs(x-k)*2\nprint(total)\n"}
{"label": 87, "index": 11295, "code": "N = int(input())\nK = int(input())\nx = input()\nsplit_x = x.split()\nint_split_x = [int(i) for i in split_x]\nresult = 0\n\nfor i in range(0, len(int_split_x)):\n    if abs(K - int_split_x[i]) > abs(0 - int_split_x[i]):\n        result += (abs(0 - int_split_x[i]))*2\n    else:\n        result += (abs(K - int_split_x[i]))*2\n\nprint(result)\n"}
{"label": 87, "index": 11296, "code": "\nN = int(input())\n\nK = int(input())\n\nballs_x = input().split(' ')\n\nsum = 0\n\nfor ball_x_str in balls_x:\n\n    ball_x  = int(ball_x_str)\n\n    sum += min(ball_x, K - ball_x) * 2\n\nprint(sum)\n\n"}
{"label": 87, "index": 11297, "code": "N = int(input())\nK = int(input())\nx = list(map(int,input().split()))\nkyori = 0\nfor i in range(N):\n    kyori += min(x[i]*2,abs(K-x[i])*2)\nprint(kyori)"}
{"label": 87, "index": 11298, "code": "def main():\n    n = int(input())\n    k = int(input())\n    print(sum([2*min(k-int(i), int(i)) for i in input().split()]))\n\n\nif __name__ == \"__main__\":\n    main()"}
{"label": 87, "index": 11299, "code": "N = int(input())\nK = int(input())\npositions = map(int, input().split(\" \"))\n\nroboA_distance = 0\nroboB_distance = 0\nfor position in positions:\n  hoge = K-position\n  if hoge > position:\n    roboA_distance += position\n  else:\n    roboB_distance +=  hoge\nprint(2*(roboA_distance + roboB_distance))\n\n  \n  \n\n"}
{"label": 87, "index": 11300, "code": "N = int(input())\nK = int(input())\nxs = map(int, input().split())\n\nans = 0\nfor x in xs:\n    ans += min(2*x, 2*abs(x-K))\n\nprint(ans)"}
{"label": 87, "index": 11301, "code": "N = int(input())\nK = int(input())\nx = list(map(int,input().split(\" \")))\n\nsum = 0\n\nfor i in range(N):\n\tsum += abs(min(x[i], K - x[i]) * 2)\n\nprint(sum)"}
{"label": 87, "index": 11302, "code": "N, K, A = int(input()), int(input()), [int(v) for v in input().split()]\nR = 0\nfor a in A:\n  Na = abs(0-a)\n  Ka = abs(K-a)\n  r = Na if Na <= Ka else Ka\n  R += r * 2\n\nprint(R)"}
{"label": 87, "index": 11303, "code": "N=int(input())\nK=int(input())\nprint(2*sum([ min(x,K-x) for x in map(int,input().split()) ]))"}
{"label": 87, "index": 11304, "code": "n = int(input())\nk = int(input())\nx = list(map(int,input().split()))\ns = 0\nfor i in range(n):\n    s += min(k-x[i],x[i])\nprint(s*2)\n"}
{"label": 87, "index": 11305, "code": "dump = int(input())\nK = int(input())\nsum = 0\nx = list(map(int, input().split()))\nfor x_i in x:\n  sum += 2*min(x_i, K-x_i)\nprint(sum)"}
{"label": 87, "index": 11306, "code": "n=int(input())\nk=int(input())\nx=list(map(int,input().split()))\n\nans=0\nfor i in x:\n    ans += min(abs(i)*2,abs(k-i)*2)\n\nprint(ans)\n"}
{"label": 87, "index": 11307, "code": "N = int(input())\nK = int(input())\nx = [int(n) for n in input().split()]\n\nres = 0\nfor t in x:\n  res += 2*min(K-t, t)\n\nprint(res)\n"}
{"label": 87, "index": 11308, "code": "n = int(input())\nk = int(input())\nxs = map(int, input().split(\" \"))\n\ns = 0\n\nfor x in xs:\n    s += 2 * min(x - 0, abs(x - k))\n\nprint(s)\n"}
{"label": 87, "index": 11309, "code": "def calc_dist(N, K, x):\n    dists = [2 * min(K - x_i, x_i) for x_i in x]\n    return sum(dists)\n\nif __name__ == \"__main__\":\n    N = int(raw_input())\n    K = int(raw_input())\n    x = map(int, raw_input().split())\n    print(calc_dist(N, K, x))"}
{"label": 88, "index": 11310, "code": "a, b, c = list(map(int, input().split()))\n\nif a == b:\n    print(c)\nelif a == c:\n    print(b)\nelse:\n    print(a)"}
{"label": 88, "index": 11311, "code": "a,b,c = input().split()\na = int(a)\nb = int(b)\nc= int(c)\n\nif a == b:\n    print(c)\nelif b == c:\n    print(a)\nelse:\n    print(b)"}
{"label": 88, "index": 11312, "code": "l = list(map(int,input().split()))\nif l[0]==l[1]:\n    print(l[2])\nelif l[1]==l[2]:\n    print(l[0])\nelse:\n    print(l[1])"}
{"label": 88, "index": 11313, "code": "a = input().split()\nif a[0] == a[1]:print(a[2])\nif a[1] == a[2]:print(a[0])\nif a[2] == a[0]:print(a[1])"}
{"label": 88, "index": 11314, "code": "A,B,C = map(int, input().split())\nprint(A^B^C)"}
{"label": 88, "index": 11315, "code": "l = [int(x) for x in raw_input().split()]\nfor x in set(l):\n\tif l.count(x) == 1:\n\t\tprint x"}
{"label": 88, "index": 11316, "code": "nums = [ int(i) for i in input().split()]\nnums.sort()\nif nums[0] == nums[1]:\n    print(nums[2])\nelse:\n    print(nums[0])"}
{"label": 88, "index": 11317, "code": "# coding: utf-8\n\na = input().split()\n\nif a[0] == a[1]:\n    print(a[2])\nelif a[1] == a[2]:\n    print(a[0])\nelif a[0] == a[2]:\n    print(a[1])"}
{"label": 88, "index": 11318, "code": "A, B, C = sorted(map(int, input().split()))\nprint(A if A != B else C)\n"}
{"label": 88, "index": 11319, "code": "# -*- coding:utf-8 -*-\na = list(map(int, input().split()))\nd = set()\ne = [ tmp for tmp in a if tmp in d or d.add(tmp) ]\nfor tmp in a:\n    if tmp not in e:\n        print(tmp)\n        break"}
{"label": 88, "index": 11320, "code": "import sys\n\nstdin = sys.stdin\n\nni = lambda: int(ns())\nna = lambda: list(map(int, stdin.readline().split()))\nns = lambda: stdin.readline()\n\na,b,c = na()\nprint(a^b^c)"}
{"label": 88, "index": 11321, "code": "A,B,C=map(int, input().split())\nif A==B:\n print(C)\nelif B==C:\n print(A)\nelse:\n print(B)"}
{"label": 88, "index": 11322, "code": "from sys import stdin, stdout\ndef readLine_int_list():return list(map(int, stdin.readline().split()))\n\n\ndef main():\n\ta=sorted(readLine_int_list())\n\tprint(a[0] if a.count(a[0]) == 1 else (a[2]))\n\t\n\t\nif __name__ == \"__main__\":\n    main()"}
{"label": 88, "index": 11323, "code": "nums = [int(x) for x in input().split()]\n\nnums.sort()\n\nif nums[0] == nums[1]:\n\tprint(nums[2])\nelif nums[1] == nums[2]:\n\tprint(nums[0])"}
{"label": 88, "index": 11324, "code": "A,B,C = map(int,input().split())\nif A==B:\n    print(C)\nif A==C:\n    print(B)\nif B==C:\n    print(A)\n"}
{"label": 88, "index": 11325, "code": "x = list(map(int, input().split()))\n\nif x[0]==x[1]:\n    print(x[2])\n    quit()\nelif x[1]==x[2]:\n    print(x[0])\n    quit()\n\nprint(x[1])\n\nquit()"}
{"label": 88, "index": 11326, "code": "a,b,c = map(int,input().split())\nprint(a^b^c)"}
{"label": 88, "index": 11327, "code": "a, b, c = map(int, input().split())\nif a == b:\n    print(c)\nelif a == c:\n    print(b)\nelse:\n    print(a)\n"}
{"label": 88, "index": 11328, "code": "from sys import stdin\na,b,c = map(int,stdin.readline().split())\nprint a^b^c"}
{"label": 88, "index": 11329, "code": "a, b, c = map(int, input().split())\nif a==b:\n  print(c)\nelif b==c:\n  print(a)\nelse:\n  print(b)"}
{"label": 88, "index": 11330, "code": "a,b,c = map(int, input().split())\nprint(a^b^c)"}
{"label": 88, "index": 11331, "code": "a,b,c=map(int,input().split(' '))\nprint(a^b^c)"}
{"label": 88, "index": 11332, "code": "a, b, c = input().split(\" \")\n\nif a == b:\n    print(c)\nelif a == c:\n    print(b)\nelse:\n    print(a)\n"}
{"label": 88, "index": 11333, "code": "a, b, c = map(int, input().split())\n\nif a == b:\n    print(c)\nelif a == c:\n    print(b)\nelse:\n    print(a)\n\n"}
{"label": 88, "index": 11334, "code": "A, B, C = input().split(\" \")\n\nif A == B:\n    print(C)\nelif A == C:\n    print(B)\nelse:\n    print(A)"}
{"label": 88, "index": 11335, "code": "# -*- coding: utf-8 -*-\n\nimport sys\nfrom collections import Counter\n\n\ndef main():\n    for line in sys.stdin:\n        data = line.rstrip().split(\" \")\n        counter = Counter(data)\n        print(list(counter.most_common())[-1][0])\n\n\nif __name__ == \"__main__\":\n    main()\n"}
{"label": 88, "index": 11336, "code": "import sys\nfrom collections import Counter\n\n# sys.stdin = open('a1.in')\n\n\ndef read_int_list():\n    return list(map(int, input().split()))\n\n\ndef read_str_list():\n    return input().split()\n\n\ndef read_int():\n    return int(input())\n\n\ndef read_str():\n    return input()\n\n\ndef main():\n    n = read_int_list()\n    c = Counter(n)\n    for i in c:\n        if c[i] == 1:\n            print(i)\n\n\nmain()\n"}
{"label": 88, "index": 11337, "code": "def main():\n    A, B, C = map(int, input().split())\n\n    if A == B:\n        print(C)\n    elif B == C:\n        print(A)\n    else:\n        print(B)\n\nif __name__ == '__main__':\n    main()\n"}
{"label": 88, "index": 11338, "code": "nums = map(int, input().split())\nd = {}\nfor n in nums:\n  d.setdefault(n, 0)\n  d[n] += 1\nprint(list(d.keys())[list(d.values()).index(1)])"}
{"label": 88, "index": 11339, "code": "inputs=input().split()\nA = int(inputs[0])\nB = int(inputs[1])\nC = int(inputs[2])\n\nif A == B:\n    print(C)\nelif B == C:\n    print(A)\nelse:\n    print(B)"}
{"label": 88, "index": 11340, "code": "import math,heapq,collections,sys,numpy\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\n\na,b,c = LI()\nif a == b:\n    print(c)\nelif b == c:\n    print(a)\nelif a == c:\n    print(b)"}
{"label": 88, "index": 11341, "code": "a, b, c = (int(i) for i in input().split())\n\nif a==b:\n    print(c)\nelif b==c:\n    print(a)\nelse:\n    print(b)"}
{"label": 88, "index": 11342, "code": "a = list(map(int, input().split()))\nif a[0] == a[1]:\n    print(a[2])\nelif a[0] == a[2]:\n    print(a[1])\nelif a[1] == a[2]:\n    print(a[0])\n"}
{"label": 88, "index": 11343, "code": "import numpy as np\n\nA, B, C = (list(map(int, input().split())))\nif(A == B):\n  print(C)\nelif(A == C):\n  print(B)\nelse:\n  print(A)"}
{"label": 88, "index": 11344, "code": "# def makelist(n, m):\n#     return [[0 for i in range(m)] for j in range(n)]\n\n# n = int(input())\n# a, b = map(int, input().split())\n# s = input()\n\n\na, b, c = map(int, input().split())\n\nif a == b:\n    print(c)\nelif b == c:\n    print(a)\nelse:\n    print(b)\n"}
{"label": 88, "index": 11345, "code": "A, B, C = map(int, input().split())\nif(A == B):\n    print(C)\nelif(B == C):\n    print(A)\nelse:\n    print(B)\n"}
{"label": 88, "index": 11346, "code": "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\neps = 1.0 / 10**15\nmod = 10**9+7\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\n\n\ndef main():\n    a = LI()\n    if a[0] == a[1]:\n        return a[2]\n    if a[0] == a[2]:\n        return a[1]\n\n    return a[0]\n\n\nprint(main())\n\n\n"}
{"label": 88, "index": 11347, "code": "a,b,c=map(int,input().split())\nif a==b:\n    print(c)\nelif a==c:\n    print(b)\nelse:\n    print(a)"}
{"label": 88, "index": 11348, "code": "# -*- coding: utf-8 -*-\nimport traceback\n\n\ndef main():\n    _list = map(int,raw_input().split())\n    for val in _list:\n        if _list.count(val) == 1:\n            return val\n\nprint main()\n"}
{"label": 88, "index": 11349, "code": "a,b,c = input().split()\nif a == b:\n    print(c)\nelif b==c:\n    print(a)\nelse:\n    print(b)\n"}
{"label": 88, "index": 11350, "code": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\na, b, c = list(map(int, input().split()))\n\nif a == b:\n    print(c)\nelif a == c:\n    print(b)\nelse:\n    print(a)"}
{"label": 88, "index": 11351, "code": "A, B, C = map(int, input().split())\nif (A==B):\n    print(C)\nelif (A==C):\n    print(B)\nelse:\n    print(A)\n"}
{"label": 88, "index": 11352, "code": "nums=input().split()\nfor i in range(3):\n    nums[i]=int(nums[i])\n\nif nums[0]==nums[1]:\n    print(nums[2])\nelif nums[0]==nums[2]:\n    print(nums[1])\nelse:\n    print(nums[0])"}
{"label": 88, "index": 11353, "code": "a, b, c = map(int, raw_input().split())\nif a == b:\n    print c\nelif b == c:\n    print a\nelse:\n    print b"}
{"label": 88, "index": 11354, "code": "a=list(input().split())\nfor i in range(3):\n  if a.count(a[i])==1:\n    b=a[i]\nprint(b)"}
{"label": 88, "index": 11355, "code": "# coding: utf-8\na=list(map(int,input().split()))\nfor n in a:\n    if a.count(n)==1:\n        print(n)\n        break"}
{"label": 88, "index": 11356, "code": "A, B, C = map(int, raw_input().split()) \nif A == B:\n    print C\nelif A == C:\n    print B\nelse:\n    print A\n"}
{"label": 88, "index": 11357, "code": "import sys\n\nl = list(map(int, sys.stdin.readline().strip().split(\" \")))\n\nif (l[0] == l[1]):\n    print(str(l[2]))\nelif (l[1] == l[2]):\n    print(str(l[0]))\nelse:\n    print(str(l[1]))"}
{"label": 88, "index": 11358, "code": "\nA, B, C = map(int, input().split())\n\nif (A==B) & (A!=C):\n    print(C)\nelif (A==C) & (A!=B):\n    print(B)\nelse:\n    print(A)\n     "}
{"label": 88, "index": 11359, "code": "a,b,c = map(int, input().split(\" \"))\n\nif b == c:\n    print(a)\nelif a == c:\n    print(b)\nelse:\n    print(c)"}
{"label": 88, "index": 11360, "code": "A, B, C = map(int, input().split())\n\nif A == B:\n    print(C)\nelif A == C:\n    print(B)\nelse:\n    print(A)\n"}
{"label": 88, "index": 11361, "code": "x = input()\ny = x.split(\" \")\nif y[0] == y[1]:\n  print(y[2])\nelif y[1] == y[2]:\n  print(y[0])\nelif y[2] == y[0]:\n  print(y[1])\n"}
{"label": 88, "index": 11362, "code": "a,b,c = map(int,input().split())\nif a == b:\n\tprint(c)\nelif b == c:\n\tprint(a)\nelif c == a:\n\tprint(b)"}
{"label": 88, "index": 11363, "code": "a = [int(i) for i in input().split()]\na.sort()\nprint(a[2] if a[0] == a[1] else a[0])"}
{"label": 88, "index": 11364, "code": "A, B, C = map(int, input().split())\nif A == B:\n    print(C)\nelif B == C:\n    print(A)\nelse:\n    print(B)\n"}
{"label": 88, "index": 11365, "code": "A, B, C = map(int, input().split())\n\nif A == B:\n  Ans = C\nelse:\n  if A == C:\n    Ans = B\n  else:\n    Ans = A\n\nprint(Ans)"}
{"label": 88, "index": 11366, "code": "# coding: utf-8\nA, B, C = map(int, raw_input().split(' '))\n\nif A == B:\n    print C\nelif A == C:\n    print B\nelse:\n    print A"}
{"label": 88, "index": 11367, "code": "a,b,c=map(int,input().split())\nif a==b:\n  print(c)\nelif a==c:\n  print(b)\nelse: print(a)"}
{"label": 88, "index": 11368, "code": "A,B,C = list(map(int, input().split()))\n\nif A == B:\n    print(C)\nelif B == C:\n    print(A)\nelse:\n    print(B)\n"}
{"label": 88, "index": 11369, "code": "#ABC075A\n\na,b,c=map(int,raw_input().split())\nif a==b:\n print c\nelif a==c:\n print b\nelse:\n print a\n"}
{"label": 88, "index": 11370, "code": "a, b, c = map(int, raw_input().split())\n\nif b == c:\n\tans = a\nelif a == c:\n\tans = b\nelse:\n\tans = c\n\nprint str(ans)"}
{"label": 88, "index": 11371, "code": "X = map(int, raw_input().split())\nprint sum(X)-(sum(X)-min(X)-max(X))*2\n"}
{"label": 88, "index": 11372, "code": "def main():\n    ABC = tuple(map(int, input().split()))\n    print(lonelyInteger(ABC))\n\ndef lonelyInteger(array):\n    result = 0\n    for i in array:\n        result ^= i\n    return result\n\nmain()\n"}
{"label": 88, "index": 11373, "code": "a ,b ,c=map(int,raw_input().split())\nif a==b:\n  print(c)\nelif a==c:\n  print(b)\nelse:\n  print(a)\n"}
{"label": 88, "index": 11374, "code": "line=input().split()\na=int(line[0])\nb=int(line[1])\nc=int(line[2])\nif (a==b):\n    print (c)\nelif (b==c):\n    print(a)\nelif (a==c):\n    print(b)\n"}
{"label": 88, "index": 11375, "code": "a,b,c = [int(i) for i in input().split()]\nprint(a if a != b and a!= c else b if b!= a and b != c else c)\n"}
{"label": 88, "index": 11376, "code": "A, B, C = (input()).split()\nif A == B:\n    print(C)\nelif B == C:\n    print(A)\nelif C == A:\n    print(B)"}
{"label": 88, "index": 11377, "code": "n = input().split()\nif n[0] == n[1]:\n  print(n[2])\nelif n[0] == n[2]:\n  print(n[1])\nelse:\n  print(n[0])"}
{"label": 88, "index": 11378, "code": "A,B,C = map(int,input().split())\nif A == B:\n\tprint(C)\nelif B == C:\n\tprint(A)\nelse:\n\tprint(B)"}
{"label": 88, "index": 11379, "code": "from collections import Counter\nN = list(map(int,input().split()))\nc = Counter(N)\n\n\nfor k,v in c.items():\n     if v == 1:\n          print(k)\n"}
{"label": 88, "index": 11380, "code": "A,B,C = map(int,raw_input().split())\nif A == B:\n    print C\nelif A == C:\n    print B\nelse:\n    print A\n"}
{"label": 88, "index": 11381, "code": "a,b,c = (int(x) for x in input().split())\n\nprint(c if a == b else (b if a == c else a))"}
{"label": 88, "index": 11382, "code": "def main():\n    a, b, c = map(int, raw_input().split(\" \"))\n\n    if a == b:\n        print(c)\n    elif a == c:\n        print(b)\n    else:\n        print(a)\n        \nif __name__ == '__main__':\n    main()"}
{"label": 88, "index": 11383, "code": "*S,=map(int, input().split())\nS.sort()\nprint(S[0] if S[1] == S[2] else S[2])\n"}
{"label": 88, "index": 11384, "code": "a,b,c=map(int,raw_input().split(' '))\n\nif a==b:\n    print c\nelif b==c:\n    print a\nelse:\n    print b"}
{"label": 88, "index": 11385, "code": "A,B,C = map(int,input().split())\nif A==B:\n    print(C)\nelif B==C:\n    print(A)\nelse:\n    print(B)"}
{"label": 88, "index": 11386, "code": "A, B, C = map(int, input().split())\n\nprint(({A} ^ {B} ^ {C}).pop())\n"}
{"label": 88, "index": 11387, "code": "A, B, C = map(int, input().split())\n\nif A == B:\n    print(C)\nelif B == C:\n    print(A)\nelse:\n    print(B)"}
{"label": 88, "index": 11388, "code": "A,B,C = map(int, input().split())\nif A == B: \n\tprint(C)\nelif A == C:\n\tprint(B)\nelse:\n\tprint(A)"}
{"label": 88, "index": 11389, "code": "l = list(map(int, input().split()))\nif l[0]==l[1]:\n\tprint(l[2])\nelif l[0] ==l[2]:\n\tprint(l[1])\nelif l[1] ==l[2]:\n\tprint(l[0])\n"}
{"label": 88, "index": 11390, "code": "A = list(map(int, input().split()))\nprint(A[0]^A[1]^A[2])"}
{"label": 88, "index": 11391, "code": "# coding: utf-8\n# Here your code !\ns=list(map(int,input().rstrip().split()))\n\nfor i in s:\n    if( s.count(i) == 1 ):\n        print(i,flush=True)\n        break"}
{"label": 88, "index": 11392, "code": "S = input().split(\" \")\n\nA = int(S[0])\nB = int(S[1])\nC = int(S[2])\nif A == B:\n    print (C)\nelif B == C:\n    print(A)\nelse:\n    print(B)\n"}
{"label": 88, "index": 11393, "code": "A,B,C = list(map(int, input().strip().split()))\nif A == B:\n    print(C)\nelif A == C:\n    print(B)\nelse:\n    print(A)\n"}
{"label": 88, "index": 11394, "code": "a,b,c=map(int, input().split())\nif a == b: print(c)\nelif b == c: print(a)\nelse: print(b)"}
{"label": 88, "index": 11395, "code": "a, b, c = map(int, input().split())\t\t# 5 7 2\n\n\nif a==b:\n\tprint(c)\nelif a==c:\n\tprint(b)\nelse:\n\tprint(a)\n\n"}
{"label": 88, "index": 11396, "code": "# One out of Three\n\na,b,c = list(map(int, input().split()))\n\nif (a==b):\n    print(c)\nelse:\n    if (a==c):\n        print(b)\n    else:\n        print(a)"}
{"label": 88, "index": 11397, "code": "A, B, C = list(map(int, input().split()))\nif A == B:\n    print(C)\nelif B == C:\n    print(A)\nelse:\n    print(B)\n"}
{"label": 88, "index": 11398, "code": "a,b,c = map(int,input().split())\n\nif a == b:\n    print(c)\nelif a == c:\n    print(b)\nelse:\n    print(a)\n"}
{"label": 88, "index": 11399, "code": "from collections import defaultdict, Counter\nfrom itertools import product, groupby, count, permutations, combinations\nfrom math import pi, sqrt\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right\nINF = float(\"inf\")\n\n\ndef main():\n    A, B, C = map(int, input().split())\n    if A == B:\n        print(C)\n    elif A == C:\n        print(B)\n    elif B == C:\n        print(A)\n\n\n\nif __name__ == '__main__':\n    main()\n"}
{"label": 88, "index": 11400, "code": "A, B, C = map(int, input().split())\nif A == B:\n    print(C)\nelif B == C:\n    print(A)\nelse:\n    print(B)"}
{"label": 88, "index": 11401, "code": "# -*- coding: utf-8 -*-\n\na, b, c = map(int, raw_input().split())\n\nif a == b:\n  output = c\nelif a == c:\n  output =  b\nelse:\n  output = a\n\nprint(output)"}
{"label": 88, "index": 11402, "code": "a, b, c = map(int, raw_input().split())\nif a == b:\n    print c\nelse:\n    if a == c:\n        print b\n    else:\n        print a"}
{"label": 88, "index": 11403, "code": "#!/usr/bin/python3\n\nn = list(map(int, input().split()))\n\nh = {}\nfor i in n:\n    if i not in h:\n        h[i] = 0\n    h[i] += 1\n\nfor i in h.keys():\n    if h[i] < 2:\n        print(i)\n        exit()\n"}
{"label": 88, "index": 11404, "code": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n\"\"\"\n\"\"\"\n\n# import {{{\nfrom collections import ChainMap\nfrom collections import Counter\nfrom collections import defaultdict\nfrom collections import deque\nfrom collections import namedtuple\nimport bisect\nimport copy\nimport decimal\nimport fractions\nimport functools\nimport heapq\nimport itertools\nimport locale\nimport math\nimport operator\nimport pdb\nimport pprint\nimport random\nimport re\nimport string\nimport sys\nimport time\n\ntry:\n    import numpy as np\n    import scipy as sp\nexcept:\n    pass\n# }}}\n\n# util {{{\ndef is_odd(x):\n    return x % 2 == 1\n\ndef is_even(x):\n    return x % 2 == 0\n\ndef cmp(x, y):\n    return (x > y) - (x < y)\n\ndef sgn(x):\n    return cmp(x, 0)\n\ndef clamp(x, lo, hi):\n    assert lo <= hi\n    if x < lo:\n        return lo\n    elif x > hi:\n        return hi\n    else:\n        return x\n\ndef chmax(xmax, x):\n    if x > xmax:\n        return x, True\n    else:\n        return xmax, False\n\ndef chmin(xmin, x):\n    if x < xmin:\n        return x, True\n    else:\n        return xmin, False\n\ndef argmax(seq):\n    return max(range(len(seq)), key=seq.__getitem__)\n\ndef argmin(seq):\n    return min(range(len(seq)), key=seq.__getitem__)\n\ndef INPUT():\n    return input().rstrip() # CRLF\u5bfe\u7b56\n\nsys.setrecursionlimit(100000)\n\nlocale.setlocale(locale.LC_ALL, \"C\")\n# }}}\n\n# \u9069\u5b9c\u8abf\u6574\nPINF = float(\"inf\")\nNINF = float(\"-inf\")\nEPS  = 1e-9\n\n\n\ndef main():\n    X = list(map(int, input().split()))\n\n    X.sort()\n    if X[0] == X[1]:\n        print(X[2])\n    elif X[1] == X[2]:\n        print(X[0])\n\nif __name__ == \"__main__\": main()\n"}
{"label": 88, "index": 11405, "code": "l = raw_input().split()\n\nif l[0] == l[1] :\n\tprint l[2]\nelif l[1] == l[2] :\n\tprint l[0]\nelif l[0] == l[2] :\n\tprint l[1]\n"}
{"label": 88, "index": 11406, "code": "#!/usr/bin/env python\n#-*- coding: utf-8 -*-\n\nA, B, C = [int (i) for i in raw_input ().split ()]\nprint A ^ B ^ C"}
{"label": 88, "index": 11407, "code": "a,b,c = input().split()\nif a == b:\n    print(c)\nelif b==c:\n    print(a)\nelse:\n    print(b)"}
{"label": 88, "index": 11408, "code": "A,B,C=list(map(int,raw_input().split()))\nif A==B:\n\tprint C\nelif A==C:\n\tprint B\nelif B==C:\n\tprint A"}
{"label": 88, "index": 11409, "code": "if __name__ == '__main__':\n    A, B, C = map(int, input().split())\n    if A == B:\n        print(C)\n    elif B == C:\n        print(A)\n    else:\n        print(B)\n"}
{"label": 88, "index": 11410, "code": "A, B, C = map(int, input().split())\n\nif A == B:\n    print(C)\nelif B == C:\n    print(A)\nelse:\n    print(B)"}
{"label": 88, "index": 11411, "code": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nfrom collections import Counter\nnums = [int(i) for i in input().split()]\ncounter = Counter(nums)\nfor key, value in counter.items():\n    if value == 1:\n        print(key)\n        "}
{"label": 88, "index": 11412, "code": "A,B,C = map(int,input().split())\nif A == B: print(C)\nelif B == C: print(A)\nelse: print(B)\n"}
{"label": 88, "index": 11413, "code": "# coding: utf-8\n# Here your code !\ns=list(map(int,input().rstrip().split()))\n\nfor i in s:\n    if( s.count(i) == 1 ):\n        print(i,flush=True)\n        break\n\n\n"}
{"label": 88, "index": 11414, "code": "nums=raw_input().split(' ')\nif nums[0]!=nums[1]:\n if nums[0]==nums[2]:\n  print nums[1]\n else:print nums[0]\nelse:print nums[2]"}
{"label": 88, "index": 11415, "code": "A, B, C = input().split()\nif A == B:\n    print(C)\nelif A == C:\n    print(B)\nelse:\n    print(A)\n    "}
{"label": 88, "index": 11416, "code": "A, B, C = map(int, input().split())\n\nif A == B:\n    print(C)\nelif B == C:\n    print(A)\nelse:\n    print(B)"}
{"label": 88, "index": 11417, "code": "A,B,C=map(int,input().split())\nprint(A^B^C)"}
{"label": 88, "index": 11418, "code": "#https://beta.atcoder.jp/contests/abc075\n# -*- coding: utf-8 -*-\na,b,c = map(int,input().split())\n\nif a == b : print(c)\nif b == c : print(a)\nif c == a : print(b)\n"}
{"label": 88, "index": 11419, "code": "a,b,c = input().split()\nif a == b:\n    print(c)\nelse:\n    if a == c:\n        print(b)\n    else:\n        print(a)"}
{"label": 88, "index": 11420, "code": "a,b,c = map(int, raw_input().split())\nif a == b:\n    print c\nelif a == c:\n    print b\nelse:\n    print a\n"}
{"label": 88, "index": 11421, "code": "a, b, c = map(int, input().split())\nif a == b:\n    print(c)\nif a == c:\n    print(b)\nif b == c:\n    print(a)\n"}
{"label": 88, "index": 11422, "code": "#! /usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nA,B,C = map(int,input().split(\" \"))\n\nif A ==  B:\n\tprint(C)\nelif B == C:\n\tprint(A)\nelse:\n\tprint(B)"}
{"label": 88, "index": 11423, "code": "#!/usr/bin/env python\n#-*- coding: utf-8 -*-\n\nfrom collections import defaultdict\nfrom math import factorial as f\nfrom fractions import gcd as g\n\nl = [int (i) for i in raw_input ().split ()]\nd = defaultdict (int)\nfor i in l: d [i] += 1\nprint [i for i in d if d [i] == 1][0]\n\n"}
{"label": 88, "index": 11424, "code": "a, b, c = input().split()\n\nif a == b:\n    print(c)\nelif a == c:\n    print(b)\nelse:\n    print(a)\n"}
{"label": 88, "index": 11425, "code": "#!/usr/bin/env python\n\na, b, c = map(int, input().split())\n\nif a == b:\n    print(c)\nelif b == c:\n    print(a)\nelif c == a:\n    print(b)\nelse:\n    pass"}
{"label": 88, "index": 11426, "code": "A, B, C = map(int,input().split())\n\nif A==C:\n    print(B)\n\nelif A==B:\n    print(C)\n\nelse:\n    print(A)"}
{"label": 88, "index": 11427, "code": "a = list(map(int,input().split()))\na.sort()\n\nans = a[0]\nif a[0] == a[1]:\n    ans = a[2]\nprint(ans)\n"}
{"label": 88, "index": 11428, "code": "a, b, c = map(int, input().split())\nif(a==b): print(c)\nif(b==c) :print(a)\nif(a==c) :print(b)\n"}
{"label": 88, "index": 11429, "code": "a, b, c = map(int, input().split())\nprint(a^b^c)"}
{"label": 88, "index": 11430, "code": "a,b,c=input().strip().split(' ')\nif a==b:\n  print(c)\nelif a==c:\n  print(b)\nelif b==c:\n  print(a)"}
{"label": 88, "index": 11431, "code": "# -*- coding: utf-8 -*-\n\"\"\"\nhttps://beta.atcoder.jp/contests/abc075/tasks/abc075_a\n\n\"\"\"\nimport sys\nfrom sys import stdin\ninput = stdin.readline\n\n\ndef main(args):\n    A, B, C = map(int, input().split())\n    ans = 0\n    if A == B:\n        ans = C\n    elif B == C:\n        ans = A\n    else:\n        ans = B\n    print(ans)\n\n\nif __name__ == '__main__':\n    main(sys.argv[1:])\n    \n"}
{"label": 88, "index": 11432, "code": "a, b, c = [int(i) for i in input().split(\" \")]\n\n\nif a == b:\n    print(c)\nelif b == c:\n    print(a)\nelif a == c:\n    print(b)\n\n"}
{"label": 88, "index": 11433, "code": "from collections import defaultdict\n\n\ndef main():\n    d = defaultdict(lambda: 0)\n    for i in input().split():\n        d[int(i)] += 1\n    d = {v:k for k, v in d.items()}\n    print(d[1])\n    \n\nif __name__ == \"__main__\":\n    main()"}
{"label": 88, "index": 11434, "code": "from collections import Counter\n\nnum = list(map(int,input().split()))\nc = Counter(num)\n\nprint(c.most_common()[1][0])"}
{"label": 88, "index": 11435, "code": "a, b, c = map(int, input().split())\n\nif a == b:\n    x = c\nelif b == c:\n    x= a\nelse:\n    x = b\n\nprint(x)\n"}
{"label": 88, "index": 11436, "code": "a,b,c = map(int,input().split())\nif a == b:\n    print(c)\nelif a == c:\n    print(b)\nelse:\n    print(a)"}
{"label": 88, "index": 11437, "code": "a,b,c=[int(i) for i in input().split()]\n\nif a==b:\n  print(c)\nelif b==c:\n  print(a)\nelse:\n  print(b)"}
{"label": 88, "index": 11438, "code": "num = input().split()\nnum = [int(x) for x in num]\n\nfor i in num:\n    if num.count(i) == 1:\n        print(i)"}
{"label": 88, "index": 11439, "code": "a,b,c=input().split()\n\nif a==c:\n    print(b)\nelif b==c:\n    print(a)\nelse:\n    print(c)"}
